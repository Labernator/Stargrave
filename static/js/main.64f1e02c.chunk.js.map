{"version":3,"sources":["redux/actions.ts","images/ImportCrew.png","pages/Overview/LandingPage.tsx","data/Interfaces.ts","data/Utils.ts","components/PdfSections.tsx","components/PdfLayout.tsx","images/Completed.png","images/Loading.png","pages/Overview/PdfCreationPage.tsx","index.tsx","redux/reducer.ts"],"names":["SET_WARBAND","LandingPage","history","useHistory","dispatch","useDispatch","className","style","textAlign","htmlFor","id","type","accept","display","onChange","reader","FileReader","onload","ev","jsobject","yaml","target","result","payload","push","readAsText","document","querySelector","files","item","margin","src","ImportCrewPng","onClick","getElementById","click","isHero","unit","undefined","hero","isSpell","skillOrSpell","castingCost","AllSkills","Skills","AllSpells","Spells","AllEquipment","Equipment","AllArmour","filter","eq","Armour","AllMeleeWeapons","MeleeWeapons","AllMissileWeapons","MissileWeapons","AllMiscallaneous","Miscallaneous","extractExperience","nameAndXp","bracketStart","lastIndexOf","bracketEnd","parseInt","substring","getNextLevelUp","currentXp","extractName","group","classStart","extractClass","classEnd","extractHenchmenBodies","henchmen","numberEnd","isNaN","charAt","getRoutLimit","heroes","Math","ceil","length","reduce","prev","curr","getWarbandSize","findSkills","units","unitsWithRules","rules","skills","Set","acc","regex","RegExp","unitRules","split","map","rule","trim","foundSkill","find","skill","name","indexOf","mappedSpells","entry","accum","element","foundSpell","spell","console","log","getEquipmentRules","ruleString","EquipmentRules","WarbandHeader","warband","justifyContent","heros","henchmanGroup","isLargeHenchman","gc","shards","UnitHeader","Unit","StatSection","statLine","statString","statArr","subString","replace","M","WS","BS","S","T","W","I","A","LD","Sv","getStatLine","stats","borderTop","flexDirection","Object","entries","key","value","RulesSection","Fragment","WeaponsSection","weapons","ArmourSection","armour","PDFLayout","state","useContext","ReactReduxContext","store","getState","top","marginLeft","PDFInfoPage","spells","entity","equipment","unitsWithEquipment","uniqueEquipment","unitWeapons","unitArmour","weapon","foundArmour","equi","foundEquipment","melee","missile","misc","findEquipment","notes","text","armourType","isArmour","strengthModifier","isMelee","genus","isMisc","range","isMissile","strength","PdfCreationPage","exportPdf","jsPdf","jsPDF","html2canvas","scale","canvas","addImage","toDataURL","internal","pageSize","getWidth","getHeight","addPage","save","useState","showSuccess","setSuccess","useEffect","CompletedPng","width","goBack","LoadingPng","AppContainer","connect","path","component","createStore","action","ReduxActions","compose","window","devToolsExtension","f","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.64f1e02c.chunk.js","sourcesContent":["import { WarbandState } from \"../data/Interfaces\";\r\nexport const SET_WARBAND = \"SET_WARBAND\";\r\n\r\ninterface SetWarband {\r\n    type: typeof SET_WARBAND;\r\n    payload: WarbandState;\r\n}\r\n\r\nexport type Actions = SetWarband;\r\n","export default __webpack_public_path__ + \"static/media/ImportCrew.e5abae4c.png\";","import * as yaml from \"js-yaml\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SET_WARBAND } from \"../../redux/actions\";\r\nimport ImportCrewPng from \"./../../images/ImportCrew.png\";\r\nexport const LandingPage = () => {\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    return <div className=\"flex-container\" style={{ textAlign: \"center\" }}>\r\n        <label htmlFor=\"file-uploader\" className=\"flex-container\">\r\n            <input\r\n                id=\"file-uploader\"\r\n                type=\"file\"\r\n                accept=\".yml\"\r\n                style={{ display: \"none\" }}\r\n                onChange={() => {\r\n                    const reader = new FileReader();\r\n                    reader.onload = (ev: ProgressEvent<FileReader>) => {\r\n                        const jsobject = yaml.load(ev.target?.result as string);\r\n                        dispatch({ type: SET_WARBAND, payload: jsobject });\r\n                        history.push(\"/PdfExport\");\r\n                    };\r\n                    reader.readAsText((document.querySelector(\"#file-uploader\") as HTMLInputElement)?.files?.item(0) as File);\r\n                }}\r\n            />\r\n            <img style={{ margin: \"5rem 1rem\" }} src={ImportCrewPng}></img>\r\n            <div className=\"large-header\" onClick={() => document.getElementById(\"file-uploader\")?.click()}>Tap here to load your .yml file and get a nice pdf for it</div>\r\n        </label>\r\n    </div>;\r\n};\r\n","export interface WarbandState {\r\n    warband: string;\r\n    campaign: number;\r\n    gc: number;\r\n    shards: number;\r\n    objective: string;\r\n    alignment: string;\r\n    heros?: HerosEntity[];\r\n    henchmen?: HenchmenEntity[];\r\n    notes?: string;\r\n}\r\nexport interface HerosEntity {\r\n    hero: string;\r\n    stats: string;\r\n    weapons: string;\r\n    armour?: string;\r\n    rules?: string;\r\n    skilllists: string;\r\n}\r\nexport interface HenchmenEntity {\r\n    group: string;\r\n    stats: string;\r\n    weapons?: string;\r\n    armour?: string;\r\n    rules?: string;\r\n}\r\n\r\nexport const isHero = (unit: HenchmenEntity | HerosEntity): unit is HerosEntity => (unit as HerosEntity).hero !== undefined;\r\nexport interface Stats {\r\n    M: number;\r\n    WS: number;\r\n    BS: number;\r\n    S: number;\r\n    T: number;\r\n    W: number;\r\n    I: number;\r\n    A: number;\r\n    LD: number;\r\n    Sv: string;\r\n}\r\nexport interface SkillsEntity {\r\n    name: string;\r\n    type: string;\r\n    text: string;\r\n    prerequisite?: Prerequisite;\r\n}\r\nexport interface Prerequisite {\r\n    type: string;\r\n    condition: number | string;\r\n    lookup?: string;\r\n}\r\n\r\nexport interface SpellsEntity {\r\n    name: string;\r\n    type: string;\r\n    castingCost: string;\r\n    text: string;\r\n}\r\n\r\nexport const isSpell = (skillOrSpell: SkillsEntity | SpellsEntity): skillOrSpell is SpellsEntity => (skillOrSpell as SpellsEntity).castingCost !== undefined;\r\n\r\nexport interface EquipmentEntity {\r\n    MeleeWeapons?: MeleeWeaponsEntity[];\r\n    MissileWeapons?: MissileWeaponsEntity[];\r\n    Armour?: ArmourEntity[];\r\n    Miscallaneous?: MiscallaneousEntity[];\r\n}\r\nexport interface MeleeWeaponsEntity {\r\n    type: string;\r\n    cost: number;\r\n    rarity: number;\r\n    weaponType: string;\r\n    rules?: string[];\r\n    strengthModifier: string;\r\n}\r\nexport interface MissileWeaponsEntity {\r\n    type: string;\r\n    cost: number;\r\n    rarity: number;\r\n    weaponType: string;\r\n    rules?: string[];\r\n    strength: number | string;\r\n    range: number;\r\n    variableCost?: string;\r\n}\r\nexport interface ArmourEntity {\r\n    type: string;\r\n    cost: number;\r\n    rarity: number;\r\n    armourType: string;\r\n    rules?: string[];\r\n    armour: number;\r\n    variableCost?: string;\r\n}\r\nexport interface MiscallaneousEntity {\r\n    type: string;\r\n    cost: number;\r\n    variableCost?: string;\r\n    rarity: number;\r\n    genus: string;\r\n    rules?: string[];\r\n    text?: string;\r\n}\r\n\r\nexport const isArmour = (equipment: ArmourEntity | MiscallaneousEntity | MissileWeaponsEntity | MeleeWeaponsEntity): equipment is ArmourEntity => (equipment as ArmourEntity).armourType !== undefined;\r\nexport const isMisc = (equipment: ArmourEntity | MiscallaneousEntity | MissileWeaponsEntity | MeleeWeaponsEntity): equipment is MiscallaneousEntity => (equipment as MiscallaneousEntity).genus !== undefined;\r\nexport const isMelee = (equipment: ArmourEntity | MiscallaneousEntity | MissileWeaponsEntity | MeleeWeaponsEntity): equipment is MeleeWeaponsEntity => (equipment as MeleeWeaponsEntity).strengthModifier !== undefined;\r\nexport const isMissile = (equipment: ArmourEntity | MiscallaneousEntity | MissileWeaponsEntity | MeleeWeaponsEntity): equipment is MissileWeaponsEntity => (equipment as MissileWeaponsEntity).range !== undefined;\r\n\r\nexport interface EquipmentRulesEntity {\r\n    name: string;\r\n    text: string;\r\n}\r\n","import * as Equipment from \"./../data/Equipment.json\";\r\nimport * as EquipmentRules from \"./../data/EquipmentRules.json\";\r\nimport * as Skills from \"./../data/Skills.json\";\r\nimport * as Spells from \"./../data/Spells.json\";\r\nimport { ArmourEntity, EquipmentEntity, EquipmentRulesEntity, HenchmenEntity, HerosEntity, isHero, MeleeWeaponsEntity, MiscallaneousEntity, MissileWeaponsEntity, SkillsEntity, SpellsEntity, Stats } from \"./Interfaces\";\r\n\r\nconst AllSkills = Skills.Skills as SkillsEntity[];\r\nconst AllSpells = Spells.Spells as SpellsEntity[];\r\nconst AllEquipment = Equipment.equipment as EquipmentEntity[];\r\nconst AllArmour = AllEquipment.filter((eq) => eq.Armour)[0].Armour as ArmourEntity[];\r\nconst AllMeleeWeapons = AllEquipment.filter((eq) => eq.MeleeWeapons)[0].MeleeWeapons as MeleeWeaponsEntity[];\r\nconst AllMissileWeapons = AllEquipment.filter((eq) => eq.MissileWeapons)[0].MissileWeapons as MissileWeaponsEntity[];\r\nconst AllMiscallaneous = AllEquipment.filter((eq) => eq.Miscallaneous)[0].Miscallaneous as MiscallaneousEntity[];\r\nexport const extractExperience = (hero: HerosEntity): number => {\r\n    const nameAndXp = hero.hero;\r\n    const bracketStart = nameAndXp.lastIndexOf(\"[\");\r\n    const bracketEnd = nameAndXp.lastIndexOf(\"]\");\r\n    return parseInt(nameAndXp.substring(bracketStart + 1, bracketEnd), 10);\r\n};\r\n\r\nexport const getNextLevelUp = (currentXp: number): number => {\r\n    switch (currentXp) {\r\n        case 0:\r\n        case 1: return 2;\r\n        case 2:\r\n        case 3: return 4;\r\n        case 4:\r\n        case 5: return 6;\r\n        case 6:\r\n        case 7: return 8;\r\n        case 8:\r\n        case 9:\r\n        case 10: return 11;\r\n        case 11:\r\n        case 12:\r\n        case 13: return 14;\r\n        case 14:\r\n        case 15:\r\n        case 16: return 17;\r\n        case 17:\r\n        case 18:\r\n        case 19: return 20;\r\n        case 20:\r\n        case 21:\r\n        case 22:\r\n        case 23: return 24;\r\n        case 24:\r\n        case 25:\r\n        case 26:\r\n        case 27: return 28;\r\n        case 28:\r\n        case 29:\r\n        case 30:\r\n        case 31: return 32;\r\n        case 32:\r\n        case 33:\r\n        case 34:\r\n        case 35: return 36;\r\n        case 36:\r\n        case 37:\r\n        case 38:\r\n        case 39:\r\n        case 40: return 41;\r\n        default: return 0;\r\n    }\r\n};\r\n\r\nexport const extractName = (unit: HerosEntity | HenchmenEntity): string => {\r\n    const nameAndXp = isHero(unit) ? unit.hero : unit.group;\r\n    const classStart = nameAndXp.lastIndexOf(\"(\");\r\n    return nameAndXp.substring(0, classStart);\r\n};\r\n\r\nexport const extractClass = (unit: HerosEntity | HenchmenEntity): string => {\r\n    const nameAndXp = isHero(unit) ? unit.hero : unit.group;\r\n    const classStart = nameAndXp.lastIndexOf(\"(\");\r\n    const classEnd = nameAndXp.lastIndexOf(\")\");\r\n    return nameAndXp.substring(classStart + 1, classEnd);\r\n};\r\n\r\nexport const extractHenchmenBodies = (henchmen: HenchmenEntity): number => {\r\n    const nameAndXp = henchmen.group;\r\n    const bracketStart = nameAndXp.lastIndexOf(\"(\");\r\n    const numberEnd = isNaN(parseInt(nameAndXp.charAt(bracketStart + 2), 10)) ? bracketStart + 2 : bracketStart + 3;\r\n    return parseInt(nameAndXp.substring(bracketStart + 1, numberEnd), 10);\r\n};\r\n\r\nexport const isLargeHenchman = (henchmanGroup: HenchmenEntity): boolean => {\r\n    const rules = henchmanGroup.rules;\r\n    if (rules) {\r\n        return rules.indexOf(\"Large\") !== -1;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const getWarbandRating = (heroes: HerosEntity[], henchmen: HenchmenEntity[]): number => {\r\n    const experience = heroes.reduce((prev, curr) => prev + extractExperience(curr), 0) || 0;\r\n    const heroBodies = heroes.length * 5;\r\n    const henchmenBodies = henchmen.reduce((prev, curr) => prev + extractHenchmenBodies(curr) + (isLargeHenchman(curr) ? 3 : 0), 0) * 5;\r\n    return experience + heroBodies + henchmenBodies;\r\n};\r\n\r\nexport const getWarbandSize = (heroes: HerosEntity[], henchmen: HenchmenEntity[]): number => heroes.length + henchmen.reduce((prev, curr) => prev + extractHenchmenBodies(curr), 0);\r\nexport const getRoutLimit = (heroes: HerosEntity[], henchmen: HenchmenEntity[]): number => Math.ceil(getWarbandSize(heroes, henchmen) / 4);\r\n\r\nexport const getStatLine = (statString: string): Stats => {\r\n    const statArr = statString.split(\",\").map((subString) => parseInt(subString.replace(/^\\D+/g, \"\"), 10));\r\n    return {\r\n        M: statArr[0],\r\n        WS: statArr[1],\r\n        BS: statArr[2],\r\n        S: statArr[3],\r\n        T: statArr[4],\r\n        W: statArr[5],\r\n        I: statArr[6],\r\n        A: statArr[7],\r\n        LD: statArr[8],\r\n        Sv: statString.substring(statString.indexOf(\"Sv\") + 2),\r\n    };\r\n};\r\n\r\nexport const findSkills = (units: Array<HerosEntity | HenchmenEntity>): Array<SpellsEntity | SkillsEntity | undefined> => {\r\n    const unitsWithRules = units.filter((unit) => unit.rules);\r\n    const uniqueRules = [...new Set(unitsWithRules.reduce((acc, unit) => {\r\n        if (unit.rules) {\r\n            const regex = new RegExp(/(?<!\\()\\,(?![\\w\\s]*[\\)])/);\r\n            const unitRules = unit.rules.split(regex).map((rule) => rule.trim());\r\n            return [...acc, ...unitRules];\r\n        }\r\n        return acc;\r\n    }, [] as string[]))];\r\n    // tslint:disable: no-console\r\n    const skills = uniqueRules.reduce((acc, rule) => {\r\n        const foundSkill = AllSkills.find((skill) => skill.name === rule);\r\n        if (foundSkill) {\r\n            return [...acc, foundSkill];\r\n        }\r\n        if (rule.indexOf(\"Wizard\") !== -1) {\r\n            const classStart = rule.lastIndexOf(\"(\");\r\n            const classEnd = rule.lastIndexOf(\")\");\r\n            const spellName = rule.substring(classStart + 1, classEnd);\r\n            const allSpells = spellName.split(\",\").map((entry) => entry.trim());\r\n            const mappedSpells = allSpells.reduce((accum, element) => {\r\n                const foundSpell = AllSpells.find((spell) => spell.name === element);\r\n                if (foundSpell) {\r\n                    return [...accum, foundSpell];\r\n                }\r\n                return accum;\r\n            }, [] as SpellsEntity[]);\r\n            return [...acc, ...mappedSpells];\r\n        }\r\n        return acc;\r\n    }, [] as Array<SpellsEntity | SkillsEntity>);\r\n    console.log(skills);\r\n    return skills;\r\n};\r\n\r\nexport const findEquipment = (units: Array<HerosEntity | HenchmenEntity>): Array<MeleeWeaponsEntity | MissileWeaponsEntity | ArmourEntity | MiscallaneousEntity> => {\r\n    const unitsWithEquipment = units.filter((unit) => unit.weapons || unit.armour);\r\n    const uniqueEquipment = [...new Set(unitsWithEquipment.reduce((acc, unit) => {\r\n        let unitWeapons: string[] = [];\r\n        let unitArmour: string[] = [];\r\n        if (unit.weapons) {\r\n            unitWeapons = unit.weapons.split(\",\").map((weapon) => weapon.trim());\r\n        }\r\n        if (unit.armour) {\r\n            unitArmour = unit.armour.split(\",\").map((armour) => armour.trim());\r\n        }\r\n        return [...acc, ...unitWeapons, ...unitArmour];\r\n    }, [] as string[]))];\r\n    const foundArmour = uniqueEquipment.map((equi) => {\r\n        const foundEquipment = AllArmour.find((equipment) => equipment.type === equi.trim());\r\n        if (foundEquipment) {\r\n            return foundEquipment;\r\n        }\r\n        return undefined;\r\n    }).filter((equi) => equi) as ArmourEntity[];\r\n    const melee = uniqueEquipment.map((equi) => {\r\n        const foundEquipment = AllMeleeWeapons.find((equipment) => equipment.type === equi.trim());\r\n        if (foundEquipment) {\r\n            return foundEquipment;\r\n        }\r\n        return undefined;\r\n    }).filter((equi) => equi) as MeleeWeaponsEntity[];\r\n    const missile = uniqueEquipment.map((equi) => {\r\n        const foundEquipment = AllMissileWeapons.find((equipment) => equipment.type === equi.trim());\r\n        if (foundEquipment) {\r\n            return foundEquipment;\r\n        }\r\n        return undefined;\r\n    }).filter((equi) => equi) as MissileWeaponsEntity[];\r\n    const misc = uniqueEquipment.map((equi) => {\r\n        const foundEquipment = AllMiscallaneous.find((equipment) => equipment.type === equi.trim());\r\n        if (foundEquipment) {\r\n            return foundEquipment;\r\n        }\r\n        return undefined;\r\n    }).filter((equi) => equi) as MiscallaneousEntity[];\r\n    return [...foundArmour, ...melee, ...missile, ...misc];\r\n};\r\n\r\nexport const getEquipmentRules = (rules: string[]): EquipmentRulesEntity[] => {\r\n    const mappedRules = rules.map((ruleString) => EquipmentRules.rules.find((rule) => rule.name === ruleString));\r\n    return mappedRules.filter((entry) => entry) as EquipmentRulesEntity[];\r\n};\r\n","import React from \"react\";\r\nimport { HenchmenEntity, HerosEntity, isHero, WarbandState } from \"../data/Interfaces\";\r\nimport { extractClass, extractExperience, extractName, getNextLevelUp, getRoutLimit, getStatLine, getWarbandRating } from \"../data/Utils\";\r\n\r\nexport const WarbandHeader = ({ warband }: { warband: WarbandState }) =>\r\n    <div className=\"unit-container\">\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Warband Name: </div>\r\n                <div className=\"text-with-margins\">{warband.warband}</div>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Warband Rating: </div>\r\n                <div className=\"text-with-margins\">{getWarbandRating(warband.heros || [], warband.henchmen || [])}</div>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Rout Limit: </div>\r\n                <div className=\"text-with-margins\">{getRoutLimit(warband.heros || [], warband.henchmen || [])}</div>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Gold Coins: </div>\r\n                <div className=\"text-with-margins\">{warband.gc}</div>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n                <div className=\"bold-text-with-margins\">Shards: </div>\r\n                <div className=\"text-with-margins\">{warband.shards}</div>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n\r\nexport const UnitHeader = ({ Unit }: { Unit: HerosEntity | HenchmenEntity }) =>\r\n    <div className=\"unit-layout\">\r\n        <div style={{ display: \"flex\" }}>\r\n            <div className=\"bold-text-with-margins\">Name: </div>\r\n            <div className=\"text-with-margins\">{extractName(Unit)}</div>\r\n        </div>\r\n        <div style={{ display: \"flex\" }}>\r\n            <div className=\"bold-text-with-margins\">Type: </div>\r\n            <div className=\"text-with-margins\">{extractClass(Unit)}</div>\r\n        </div>\r\n        {isHero(Unit) ? <div style={{ display: \"flex\" }}>\r\n            <div className=\"bold-text-with-margins\">Level: </div>\r\n            <div className=\"text-with-margins\">{`${extractExperience(Unit)} [ +${getNextLevelUp(extractExperience(Unit)) - extractExperience(Unit)} ]`}</div>\r\n        </div> : <div></div>}\r\n    </div>;\r\n\r\nexport const StatSection = ({ Unit }: { Unit: HerosEntity | HenchmenEntity }) => {\r\n    const statLine = getStatLine(Unit.stats);\r\n\r\n    return <div className=\"unit-layout\" style={{ borderTop: \"0.1rem solid\" }}>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <div style={{ display: \"flex\" }}>\r\n                {Object.entries(statLine).map(([key, value]) =>\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\" }}><div className=\"bold-text-with-margins\">{key}</div><div className=\"text-with-margins\" style={{ textAlign: \"center\" }}>{value}</div></div>\r\n                )}\r\n            </div>\r\n        </div>\r\n        <WeaponsSection Unit={Unit} />\r\n        <ArmourSection Unit={Unit} />\r\n    </div >;\r\n};\r\n\r\nexport const RulesSection = ({ Unit }: { Unit: HerosEntity | HenchmenEntity }) => {\r\n    const rules = Unit.rules;\r\n    return rules ? <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n        <div className=\"bold-text-with-margins\">Rules: </div>\r\n        <div className=\"text-with-margins\">{rules}</div>\r\n    </div> : <React.Fragment />;\r\n};\r\n\r\nexport const WeaponsSection = ({ Unit }: { Unit: HerosEntity | HenchmenEntity }) => {\r\n    const weapons = Unit.weapons;\r\n    return weapons ? <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <div className=\"bold-text-with-margins\">Weapons: </div>\r\n        <div className=\"text-with-margins\">{weapons}</div>\r\n    </div> : <React.Fragment />;\r\n};\r\n\r\nexport const ArmourSection = ({ Unit }: { Unit: HerosEntity | HenchmenEntity }) => {\r\n    const armour = Unit.armour;\r\n    return armour ? <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <div className=\"bold-text-with-margins\">Armour: </div>\r\n        <div className=\"text-with-margins\">{armour}</div>\r\n    </div> : <React.Fragment />;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { ReactReduxContext } from \"react-redux\";\r\nimport { isArmour, isMelee, isMisc, isMissile, isSpell, SkillsEntity, SpellsEntity, WarbandState } from \"../data/Interfaces\";\r\nimport { findEquipment, findSkills, getEquipmentRules } from \"../data/Utils\";\r\nimport \"./Pdf.css\";\r\nimport { RulesSection, StatSection, UnitHeader, WarbandHeader } from \"./PdfSections\";\r\n\r\nexport const PDFLayout = ({ }: {}) => {\r\n    const { store } = useContext(ReactReduxContext);\r\n    const state = store.getState() as WarbandState;\r\n    const heroes = state.heros || [];\r\n    const henchmen = state.henchmen || [];\r\n    const units = [...heroes, ...henchmen];\r\n    findSkills(units);\r\n    return <React.Fragment>\r\n        <div className=\"pdf-container\" style={{ top: \"-10000px\" }} id=\"pdf-roster\">\r\n            <WarbandHeader warband={state} />\r\n            {units.map((unit) =>\r\n                <div className=\"unit-container\">\r\n                    <UnitHeader Unit={unit} />\r\n                    <StatSection Unit={unit} />\r\n                    <RulesSection Unit={unit} />\r\n                </div>)}\r\n            <div style={{ marginLeft: \"1rem\" }}>* the [ +* ] notation behind the level states how many level ups you need to gain an advance</div>\r\n        </div>\r\n\r\n    </React.Fragment>;\r\n};\r\n\r\nexport const PDFInfoPage = ({ }: {}) => {\r\n    const { store } = useContext(ReactReduxContext);\r\n    const state = store.getState() as WarbandState;\r\n    const heroes = state.heros || [];\r\n    const henchmen = state.henchmen || [];\r\n    const units = [...heroes, ...henchmen];\r\n    const spells = findSkills(units).filter((entity) => entity && isSpell(entity)) as SpellsEntity[];\r\n    const skills = findSkills(units).filter((entity) => entity && !isSpell(entity)) as SkillsEntity[];\r\n    const equipment = findEquipment(units);\r\n    return <React.Fragment>\r\n        <div className=\"pdf-container\" id=\"pdf-info-page\">\r\n            <WarbandHeader warband={state} />\r\n            <div className=\"unit-container\">\r\n                {state.notes ? <React.Fragment><div className=\"large-header\">Notes</div>\r\n                    <div className=\"text-with-margins\">{state.notes}</div>\r\n                </React.Fragment> : undefined}\r\n                {skills.length > 0 ? <React.Fragment>\r\n                    <div className=\"large-header\">Skills and other Rules</div>\r\n                    {skills.map((entity) => <div className=\"info-page-flexbox\">\r\n                        <div className=\"bold-text-with-margins\">{entity.type === \"Generic\" ? `${entity.name}` : `${entity.name} (${entity.type})`}</div>\r\n                        <div className=\"text-with-margins\">{entity.text}</div>\r\n                    </div>)}\r\n                </React.Fragment> : undefined}\r\n                {spells.length > 0 ? <React.Fragment>\r\n                    <div className=\"large-header\">Spells</div>\r\n                    {spells.map((entity) => <div className=\"info-page-flexbox\">\r\n                        <div className=\"bold-text-with-margins\">{`${entity.name} (${entity.type}) [${entity.castingCost}]`}</div>\r\n                        <div className=\"text-with-margins\">{entity.text}</div>\r\n                    </div>)}\r\n                </React.Fragment> : undefined}\r\n                {equipment.length > 0 ? <React.Fragment>\r\n                    <div className=\"large-header\">Equipment</div>\r\n                    {equipment.map((entity) => {\r\n                        if (isArmour(entity)) {\r\n                            return <div className=\"info-page-flexbox\">\r\n                                <div className=\"bold-text-with-margins\">{`${entity.type}`}</div>\r\n                                <div className=\"text-with-margins\"><div>{`Add +${entity.armour} to your armour save.`}</div>{getEquipmentRules(entity.rules || []).map((rule) => <div>{rule.text}</div>)}</div>\r\n                            </div>;\r\n                        }\r\n                        if (isMelee(entity)) {\r\n                            return <div className=\"info-page-flexbox\">\r\n                                <div className=\"bold-text-with-margins\">{`${entity.type} (Strength ${entity.strengthModifier || \"+0\"})`}</div>\r\n                                <div className=\"text-with-margins\">{getEquipmentRules(entity.rules || []).map((rule) => <div>{rule.text}</div>)}</div>\r\n                            </div>;\r\n                        }\r\n                        if (isMisc(entity)) {\r\n                            return <div className=\"info-page-flexbox\">\r\n                                <div className=\"bold-text-with-margins\">{`${entity.type}`}</div>\r\n                                {entity.rules ? <div className=\"text-with-margins\">{getEquipmentRules(entity.rules).map((rule) => <div>{rule.text}</div>)}</div> : <div className=\"text-with-margins\">{entity.text}</div>}\r\n                            </div>;\r\n                        }\r\n                        if (isMissile(entity)) {\r\n                            return <div className=\"info-page-flexbox\">\r\n                                <div className=\"bold-text-with-margins\">{`${entity.type} (Strength ${entity.strength}, Range ${entity.range})`}</div>\r\n                                <div className=\"text-with-margins\">{getEquipmentRules(entity.rules || []).map((rule) => <div>{rule.text}</div>)}</div>\r\n                            </div>;\r\n                        }\r\n                    }\r\n\r\n                    )}\r\n                </React.Fragment> : undefined}\r\n            </div>\r\n        </div>\r\n    </React.Fragment>;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Completed.7ca392ee.png\";","export default __webpack_public_path__ + \"static/media/Loading.382232d0.png\";","\r\nimport html2canvas from \"html2canvas\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { ReactReduxContext } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PDFInfoPage, PDFLayout } from \"../../components/PdfLayout\";\r\nimport { WarbandState } from \"../../data/Interfaces\";\r\nimport CompletedPng from \"./../../images/Completed.png\";\r\nimport LoadingPng from \"./../../images/Loading.png\";\r\n\r\nexport const PdfCreationPage = () => {\r\n    const history = useHistory();\r\n    const { store } = useContext(ReactReduxContext);\r\n    const state = store.getState() as WarbandState;\r\n    const exportPdf = async () => {\r\n        const jsPdf = new jsPDF(\"portrait\", \"mm\", \"a4\", true);\r\n        let canvas: HTMLCanvasElement;\r\n        canvas = await html2canvas(document.querySelector(\"#pdf-roster\") as HTMLElement, { scale: 4 });\r\n        jsPdf.addImage(canvas.toDataURL(\"image/png\"), \"JPEG\", 0, 0, jsPdf.internal.pageSize.getWidth(), jsPdf.internal.pageSize.getHeight());\r\n\r\n        jsPdf.addPage();\r\n\r\n        canvas = await html2canvas(document.querySelector(\"#pdf-info-page\") as HTMLElement, { scale: 4 });\r\n        jsPdf.addImage(canvas.toDataURL(\"image/png\"), \"JPEG\", 0, 0, jsPdf.internal.pageSize.getWidth(), jsPdf.internal.pageSize.getHeight());\r\n        jsPdf.save(`${state.warband}.pdf`);\r\n    };\r\n    const [showSuccess, setSuccess] = useState<boolean>(false);\r\n    useEffect(() => {\r\n        // tslint:disable-next-line: no-floating-promises\r\n        (async () => {\r\n            await exportPdf();\r\n            setSuccess(true);\r\n        })();\r\n        return () => {\r\n            // this now gets called when the component unmounts\r\n        };\r\n    }, []);\r\n    return <React.Fragment>{\r\n        showSuccess ?\r\n            <React.Fragment>\r\n                <img src={CompletedPng} style={{ margin: \"5rem 3rem\", width: \"75%\" }} ></img>\r\n                <div\r\n                    className=\"large-header\"\r\n                >Enjoy your pdf</div>\r\n                <div\r\n                    className=\"back-btn\"\r\n                    onClick={() => history.goBack()}\r\n                >Back</div></React.Fragment> : <React.Fragment>\r\n                <img src={LoadingPng} style={{ margin: \"5rem 3rem\", width: \"75%\" }} ></img>\r\n                <div\r\n                    className=\"large-header\"\r\n                >Please be patient. </div>\r\n                <div\r\n                    className=\"large-header\"\r\n                >The Snotlings are painting your pdf right now.</div>\r\n                <div\r\n                    className=\"large-header\"\r\n                >They are almost done.</div>\r\n                <div\r\n                    className=\"large-header\"\r\n                >Hang on...</div>\r\n            </React.Fragment>\r\n    }\r\n        <PDFLayout />\r\n        <PDFInfoPage />\r\n    </React.Fragment>;\r\n};\r\n","import React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { connect, Provider } from \"react-redux\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { compose, createStore } from \"redux\";\r\nimport \"./App.css\";\r\nimport { LandingPage } from \"./pages\";\r\nimport { PdfCreationPage } from \"./pages/Overview/PdfCreationPage\";\r\nimport \"./pages/Page.css\";\r\nimport { stateReducer } from \"./redux/reducer\";\r\n\r\nconst App = () =>\r\n  <BrowserRouter>\r\n    <div className=\"app-body\">\r\n      <Switch>\r\n        <Route path=\"/PdfExport\" component={PdfCreationPage} />\r\n        <Route path=\"/\" component={LandingPage} />\r\n      </Switch>\r\n    </div>\r\n  </BrowserRouter>;\r\n\r\nexport const AppContainer = connect()(App);\r\n// tslint:disable-next-line: deprecation\r\nexport const store = createStore(stateReducer, compose(typeof window === \"object\" &&\r\n  typeof (window as any).devToolsExtension !== \"undefined\" ?\r\n  (window as any).devToolsExtension() :\r\n  (f: any) => f\r\n));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { InitialWarbandState } from \"../data/Constants\";\r\nimport { WarbandState } from \"../data/Interfaces\";\r\nimport * as ReduxActions from \"./actions\";\r\n\r\nexport function stateReducer(state: WarbandState = InitialWarbandState, action: ReduxActions.Actions): WarbandState {\r\n    switch (action.type) {\r\n        case ReduxActions.SET_WARBAND:\r\n            return action.payload;\r\n    }\r\n}\r\n"],"sourceRoot":""}