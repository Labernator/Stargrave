{"version":3,"sources":["types/Background.ts","types/Characters.ts","images/Biomorph.png","images/CreateCrew.png","images/Cyborg.png","images/icons/Add.png","images/icons/Crew.png","images/icons/Captain.png","images/icons/Minus.png","images/icons/Delete.png","images/icons/Info.png","images/icons/Save.png","images/icons/SavePdf.png","images/icons/Treasury.png","images/ImportCrew.png","images/Mystic.png","images/Psionicist.png","images/RoboticsExpert.png","images/Rogue.png","images/soldiers/ArmouredTrooper.png","images/soldiers/Burner.png","images/soldiers/Casecracker.png","images/soldiers/Chiseler.png","images/soldiers/Codebreaker.png","images/soldiers/Commando.png","images/soldiers/Grenadier.png","images/soldiers/GuardDog.png","images/soldiers/Gunner.png","images/soldiers/Hacker.png","images/soldiers/Medic.png","images/soldiers/Pathfinder.png","images/soldiers/Recruit.png","images/soldiers/Runner.png","images/soldiers/Sentry.png","images/soldiers/Sniper.png","images/soldiers/Trooper.png","images/Tekker.png","images/Unknown.png","images/UseSample.png","images/Veteran.png","images/index.ts","Utils.ts","components/characterDialog/SelectBackground.tsx","components/GearLabels.tsx","types/State.ts","components/characterDialog/GearDropdown.tsx","UseComponentVisible.tsx","components/characterDialog/SelectGear.tsx","components/InputControl.tsx","components/NameComponent.tsx","components/characterDialog/SelectName.tsx","components/characterDialog/Carousel.tsx","types/Metadata.ts","components/characterDialog/SelectNonCorePowers.tsx","components/characterDialog/SelectPowers.tsx","components/characterDialog/SelectPowerUpgrades.tsx","components/characterDialog/SelectStatsImprovements.tsx","components/CharacterStatusBarTable.tsx","components/statusbar/CharacterStatusBar.tsx","redux/actions.ts","components/CreateCharacter.tsx","pages/CaptainCreationPage.tsx","components/CharacterTileGearAndPowers.tsx","components/CharacterTileHeader.tsx","components/CharacterComponent.tsx","components/SoldierComponent.tsx","components/statusbar/CrewNameComponent.tsx","components/statusbar/CrewSizeComponent.tsx","components/statusbar/FileComponent.tsx","components/statusbar/PdfComponent.tsx","components/statusbar/TreasuryComponent.tsx","components/statusbar/StatusBarComponent.tsx","pages/CrewPage.tsx","pages/FileOperationsPage.tsx","pages/FirstMateCreationPage.tsx","data/Samples/Firefly.sg","pages/LandingPage.tsx","pages/SetShipNamePage.tsx","components/SoldierSelection.tsx","pages/SoldierSelectionPage.tsx","index.tsx","redux/reducer.ts"],"names":["BackgroundEnum","StatsEnum","CharactersEnum","SoldierEnum","CyborgIcon","CyborgPng","BiomorphIcon","BiomorphPng","MysticIcon","MysticPng","PsionicistIcon","PsionicistPng","RoboticsExpertIcon","RoboticsExpertPng","RogueIcon","RoguePng","TekkerIcon","TekkerPng","VeteranIcon","VeteranPng","BurnerIcon","BurnerPng","GrenadierIcon","GrenadierPng","SniperIcon","SniperPng","CodebreakerIcon","CodebreakerPng","GuardDogIcon","GuardDogPng","CasecrackerIcon","CasecrackerPng","GunnerIcon","GunnerPng","MedicIcon","MedicPng","PathfinderIcon","PathfinderPng","ArmouredTrooperIcon","ArmouredTrooperPng","RecruitIcon","RecruitPng","RunnerIcon","RunnerPng","SentryIcon","SentryPng","TrooperIcon","TrooperPng","HackerIcon","HackerPng","ChiselerIcon","ChiselerPng","CommandoIcon","CommandoPng","getBackgroundImage","background","Biomorph","Cyborg","Mystic","Psionicist","RoboticsExpert","Rogue","Tekker","Veteran","UnknownPng","getSoldierImage","soldierType","Burner","Grenadier","Sniper","Casecracker","Codebreaker","GuardDog","Gunner","Medic","Pathfinder","ArmouredTrooper","Recruit","Runner","Sentry","Trooper","Hacker","Chiseler","Commando","UseSampleIcon","UseSamplePng","CreateCrewIcon","CreateCrewPng","ImportCrewIcon","ImportCrewPng","TreasuryIcon","TreasuryPng","CrewIcon","CrewPng","AddIcon","AddPng","SaveIcon","SavePng","MinusIcon","MinusPng","PdfIcon","PdfPng","allPowers","PowerList","allBackgrounds","BackgroundList","allGear","GearItems","numberOfCrewMembers","state","store","getState","Soldiers","reduce","acc","soldier","amount","Captain","FirstMate","getStatStrings","stats","Object","keys","map","stat","getPower","name","find","power","getBackground","isCorePower","powerName","backgroundName","corePowers","isCaptain","type","getGearDetails","gearName","foundGear","gear","gearSlots","getActualNotes","gearList","gearItem","notes","getStatsWithGear","updateStats","updatedStatsByGear","updatedStatsWithGear","Armour","Move","Fight","item","getDamageModifierString","weapon","damageModifier","gearSortAlgorithm","count","length","backgroundInformation","Backgrounds","getBackgroundInfos","bg","SelectBackground","character","updateAndContinue","useState","setBackground","Fragment","className","backgroundEnumEntry","onClick","undefined","statModifications","mandatory","optional","powers","src","alt","CarouselSize","GearLabel","style","fontSize","maxRange","armourModifier","GearDropDown","list","dropdownOptions","callbackFn","placeholder","selectedItem","setSelectedItem","initialIsVisible","isComponentVisible","setIsComponentVisible","ref","useRef","handleHideDropdown","event","key","handleClickOutside","preventDefault","stopPropagation","current","contains","target","useEffect","document","addEventListener","removeEventListener","openMenu","useComponentVisible","id","position","getElementById","getBoundingClientRect","top","left","width","getCssProps","filter","listItem","onMouseDown","defaultKnife","defaultArmour","SelectGear","updateGear","finish","selectedGear","setSelectedGear","isGearSelected","gr","maxGear","getGearByType","gearType","getSelectedArmour","armour","getCSSClasses","withMax","itemTooLarge","onClickHandler","gearDetails","selGear","melee","getSelectedMelee","equi","sort","a","b","localeCompare","InputComponent","currentState","tooltip","cssClass","callback","setName","inputVisible","setInputVisible","inputRef","useLayoutEffect","focus","onChange","currentTarget","value","onKeyDown","code","onBlur","placeSelf","padding","NameComponent","currentStateValue","inputCallback","SelectName","characterType","InitialCrewState","Credits","Title","SoldierGroups","Carousel","reactSwipeEl","inputDivs","splitSize","size","cnt","sectionCnt","Math","ceil","currentSection","setCurrentSection","large","medium","swipeOptions","continuous","el","childCount","sectionDivs","i","push","slice","getContent","display","getPos","prev","gridArea","next","SelectNonCorePowers","isCaptainCharacter","updatePowers","selectedPowers","setSelectedPowers","previewPower","setPreviewPower","includes","activation","filteredPowerList","isPowerSelected","pwr","maxCorePowersSelected","powersRemaining2","powersRemaining","strain","Array","isArray","category","join","effect","idx","findIndex","SelectPowers","powerNames","minPowersSelected","maxPowersSelected","SelectPowerUpgrades","upgradePowers","x","concat","SelectStatsImprovements","updateStatsCallback","selections","setSelections","mand","merged","assign","fromEntries","entries","set","get","Map","isStatSelected","statName","statModificationsForBackground","maxStatsReached","chooseOptionals","marginTop","statValue","baseCaptain","Characters","baseFirstMate","CharacterStatusBarTable","gearSlotsUsed","isTileTable","SoldierStatusBarTable","CharacterStatusbar","connect","float","ADD_SOLDIERS","SET_CAPTAINS_NAME","SET_FIRST_MATE","SET_CAPTAIN","SET_CREW","SET_CREWNAME","CharacterCreation","baseCharacter","setCharacter","updatedStats","setUpdatedStats","statsSelected","setStatsSelected","powersUpgraded","setPowersUpgraded","setGear","dispatch","useDispatch","history","useHistory","finishPowerUpgrades","val","payload","CaptainCreationPage","renderGear","renderSoldier","paddingRight","CharacterTileGearAndPowers","textAlign","SoldierTileGearAndPowers","CharacterTileHeader","level","SoldierTileHeader","cost","CharacterComponent","SoldierComponent","CrewNameComponent","CrewSizeComponent","externalStyles","virtualCrewSize","title","FileComponent","paddingLeft","PdfComponent","setOpenDialog","TreasuryComponent","virtualCredits","useContext","ReactReduxContext","StatusbarComponent","CrewPage","shipName","captain","firstMate","soldiers","paddingTop","FileOperationsPage","fileName","setFileName","htmlFor","accept","reader","FileReader","onload","ev","JSON","parse","result","readAsText","querySelector","files","borderTop","e","anchor","createElement","body","appendChild","json","stringify","blob","Blob","url","window","URL","createObjectURL","href","download","click","revokeObjectURL","removeChild","FirstMateCreationPage","LandingPage","Crew","ShipNamePage","listOfSoldiers","SoldierList","SoldierSelectionComponent","credits","setSoldiers","previewSoldier","setPreviewSoldier","getCurrentSoldierAmount","soldierCount","specialistCount","group","Specialist","specialist","hiringCost","canSubmit","height","soldierIdx","sol","SoldierSelectionPage","AppContainer","path","component","createStore","action","ReduxActions","compose","devToolsExtension","f","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.2112de23.chunk.js","sourcesContent":["import { Power, Stats } from \"./Characters\";\r\n\r\nexport enum BackgroundEnum {\r\n    Biomorph = \"Biomorph\",\r\n    Cyborg = \"Cyborg\",\r\n    Mystic = \"Mystic\",\r\n    Psionicist = \"Psionicist\",\r\n    RoboticsExpert = \"RoboticsExpert\",\r\n    Rogue = \"Rogue\",\r\n    Tekker = \"Tekker\",\r\n    Veteran = \"Veteran\",\r\n}\r\n\r\nexport interface BackgroundMetadata {\r\n    name: string;\r\n    statModifications: {\r\n        mandatory: Partial<Stats>;\r\n        optional: Partial<Stats>;\r\n        chooseOptionals: number;\r\n    };\r\n    corePowers: string[];\r\n    description: string;\r\n}\r\n\r\nexport interface BackgroundModifications {\r\n    name: BackgroundEnum;\r\n    statModifications: StatsImprovements;\r\n    powers: Power[];\r\n}\r\n\r\nexport interface BackgroundOptions {\r\n    name: BackgroundEnum;\r\n    statModifications: {\r\n        mandatory: Partial<Stats>;\r\n        optional: Partial<Stats>;\r\n        chooseOptionals: number;\r\n    };\r\n    corePowers: string[];\r\n    description: string;\r\n}\r\n\r\nexport interface StatsImprovements {\r\n    mandatory: Partial<Stats>;\r\n    optional: Partial<Stats>;\r\n}\r\n","import { SoldierGroups } from \"./Metadata\";\r\n\r\nexport interface Background {\r\n    name: string;\r\n    powers: Power[];\r\n}\r\n\r\nexport interface Power {\r\n    name: string;\r\n    activation: number;\r\n    strain: number;\r\n    category: string | string[];\r\n    effect: string;\r\n}\r\n\r\nexport interface ModifiedPower {\r\n    name: string;\r\n    activation: number;\r\n}\r\n\r\nexport interface ModifiedGear {\r\n    name: string;\r\n    gearSlots: number;\r\n}\r\nexport interface Gear extends ModifiedGear {\r\n    type: string;\r\n    notes?: string;\r\n    damageModifier?: number;\r\n    maxRange?: string | number;\r\n    armourModifier?: number;\r\n}\r\n\r\nexport interface Character {\r\n    name: string;\r\n    stats: Stats;\r\n    level: number;\r\n    gearSlots: number;\r\n    type: string;\r\n    background?: string;\r\n    powers?: ModifiedPower[];\r\n    gear?: ModifiedGear[];\r\n}\r\n\r\nexport enum StatsEnum {\r\n    Move = \"Move\",\r\n    Fight = \"Fight\",\r\n    Shoot = \"Shoot\",\r\n    Armour = \"Armour\",\r\n    Will = \"Will\",\r\n    Health = \"Health\",\r\n}\r\n\r\nexport type Stats = { [key in StatsEnum]: number; };\r\n\r\nexport interface Soldier {\r\n    type: string;\r\n    stats: Stats;\r\n    cost: number;\r\n    gearSlots: number;\r\n    gear: string[];\r\n    group: SoldierGroups;\r\n    amount: number;\r\n}\r\n\r\nexport enum CharactersEnum {\r\n    Captain = \"Captain\",\r\n    FirstMate = \"FirstMate\",\r\n}\r\n\r\nexport enum SoldierEnum {\r\n    Burner = \"Burner\",\r\n    Grenadier = \"Grenadier\",\r\n    Sniper = \"Sniper\",\r\n    GuardDog = \"Guard Dog\",\r\n    Casecracker = \"Casecracker\",\r\n    Gunner = \"Gunner\",\r\n    Codebreaker = \"Codebreaker\",\r\n    Medic = \"Medic\",\r\n    Pathfinder = \"Pathfinder\",\r\n    ArmouredTrooper = \"Armoured Trooper\",\r\n    Recruit = \"Recruit\",\r\n    Runner = \"Runner\",\r\n    Commando = \"Commando\",\r\n    Trooper = \"Trooper\",\r\n    Hacker = \"Hacker\",\r\n    Chiseler = \"Chiseler\",\r\n    Sentry = \"Sentry\",\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Biomorph.30852fce.png\";","export default __webpack_public_path__ + \"static/media/CreateCrew.aa96e00e.png\";","export default __webpack_public_path__ + \"static/media/Cyborg.1d6e41d1.png\";","export default __webpack_public_path__ + \"static/media/Add.94030173.png\";","export default __webpack_public_path__ + \"static/media/Crew.517fe591.png\";","export default __webpack_public_path__ + \"static/media/Captain.95237b5a.png\";","export default __webpack_public_path__ + \"static/media/Minus.d38fdb57.png\";","export default __webpack_public_path__ + \"static/media/Delete.17e835d8.png\";","export default __webpack_public_path__ + \"static/media/Info.9c4331cd.png\";","export default __webpack_public_path__ + \"static/media/Save.62c16956.png\";","export default __webpack_public_path__ + \"static/media/SavePdf.2060f485.png\";","export default __webpack_public_path__ + \"static/media/Treasury.94a0facb.png\";","export default __webpack_public_path__ + \"static/media/ImportCrew.e5abae4c.png\";","export default __webpack_public_path__ + \"static/media/Mystic.41443507.png\";","export default __webpack_public_path__ + \"static/media/Psionicist.3e8db9d2.png\";","export default __webpack_public_path__ + \"static/media/RoboticsExpert.62afca10.png\";","export default __webpack_public_path__ + \"static/media/Rogue.67294730.png\";","export default __webpack_public_path__ + \"static/media/ArmouredTrooper.47e7ee5c.png\";","export default __webpack_public_path__ + \"static/media/Burner.5074a0f0.png\";","export default __webpack_public_path__ + \"static/media/Casecracker.abae2ba0.png\";","export default __webpack_public_path__ + \"static/media/Chiseler.d137b278.png\";","export default __webpack_public_path__ + \"static/media/Codebreaker.9302a5e3.png\";","export default __webpack_public_path__ + \"static/media/Commando.9132f9b1.png\";","export default __webpack_public_path__ + \"static/media/Grenadier.f2ee0436.png\";","export default __webpack_public_path__ + \"static/media/GuardDog.eff5a8b3.png\";","export default __webpack_public_path__ + \"static/media/Gunner.a4b8a36f.png\";","export default __webpack_public_path__ + \"static/media/Hacker.de209c8c.png\";","export default __webpack_public_path__ + \"static/media/Medic.e34105fc.png\";","export default __webpack_public_path__ + \"static/media/Pathfinder.7a315f4e.png\";","export default __webpack_public_path__ + \"static/media/Recruit.99efe4a8.png\";","export default __webpack_public_path__ + \"static/media/Runner.b629c18a.png\";","export default __webpack_public_path__ + \"static/media/Sentry.208deaab.png\";","export default __webpack_public_path__ + \"static/media/Sniper.e17677ee.png\";","export default __webpack_public_path__ + \"static/media/Trooper.77aded42.png\";","export default __webpack_public_path__ + \"static/media/Tekker.9c3b86f0.png\";","export default __webpack_public_path__ + \"static/media/Unknown.c12505bd.png\";","export default __webpack_public_path__ + \"static/media/UseSample.3dd4980b.png\";","export default __webpack_public_path__ + \"static/media/Veteran.9d33839f.png\";","import { BackgroundEnum } from \"../types/Background\";\r\nimport { SoldierEnum } from \"../types/Characters\";\r\nimport BiomorphPng from \"./Biomorph.png\";\r\nimport CreateCrewPng from \"./CreateCrew.png\";\r\nimport CyborgPng from \"./Cyborg.png\";\r\nimport AddPng from \"./icons/Add.png\";\r\nimport CaptainPng from \"./icons/Captain.png\";\r\nimport CreditsPng from \"./icons/Credits.png\";\r\nimport CrewPng from \"./icons/Crew.png\";\r\nimport DeletePng from \"./icons/Delete.png\";\r\nimport ExitPng from \"./icons/Exit.png\";\r\nimport InfoPng from \"./icons/Info.png\";\r\nimport MinusPng from \"./icons/Minus.png\";\r\nimport SavePng from \"./icons/Save.png\";\r\nimport PdfPng from \"./icons/SavePdf.png\";\r\nimport TreasuryPng from \"./icons/Treasury.png\";\r\nimport ImportCrewPng from \"./ImportCrew.png\";\r\nimport MysticPng from \"./Mystic.png\";\r\nimport PsionicistPng from \"./Psionicist.png\";\r\nimport RoboticsExpertPng from \"./RoboticsExpert.png\";\r\nimport RoguePng from \"./Rogue.png\";\r\nimport ArmouredTrooperPng from \"./soldiers/ArmouredTrooper.png\";\r\nimport BurnerPng from \"./soldiers/Burner.png\";\r\nimport CasecrackerPng from \"./soldiers/Casecracker.png\";\r\nimport ChiselerPng from \"./soldiers/Chiseler.png\";\r\nimport CodebreakerPng from \"./soldiers/Codebreaker.png\";\r\nimport CommandoPng from \"./soldiers/Commando.png\";\r\nimport GrenadierPng from \"./soldiers/Grenadier.png\";\r\nimport GuardDogPng from \"./soldiers/GuardDog.png\";\r\nimport GunnerPng from \"./soldiers/Gunner.png\";\r\nimport HackerPng from \"./soldiers/Hacker.png\";\r\nimport MedicPng from \"./soldiers/Medic.png\";\r\nimport PathfinderPng from \"./soldiers/Pathfinder.png\";\r\nimport RecruitPng from \"./soldiers/Recruit.png\";\r\nimport RunnerPng from \"./soldiers/Runner.png\";\r\nimport SentryPng from \"./soldiers/Sentry.png\";\r\nimport SniperPng from \"./soldiers/Sniper.png\";\r\nimport TrooperPng from \"./soldiers/Trooper.png\";\r\nimport TekkerPng from \"./Tekker.png\";\r\nimport UnknownPng from \"./Unknown.png\";\r\nimport UseSamplePng from \"./UseSample.png\";\r\nimport VeteranPng from \"./Veteran.png\";\r\n\r\nexport const CyborgIcon = CyborgPng;\r\nexport const BiomorphIcon = BiomorphPng;\r\nexport const MysticIcon = MysticPng;\r\nexport const PsionicistIcon = PsionicistPng;\r\nexport const RoboticsExpertIcon = RoboticsExpertPng;\r\nexport const RogueIcon = RoguePng;\r\nexport const TekkerIcon = TekkerPng;\r\nexport const VeteranIcon = VeteranPng;\r\n\r\nexport const BurnerIcon = BurnerPng;\r\nexport const GrenadierIcon = GrenadierPng;\r\nexport const SniperIcon = SniperPng;\r\nexport const CodebreakerIcon = CodebreakerPng;\r\nexport const GuardDogIcon = GuardDogPng;\r\nexport const CasecrackerIcon = CasecrackerPng;\r\nexport const GunnerIcon = GunnerPng;\r\nexport const MedicIcon = MedicPng;\r\nexport const PathfinderIcon = PathfinderPng;\r\nexport const ArmouredTrooperIcon = ArmouredTrooperPng;\r\nexport const RecruitIcon = RecruitPng;\r\nexport const RunnerIcon = RunnerPng;\r\nexport const SentryIcon = SentryPng;\r\nexport const TrooperIcon = TrooperPng;\r\nexport const HackerIcon = HackerPng;\r\nexport const ChiselerIcon = ChiselerPng;\r\nexport const CommandoIcon = CommandoPng;\r\n\r\nexport const getBackgroundImage = (background: string | undefined) => {\r\n    switch (background) {\r\n        case BackgroundEnum.Biomorph: return BiomorphIcon;\r\n        case BackgroundEnum.Cyborg: return CyborgIcon;\r\n        case BackgroundEnum.Mystic: return MysticIcon;\r\n        case BackgroundEnum.Psionicist: return PsionicistIcon;\r\n        case BackgroundEnum.RoboticsExpert: return RoboticsExpertIcon;\r\n        case BackgroundEnum.Rogue: return RogueIcon;\r\n        case BackgroundEnum.Tekker: return TekkerIcon;\r\n        case BackgroundEnum.Veteran: return VeteranIcon;\r\n        default:\r\n            return UnknownPng;\r\n    }\r\n};\r\n\r\nexport const getSoldierImage = (soldierType: string) => {\r\n    switch (soldierType) {\r\n        case SoldierEnum.Burner: return BurnerIcon;\r\n        case SoldierEnum.Grenadier: return GrenadierIcon;\r\n        case SoldierEnum.Sniper: return SniperIcon;\r\n        case SoldierEnum.Casecracker: return CasecrackerIcon;\r\n        case SoldierEnum.Codebreaker: return CodebreakerIcon;\r\n        case SoldierEnum.GuardDog: return GuardDogIcon;\r\n        case SoldierEnum.Gunner: return GunnerIcon;\r\n        case SoldierEnum.Medic: return MedicIcon;\r\n        case SoldierEnum.Pathfinder: return PathfinderIcon;\r\n        case SoldierEnum.ArmouredTrooper: return ArmouredTrooperIcon;\r\n        case SoldierEnum.Recruit: return RecruitIcon;\r\n        case SoldierEnum.Runner: return RunnerIcon;\r\n        case SoldierEnum.Sentry: return SentryIcon;\r\n        case SoldierEnum.Trooper: return TrooperIcon;\r\n        case SoldierEnum.Hacker: return HackerIcon;\r\n        case SoldierEnum.Chiseler: return ChiselerIcon;\r\n        case SoldierEnum.Commando: return CommandoIcon;\r\n        default:\r\n            return UnknownPng;\r\n    }\r\n};\r\n\r\nexport const CaptainIcon = CaptainPng;\r\nexport const UseSampleIcon = UseSamplePng;\r\nexport const CreateCrewIcon = CreateCrewPng;\r\nexport const ImportCrewIcon = ImportCrewPng;\r\nexport const CreditsIcon = CreditsPng;\r\nexport const TreasuryIcon = TreasuryPng;\r\nexport const CrewIcon = CrewPng;\r\nexport const AddIcon = AddPng;\r\nexport const SaveIcon = SavePng;\r\nexport const ExitIcon = ExitPng;\r\nexport const InfoIcon = InfoPng;\r\nexport const MinusIcon = MinusPng;\r\nexport const PdfIcon = PdfPng;\r\nexport const DeleteItemIcon = DeletePng;\r\n","import { store } from \".\";\r\nimport * as BackgroundList from \"./data/Backgrounds.json\";\r\nimport * as GearItems from \"./data/Gear.json\";\r\nimport * as PowerList from \"./data/Powers.json\";\r\nimport { BackgroundMetadata } from \"./types/Background\";\r\nimport { CharactersEnum, Gear, ModifiedGear, Power, Stats, StatsEnum } from \"./types/Characters\";\r\n\r\nconst allPowers: Power[] = PowerList.Powers;\r\nconst allBackgrounds: BackgroundMetadata[] = BackgroundList.backgrounds;\r\nconst allGear: Gear[] = GearItems.general;\r\n\r\nexport const numberOfCrewMembers = () => {\r\n    const state = store.getState();\r\n    return (state.Soldiers.reduce((acc, soldier) => soldier.amount + acc, 0) || 0) + (state.Captain ? 1 : 0) + (state.FirstMate ? 1 : 0);\r\n};\r\n\r\nexport const numberOfSoldiers = () => {\r\n    const state = store.getState();\r\n    return state.Soldiers.reduce((acc, soldier) => soldier.amount + acc, 0);\r\n};\r\n\r\nexport const getStatStrings = (stats: Stats | Partial<Stats>) => Object.keys(stats).map((stat) => {\r\n    switch (stat) {\r\n        case \"Fight\":\r\n        case \"Shoot\":\r\n        case \"Will\":\r\n            return { [stat]: stats[stat] as number < 0 ? `${stats[stat]}` : `+${stats[stat]}` };\r\n        default:\r\n            return { [stat]: `${stats[stat as StatsEnum]}` };\r\n    }\r\n});\r\nexport const getPower = (name: string) => allPowers.find((power) => power.name === name) as Power;\r\n\r\nexport const getPowerInfos = (powerNames: string[]): Power[] => powerNames.map(getPower);\r\n\r\nconst getBackground = (name: string) => allBackgrounds.find((background) => background.name === name) as BackgroundMetadata;\r\n\r\nexport const isCorePower = (powerName: string, backgroundName: string) => !!getBackground(backgroundName).corePowers.find((power) => power === powerName);\r\n\r\nexport const isCaptain = (type: string) => type === CharactersEnum.Captain;\r\n\r\nexport const getNonCorePowers = (backgroundName: string, isCaptainCharacter: boolean) =>\r\n    allPowers.filter((power) => !getBackground(backgroundName).corePowers.includes(power.name)).\r\n        map((power) => isCaptainCharacter ? { ...power, activation: power.activation + 2 } : { ...power, activation: power.activation + 4 });\r\n\r\nexport const getStatsMaximums = () => ({ \"Move\": 7, \"Fight\": 6, \"Shoot\": 6, \"Will\": 8, \"Health\": 25, \"Armour\": 14 });\r\n\r\nexport const getGearDetails = (gearName: string | ModifiedGear) => {\r\n    const foundGear = allGear.find((gear) => (typeof (gearName) === \"string\" ? gearName : gearName.name) === gear.name) as Gear;\r\n    if (typeof (gearName) !== \"string\") {\r\n        foundGear.gearSlots = gearName.gearSlots;\r\n    }\r\n    return foundGear;\r\n};\r\n\r\nexport const getActualNotes = (gearList: Array<string | ModifiedGear>, gearItem: Gear) => {\r\n    let notes = gearItem.notes;\r\n    switch (gearItem.name) {\r\n        case \"Flamethrower\":\r\n            notes = gearList.find((gear: ModifiedGear | string) => (typeof (gear) === \"string\" ? gear : gear.name) === \"Heavy Armour\") || gearList.find((gear: ModifiedGear | string) => (typeof (gear) === \"string\" ? gear : gear.name) === \"Combat Armour\") ? \"Target Armour and Cover Modifiers\" : \"Target Armour and Cover Modifiers. -1 Move\";\r\n            break;\r\n        case \"Rapid Fire\":\r\n            notes = gearList.find((gear: ModifiedGear | string) => (typeof (gear) === \"string\" ? gear : gear.name) === \"Heavy Armour\") || gearList.find((gear: ModifiedGear | string) => (typeof (gear) === \"string\" ? gear : gear.name) === \"Combat Armour\") ? \"2 Targets\" : \"2 Targets. -1 Move\";\r\n            break;\r\n        case \"Combat Armour\":\r\n            notes = \"50gc upkeep fee\";\r\n    }\r\n    return notes || \"\";\r\n};\r\n\r\nexport const getStatsWithGear = (stats: Stats, updateStats: Partial<Stats>, gear: ModifiedGear[] | undefined): Stats => {\r\n    const updatedStatsByGear = gear ? gear.reduce((updatedStatsWithGear, gearItem) => {\r\n        switch (gearItem.name) {\r\n            case \"Light Armour\": updatedStatsWithGear.Armour = 1; break;\r\n            case \"Heavy Armour\":\r\n                updatedStatsWithGear.Armour = 2;\r\n                updatedStatsWithGear.Move = -1;\r\n                break;\r\n            case \"Combat Armour\":\r\n                updatedStatsWithGear.Armour = 4;\r\n                break;\r\n            case \"Unarmed\":\r\n                updatedStatsWithGear.Fight = -2;\r\n                break;\r\n            case \"Flamethrower\":\r\n            case \"Rapid Fire\":\r\n                if (!gear.find((item) => item.name === \"Heavy Armour\") && !gear.find((item) => item.name === \"Combat Armour\")) {\r\n                    updatedStatsWithGear.Move = -1;\r\n                }\r\n        }\r\n        return updatedStatsWithGear;\r\n    }, { \"Move\": 0, \"Fight\": 0, \"Shoot\": 0, \"Armour\": 0, \"Will\": 0, \"Health\": 0 }) : { \"Move\": 0, \"Fight\": 0, \"Shoot\": 0, \"Armour\": 0, \"Will\": 0, \"Health\": 0 };\r\n\r\n    return Object.keys(stats).reduce(\r\n        (acc, stat) => ({ ...acc, [stat]: (stats[stat as StatsEnum] || 0) + (updateStats[stat as StatsEnum] || 0) + (updatedStatsByGear[stat as StatsEnum] || 0) }),\r\n        { \"Move\": 0, \"Fight\": 0, \"Shoot\": 0, \"Armour\": 0, \"Will\": 0, \"Health\": 0 });\r\n};\r\n\r\nexport const getDamageModifierString = (weapon: Gear) => {\r\n    if (!weapon.damageModifier) {\r\n        return \"+0\";\r\n    }\r\n    if (weapon.damageModifier > 0) {\r\n        return `+${weapon.damageModifier}`;\r\n    }\r\n\r\n    return `${weapon.damageModifier}`;\r\n};\r\n\r\nexport const gearSortAlgorithm = (gear: Gear) => {\r\n    let count = 0;\r\n    if (gear.type === \"Weapon\" || gear.type === \"Armour\") {\r\n        count += 1;\r\n    }\r\n    if (gear.name.length > 19) {\r\n        count += 0.4;\r\n    }\r\n    if (gear.notes) {\r\n        count += 1;\r\n        if (gear.notes.length > 40) {\r\n            count += 0.5;\r\n        }\r\n    }\r\n    return count;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as Backgrounds from \"../../data/Backgrounds.json\";\r\nimport { getBackgroundImage } from \"../../images/index\";\r\nimport { BackgroundEnum, BackgroundModifications, BackgroundOptions } from \"../../types/Background\";\r\nimport { Character } from \"../../types/Characters\";\r\nimport { isCaptain } from \"../../Utils\";\r\n\r\nconst backgroundInformation = Backgrounds.backgrounds as BackgroundOptions[];\r\nconst getBackgroundInfos = (background: BackgroundEnum) => backgroundInformation.find((bg) => bg.name === background) as BackgroundOptions;\r\n\r\nexport const SelectBackground = ({ character, updateAndContinue }: { character: Character; updateAndContinue(value: BackgroundModifications | undefined): void }) => {\r\n    const [background, setBackground] = useState<BackgroundModifications | undefined>();\r\n    const renderBackgroundTile = (bg: BackgroundEnum) => <div\r\n        key={`add-character-${bg}`}\r\n        className={bg === background?.name ? \"add-character-background background-selected\" : \"add-character-background\"}\r\n        onClick={() => setBackground(\r\n            bg === background?.name ?\r\n                undefined :\r\n                {\r\n                    name: bg,\r\n                    statModifications: { mandatory: getBackgroundInfos(bg).statModifications.mandatory, optional: {} },\r\n                    powers: [],\r\n                }\r\n        )}>\r\n        <img className=\"add-character-background-icons\" src={getBackgroundImage(bg)} alt={`add-character-${bg}-icon`} />\r\n        <div className=\"large-text\">{`${bg}`}</div>\r\n    </div>;\r\n\r\n    return <React.Fragment>\r\n        <div className=\"modal-header\">{`Select a background for your ${isCaptain(character.type) ? \"Captain\" : \"First Mate\"}`}</div>\r\n        {Object.keys(BackgroundEnum).map((backgroundEnumEntry: string) => renderBackgroundTile(backgroundEnumEntry as BackgroundEnum))}\r\n        <button\r\n            onClick={() => background ? updateAndContinue(background) : undefined}\r\n            className={background && character.name ? \"dialog-btn confirm-btn\" : \"dialog-btn confirm-btn disabled\"}\r\n        >Confirm</button>\r\n    </React.Fragment>;\r\n};\r\n","import React from \"react\";\r\nimport { Gear, ModifiedGear } from \"../types/Characters\";\r\nimport { getActualNotes, getDamageModifierString } from \"../Utils\";\r\nexport const GearLabel = ({ gear, gearList }: { gear: Gear; gearList: Array<ModifiedGear | string> }) =>\r\n    <React.Fragment>\r\n        <div className=\"gear-label-name\">{`${gear.name} ( ${gear.gearSlots} )`} </div>\r\n        {gear.type === \"Weapon\" ? <div style={{ fontSize: \"0.65rem\" }}>\r\n            {gear.maxRange === \"Melee\" || gear.maxRange === \"Template\" ? gear.maxRange : `Range: ${gear.maxRange}`} / {`${getDamageModifierString(gear)} dmg`}</div > :\r\n            gear.type === \"Armour\" ? <div style={{ fontSize: \"0.65rem\" }}> {`+${gear.armourModifier || 0} Armour ${getActualNotes(gearList, gear) ? \"/\" : \"\"} ${getActualNotes(gearList, gear)}`}</div> : null}\r\n        {gear.type === \"Armour\" ? null : < div style={{ fontSize: \"0.65rem\" }}> {getActualNotes(gearList, gear)} </div>}\r\n    </React.Fragment>;\r\n","// import * as Characters from \"../data/Characters.json\";\r\nimport { Character, Soldier } from \"./Characters\";\r\n\r\nexport interface CrewState {\r\n    Credits: number;\r\n    Captain?: Character;\r\n    FirstMate?: Character;\r\n    Soldiers: Soldier[];\r\n    Title: string;\r\n}\r\n\r\nexport const InitialCrewState: CrewState = {\r\n    Credits: 400,\r\n    Soldiers: [],\r\n    Title: \"\",\r\n};\r\n\r\nexport enum CarouselSize {\r\n    small,\r\n    medium,\r\n    large,\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Gear } from \"../../types/Characters\";\r\nimport { useComponentVisible } from \"../../UseComponentVisible\";\r\nimport { GearLabel } from \"../GearLabels\";\r\n\r\nexport interface DropdownOptions {\r\n    placeholder: Gear;\r\n    id: string;\r\n}\r\n\r\nexport const GearDropDown = ({ list, dropdownOptions, callbackFn }: { list: Gear[]; dropdownOptions: DropdownOptions; callbackFn(item: string): void }) => {\r\n    const [selectedItem, setSelectedItem] = useState<Gear>(dropdownOptions.placeholder);\r\n    const getCssProps = () => {\r\n        const position = document.getElementById(`dropdown-container-${dropdownOptions.id}`)?.getBoundingClientRect();\r\n        return { top: (position?.top || 0) + 42, left: (position?.left || 0), width: (position?.width || 0) };\r\n    };\r\n    const renderGearList = () => list.filter((item: Gear) => (item.name !== selectedItem.name)).map((listItem) =>\r\n        <div key={`dropdown-list-item-${dropdownOptions.id}-${listItem.name}`}\r\n            className=\"gear-selection dropdown-input dropdown-input-list\"\r\n            onMouseDown={() => {\r\n                setSelectedItem(listItem);\r\n                callbackFn(listItem.name);\r\n                setIsComponentVisible(false);\r\n            }}\r\n        >\r\n            <GearLabel gear={listItem} gearList={list} />\r\n        </div>\r\n    );\r\n    const { ref, isComponentVisible, setIsComponentVisible, openMenu } = useComponentVisible(false);\r\n    return <React.Fragment>\r\n        <div\r\n            className=\"gear-selection selected dropdown-input\"\r\n            onClick={openMenu}\r\n            id={`dropdown-container-${dropdownOptions.id}`}>\r\n            <GearLabel gear={dropdownOptions.placeholder} gearList={list} />\r\n        </div>\r\n        <div ref={ref}>\r\n            {isComponentVisible ?\r\n                <div style={getCssProps()} className=\"dropdown-portal\">\r\n                    {list.length > 0 ? renderGearList() : <div key={`dropdown-list-item-${dropdownOptions.id}-empty-list`} className=\"dropdown-empty-list\">No match found for search string. Please refine your search.</div>}\r\n                </div> : null}\r\n        </div>\r\n    </React.Fragment>;\r\n\r\n};\r\n","import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport function useComponentVisible(initialIsVisible: boolean) {\r\n    const [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const handleHideDropdown = (event: KeyboardEvent) => {\r\n        if (event.key === \"Escape\") {\r\n            setIsComponentVisible(false);\r\n        }\r\n    };\r\n\r\n    const handleClickOutside = (event: Event) => {\r\n        if (isComponentVisible) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        if (ref.current && !ref.current.contains(event.target as Node)) {\r\n            setIsComponentVisible(false);\r\n        }\r\n    };\r\n\r\n    const openMenu = () => {\r\n        setIsComponentVisible(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", handleHideDropdown, true);\r\n        document.addEventListener(\"click\", handleClickOutside, true);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", handleHideDropdown, true);\r\n            document.removeEventListener(\"click\", handleClickOutside, true);\r\n        };\r\n    });\r\n\r\n    return { ref, isComponentVisible, setIsComponentVisible, openMenu };\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as GearItems from \"../../data/Gear.json\";\r\nimport { Gear, ModifiedGear } from \"../../types/Characters\";\r\nimport { gearSortAlgorithm, getActualNotes, getDamageModifierString, getGearDetails } from \"../../Utils\";\r\nimport { GearDropDown } from \"./GearDropdown\";\r\n\r\nconst gearList = GearItems.general as Gear[];\r\nconst defaultKnife = { name: getGearDetails(\"Knife\").name, gearSlots: getGearDetails(\"Knife\").gearSlots };\r\nconst defaultArmour = { name: getGearDetails(\"No Armour\").name, gearSlots: getGearDetails(\"No Armour\").gearSlots };\r\nexport const SelectGear = (\r\n    { isCaptain, updateGear, finish }:\r\n        { isCaptain: boolean; updateGear(value: ModifiedGear[]): void; finish(): void }\r\n) => {\r\n    const [selectedGear, setSelectedGear] = useState<ModifiedGear[]>([defaultKnife, defaultArmour]);\r\n    useEffect(() => updateGear(selectedGear), [selectedGear]);\r\n    const isGearSelected = (gear: string) => !!selectedGear.find((gr) => gr.name === gear);\r\n    const maxGear = () => selectedGear.reduce((acc, gear) => acc + gear.gearSlots, 0) >= (isCaptain ? 6 : 5);\r\n    const getGearByType = (gearType: string) => {\r\n        switch (gearType) {\r\n            case \"Armour\": return gearList.filter((gear) => gear.type === \"Armour\");\r\n            case \"Weapon\": return gearList.filter((gear) => gear.type === \"Weapon\");\r\n            case \"Equipment\": return gearList.filter((gear) => gear.type === \"Equipment\");\r\n        }\r\n    };\r\n    const getSelectedArmour = () => getGearByType(\"Armour\")?.find((armour) => isGearSelected(armour.name));\r\n    const getSelectedMelee = () => getGearByType(\"Weapon\")?.filter((weapon) => weapon.maxRange === \"Melee\")?.find((melee) => isGearSelected(melee.name));\r\n    const getCSSClasses = (name: string, withMax?: boolean) => isGearSelected(name) ? \"gear-selection selected\" : itemTooLarge(name) || (withMax && maxGear()) ? \"gear-selection disabled\" : \"gear-selection\";\r\n    const itemTooLarge = (gearName: string) => selectedGear.reduce((acc, gearItem) => acc + gearItem.gearSlots, 0) + getGearDetails(gearName).gearSlots > (isCaptain ? 6 : 5);\r\n    const onClickHandler = (gearName: string) => {\r\n        if (isGearSelected(gearName)) {\r\n            if (gearName === \"Combat Armour\") {\r\n                setSelectedGear([...selectedGear.filter((gear) => gear.name !== gearName && gear.name !== \"Hand Weapon\" && gear.name !== \"Filter Mask\" && gear.name !== \"Pistol\"), defaultKnife]);\r\n                return;\r\n            }\r\n            setSelectedGear(selectedGear.filter((gear) => gear.name !== gearName));\r\n        } else {\r\n            const gearDetails = getGearDetails(gearName);\r\n            if (itemTooLarge(gearName) || (gearDetails.type === \"Weapon\" && maxGear())) {\r\n                return;\r\n            }\r\n            if (gearDetails.type === \"Armour\") {\r\n                if (gearDetails.name === \"Combat Armour\") {\r\n                    setSelectedGear(\r\n                        [\r\n                            ...selectedGear.filter((selGear) => getGearDetails(selGear.name).type !== \"Armour\").filter((selGear) => getGearDetails(selGear.name).maxRange !== \"Melee\"),\r\n                            { name: gearName, gearSlots: gearDetails.gearSlots },\r\n                            { name: \"Hand Weapon\", gearSlots: 0 },\r\n                            { name: \"Filter Mask\", gearSlots: 0 },\r\n                            { name: \"Pistol\", gearSlots: 0 }]);\r\n                    return;\r\n                }\r\n                if (getSelectedArmour()?.name === \"Combat Armour\") {\r\n                    setSelectedGear([\r\n                        ...selectedGear.filter((gear) => gear.name !== \"Combat Armour\" && gear.name !== \"Hand Weapon\" && gear.name !== \"Filter Mask\" && gear.name !== \"Pistol\"),\r\n                        defaultKnife,\r\n                        { name: gearName, gearSlots: gearDetails.gearSlots },\r\n                    ]);\r\n                } else {\r\n                    setSelectedGear([...selectedGear.filter((selGear) => getGearDetails(selGear.name).type !== gearDetails.type), { name: gearName, gearSlots: gearDetails.gearSlots }]);\r\n                }\r\n                return;\r\n            }\r\n            if ((gearDetails.type === \"Weapon\" && gearDetails.maxRange === \"Melee\")) {\r\n                setSelectedGear([\r\n                    ...selectedGear.filter((selGear) => getGearDetails(selGear.name).maxRange !== \"Melee\"),\r\n                    { name: gearName, gearSlots: gearDetails.gearSlots },\r\n                ]);\r\n                return;\r\n            }\r\n            setSelectedGear([...selectedGear, { name: gearName, gearSlots: gearDetails.gearSlots }]);\r\n        }\r\n    };\r\n\r\n    return <React.Fragment>\r\n        <div className=\"single-selection-gear\">\r\n            <div className=\"modal-header\">Armour</div>\r\n            <GearDropDown\r\n                dropdownOptions={{\r\n                    id: \"Armour\",\r\n                    placeholder: getSelectedArmour() || { ...defaultArmour, type: \"Armour\" },\r\n                }}\r\n                list={getGearByType(\"Armour\") || []}\r\n                callbackFn={onClickHandler}\r\n            />\r\n        </div>\r\n        <div className=\"single-selection-gear\">\r\n            <div className=\"modal-header\">Melee Weapons</div>\r\n            <GearDropDown\r\n                dropdownOptions={{\r\n                    id: \"Melee\",\r\n                    placeholder: getSelectedMelee() || { ...defaultKnife, type: \"Weapon\", maxRange: \"Melee\" },\r\n                }}\r\n                list={getGearByType(\"Weapon\")?.filter((weapon) => weapon.maxRange === \"Melee\") || []}\r\n                callbackFn={onClickHandler}\r\n            />\r\n        </div>\r\n        <div className=\"modal-header\">Equipment</div>\r\n        {getGearByType(\"Equipment\")?.map((equi) =>\r\n            <div className=\"single-selection-gear\">\r\n                <div className={getCSSClasses(equi.name)} onClick={() => onClickHandler(equi.name)}>\r\n                    <div className=\"gear-label-name\">{`${equi.name} ( ${isGearSelected(equi.name) ? (selectedGear.find((item) => item.name === equi.name) as ModifiedGear).gearSlots : equi.gearSlots} )`}</div>\r\n                    <div className=\"medium-text\">{equi.notes}</div>\r\n                </div>\r\n            </div>)}\r\n\r\n        <div className=\"modal-header\">Shooting Weapons</div>\r\n        {getGearByType(\"Weapon\")?.filter((weapon) => weapon.maxRange !== \"Melee\").sort((a, b) => gearSortAlgorithm(a) - gearSortAlgorithm(b)).map((weapon) =>\r\n            <div className=\"single-selection-gear\">\r\n                <div className={getCSSClasses(weapon.name, true)} onClick={() => onClickHandler(weapon.name)}>\r\n                    <div className=\"gear-label-name\">{`${weapon.name} ( ${isGearSelected(weapon.name) ? (selectedGear.find((item) => item.name === weapon.name) as ModifiedGear).gearSlots : weapon.gearSlots} )`}</div>\r\n                    <div className=\"medium-text\">{`Range: ${weapon.maxRange}`} / {`${getDamageModifierString(weapon)} dmg`}</div>\r\n                    {weapon.notes ? <div className=\"medium-text\">{getActualNotes(selectedGear, weapon)}</div> : null}\r\n                </div>\r\n            </div>)}\r\n        <button\r\n            onClick={() => { updateGear(selectedGear.sort((a, b) => (a.name.localeCompare(b.name)))); finish(); }}\r\n            className={\"dialog-btn confirm-btn\"}\r\n        >{`${\"Confirm\"}`}</button>\r\n    </React.Fragment>;\r\n};\r\n","import React, { useLayoutEffect, useRef, useState } from \"react\";\r\n\r\nexport const InputComponent = ({ currentState, tooltip, cssClass, callback }: { currentState: string; tooltip: string; cssClass: string; callback(name: string): void }) => {\r\n    const [name, setName] = useState<string>(currentState);\r\n    const [inputVisible, setInputVisible] = useState<boolean>(false);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    useLayoutEffect(() => {\r\n        inputRef?.current?.focus();\r\n    }, [inputVisible]);\r\n\r\n    const checkEnter = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.code === \"Enter\") {\r\n            callback(name);\r\n            setInputVisible(false);\r\n        }\r\n        if (event.code === \"Escape\") {\r\n            setName(currentState);\r\n            callback(currentState);\r\n            setInputVisible(false);\r\n        }\r\n    };\r\n\r\n    return inputVisible ?\r\n        <input\r\n            ref={inputRef}\r\n            className={cssClass}\r\n            id=\"NameInput\"\r\n            onChange={(event: React.FormEvent<HTMLInputElement>) => setName(event.currentTarget.value)}\r\n            onKeyDown={checkEnter}\r\n            onBlur={() => {\r\n                callback(name);\r\n                setInputVisible(false);\r\n            }}\r\n            value={name}\r\n        /> :\r\n        <div\r\n            style={{ placeSelf: \"start\", padding: \"0.2rem 0.23rem\" }}\r\n            className={currentState ? \"input-text-div\" : \"input-text-div input-error\"}\r\n            onClick={() => setInputVisible(true)}>\r\n            {currentState || tooltip}\r\n        </div>;\r\n};\r\n","import { InputComponent } from \"./InputControl\";\r\n\r\nexport const NameComponent = ({ currentStateValue, tooltip, inputCallback }: { currentStateValue: string; tooltip: string; inputCallback(name: string): void }) =>\r\n    <div className=\"statusbar-name\">\r\n        <InputComponent callback={inputCallback} currentState={currentStateValue} tooltip={tooltip} cssClass=\"input-field\" />\r\n    </div>;\r\n","import React, { useState } from \"react\";\r\nimport { Character } from \"../../types/Characters\";\r\nimport { isCaptain } from \"../../Utils\";\r\nimport { NameComponent } from \"../NameComponent\";\r\n\r\nexport const SelectName = ({ character, updateAndContinue }: { character: Character; updateAndContinue(value: Character): void }) => {\r\n    const [name, setName] = useState<string>(character.name);\r\n    const characterType = isCaptain(character.type) ? \"Captain\" : \"First Mate\";\r\n\r\n    return <React.Fragment>\r\n        <div className=\"modal-header\">\r\n            {`This is your ${characterType} base stat line. \\n\\nIn the following screens you will be able to select a background, improve some stats, select powers and equip your ${characterType} with some useful gear.`}\r\n        </div>\r\n        <div className=\"modal-header\">{`But first of all, your ${characterType} needs a name:`}</div>\r\n        <NameComponent inputCallback={setName} currentStateValue={name} tooltip={`${characterType}'s name`} />\r\n        <button\r\n            onClick={() => name ? updateAndContinue({ ...character, name }) : undefined}\r\n            className={name ? \"dialog-btn confirm-btn\" : \"dialog-btn confirm-btn disabled\"}\r\n        >Confirm</button>\r\n    </React.Fragment>;\r\n};\r\n","import { useState } from \"react\";\r\nimport ReactSwipe from \"react-swipe\";\r\nimport { CarouselSize } from \"../../types/State\";\r\n\r\nexport const Carousel = ({ inputDivs, splitSize, size }: { inputDivs: JSX.Element[] | null; splitSize: number; size?: CarouselSize }) => {\r\n    let reactSwipeEl: ReactSwipe;\r\n    const cnt = inputDivs?.length || 0;\r\n    const sectionCnt = Math.ceil(cnt / splitSize);\r\n    const [currentSection, setCurrentSection] = useState<number>(1);\r\n    const getContent = () => {\r\n        const sectionDivs: JSX.Element[] = [];\r\n        for (let i = 0; i < sectionCnt; i++) {\r\n            sectionDivs.push(<div>{inputDivs?.slice((i * splitSize), (i + 1) * splitSize)}</div>);\r\n        }\r\n        return sectionDivs;\r\n    };\r\n    return (\r\n        <div>\r\n            <ReactSwipe\r\n                className={size === CarouselSize.large ? \"carousel large\" : size === CarouselSize.medium ? \"carousel medium\" : \"carousel\"}\r\n                swipeOptions={{\r\n                    continuous: false,\r\n                }}\r\n                ref={(el: ReactSwipe) => (reactSwipeEl = el)}\r\n                childCount={sectionCnt}\r\n            >\r\n                {getContent()}\r\n            </ReactSwipe>\r\n            <div style={{ display: \"inline-grid\", width: \"100%\" }}>\r\n                <button\r\n                    className={currentSection === 1 ? \"carousel-btn disabled\" : \"carousel-btn\"}\r\n                    onClick={() => {\r\n                        setCurrentSection(reactSwipeEl.getPos());\r\n                        reactSwipeEl.prev();\r\n                    }}\r\n                >{\"<\"}</button>\r\n                <div style={{ gridArea: \"1\", placeSelf: \"center\" }}>{`${currentSection} / ${sectionCnt}`}</div>\r\n                <button\r\n                    className={(currentSection === sectionCnt) ? \"carousel-btn disabled\" : \"carousel-btn\"}\r\n                    onClick={() => {\r\n                        setCurrentSection(reactSwipeEl.getPos() + 2);\r\n                        reactSwipeEl.next();\r\n                    }}\r\n                >{\">\"}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { Stats } from \"./Characters\";\r\n\r\nexport enum SoldierGroups {\r\n    Standard = \"Standard\",\r\n    Specialist = \"Specialist\",\r\n}\r\n\r\nexport interface SoldierMetadata {\r\n    type: string;\r\n    cost: number;\r\n    stats: Stats;\r\n    gear: string[];\r\n    group: SoldierGroups;\r\n}\r\n\r\nexport interface CharacterMetadata {\r\n    stats: Stats;\r\n    level: number;\r\n    gearSlots: number;\r\n    type: string;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport * as Backgrounds from \"../../data/Backgrounds.json\";\r\nimport { BackgroundEnum, BackgroundModifications, BackgroundOptions } from \"../../types/Background\";\r\nimport { Power } from \"../../types/Characters\";\r\nimport { getNonCorePowers, isCorePower } from \"../../Utils\";\r\nimport { Carousel } from \"./Carousel\";\r\n\r\nconst backgroundInformation = Backgrounds.backgrounds as BackgroundOptions[];\r\nconst getBackgroundInfos = (background: BackgroundEnum) => backgroundInformation.find((bg) => bg.name === background) as BackgroundOptions;\r\n\r\nexport const SelectNonCorePowers = (\r\n    { background, corePowers, isCaptain, updatePowers }:\r\n        { background: BackgroundModifications; corePowers: Power[]; isCaptain: boolean; updatePowers(value: Power[]): void }\r\n) => {\r\n    const [selectedPowers, setSelectedPowers] = useState<Power[]>([]);\r\n    const [previewPower, setPreviewPower] = useState<Power | undefined>(undefined);\r\n    const [filteredPowerList, setFilteredPowerList] = useState<Power[]>(getNonCorePowers(background.name, isCaptain));\r\n    const isPowerSelected = (power: Power) => !!selectedPowers.find((pwr) => pwr.name === power.name);\r\n    const infos = getBackgroundInfos(background.name);\r\n    const maxCorePowersSelected = () => {\r\n        let powersRemaining2 = isCaptain ? 4 : 3;\r\n        if (selectedPowers.filter((power) => !isCorePower(power.name, background.name)).length === 2) {\r\n            powersRemaining2 = isCaptain ? 3 : 2;\r\n        }\r\n        return selectedPowers.filter((power) => isCorePower(power.name, background.name)).length >= powersRemaining2;\r\n    };\r\n    const powersRemaining = (isCaptain ? 5 : 4) - corePowers.length;\r\n\r\n    return <React.Fragment>\r\n        {previewPower ?\r\n            <React.Fragment>\r\n                <div className=\"modal-header\">\r\n                    {`View Details for Power \"${previewPower.name}\"`}\r\n                    <div className=\"modal-sub-header\">{\"Click the back to return to the selection menu.\"}</div>\r\n                </div>\r\n                <div className=\"power-preview-section\">\r\n                    <div className=\"power-preview-name\">{`${previewPower.name}`}</div>\r\n                    <div className=\"power-preview-infos\">\r\n                        {`Activation: ${previewPower.activation}`} / {`Strain: ${previewPower.strain}`} / {Array.isArray(previewPower.category) ? `Categories: ${previewPower.category.join(\", \")}` : `Category: ${previewPower.category}`}\r\n                    </div>\r\n                    <div className={previewPower.effect.length <= 200 ? \"large-text\" : previewPower.effect.length <= 400 ? \"power-preview-medium-text\" : \"power-preview-small-text\"}>{previewPower.effect}</div>\r\n                </div>\r\n            </React.Fragment> :\r\n            <React.Fragment>\r\n                <div className=\"modal-header\">\r\n                    {`Choose ${powersRemaining} additional ${powersRemaining === 1 ? \"Power\" : \"Powers\"}`}\r\n                    <div className=\"modal-sub-header\">{\"Swipe or use the page buttons to see more entries\"}</div>\r\n                </div>\r\n                {/* <div className=\"single-selection-gear\">\r\n                    <PowerFilter\r\n                        list={Object.values(PowerCategory)}\r\n                        dropdownOptions={{ placeholder: \"Filter by Category\", id: \"power-category-filter\" }}\r\n                        callbackFn={(item) => setFilteredPowerList(getNonCorePowers(background.name, isCaptain).filter((power) => Array.isArray(power.category) ? power.category.find((cat) => cat === item) : power.category === item))} />\r\n                </div>\r\n                <div className=\"single-selection-gear\">\r\n                    <PowerFilter\r\n                        list={getNonCorePowers(background.name, isCaptain).map((power) => `${power.activation}`).filter((val, idx, arr) => idx === arr.indexOf(val)).sort((a, b) => parseInt(a, 10) - parseInt(b, 10))}\r\n                        dropdownOptions={{ placeholder: \"Filter by Activation\", id: \"power-activation-filter\" }}\r\n                        callbackFn={(item) => setFilteredPowerList(getNonCorePowers(background.name, isCaptain).filter((power) => power.activation === parseInt(item, 10)))} />\r\n                </div> */}\r\n                <Carousel splitSize={8} inputDivs={background ? filteredPowerList.map((power) =>\r\n                    <div\r\n                        onClick={() => {\r\n                            if (isPowerSelected(power)) {\r\n                                const idx = selectedPowers.findIndex((pwr) => pwr.name === power.name);\r\n                                if (idx !== -1) {\r\n                                    setSelectedPowers([...selectedPowers.slice(0, idx), ...selectedPowers.slice(idx + 1, selectedPowers.length)]);\r\n                                }\r\n                            } else {\r\n                                if (maxCorePowersSelected()) {\r\n                                    return;\r\n                                }\r\n                                setSelectedPowers([...selectedPowers, { ...power, activation: power.activation }]);\r\n                            }\r\n                        }}\r\n                        className={isPowerSelected(power) ? \"power-selection selected\" : maxCorePowersSelected() ? \"power-selection disabled\" : \"power-selection\"}\r\n                        key={`add_dialog_x_stat_${power.name}`}>\r\n\r\n                        <div className={isPowerSelected(power) ? \"info-corner inverted\" : \"info-corner\"} />\r\n                        <div className=\"info-corner-text\">i</div>\r\n                        <div>{power.name}</div>\r\n                        <div style={{ fontSize: \"0.8rem\" }}>{power.activation} / {power.strain} / {Array.isArray(power.category) ? `${power.category.join(\", \")}` : power.category}</div>\r\n                        <div className=\"info-click-area-non-core\"\r\n                            onClick={(event) => {\r\n                                setPreviewPower(isCaptain ? power : { ...power, activation: power.activation + 2 });\r\n                                event.preventDefault();\r\n                                event.stopPropagation();\r\n                            }} />\r\n                    </div>\r\n\r\n                ) : null}\r\n\r\n                />\r\n\r\n            </React.Fragment>}\r\n        {previewPower ? <button\r\n            onClick={(event) => {\r\n                setPreviewPower(undefined);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }}\r\n            className={\"dialog-btn back-btn foreground\"}\r\n        >Back</button> : null}\r\n        <button\r\n            onClick={() => selectedPowers.length === powersRemaining ? updatePowers([...selectedPowers, ...corePowers].sort((a, b) => (a.name.localeCompare(b.name)))) : undefined}\r\n            className={selectedPowers.length === powersRemaining ? \"dialog-btn confirm-btn\" : \"dialog-btn confirm-btn disabled\"}\r\n        >Confirm</button>\r\n    </React.Fragment>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as Backgrounds from \"../../data/Backgrounds.json\";\r\nimport { BackgroundEnum, BackgroundModifications, BackgroundOptions } from \"../../types/Background\";\r\nimport { Power } from \"../../types/Characters\";\r\nimport { getPowerInfos } from \"../../Utils\";\r\n\r\nconst backgroundInformation = Backgrounds.backgrounds as BackgroundOptions[];\r\nconst getBackgroundInfos = (background: BackgroundEnum) => backgroundInformation.find((bg) => bg.name === background) as BackgroundOptions;\r\n\r\nexport const SelectPowers = (\r\n    { background, isCaptain, updatePowers }:\r\n        { background: BackgroundModifications; isCaptain: boolean; updatePowers(value: Power[]): void }\r\n) => {\r\n    const [selectedPowers, setSelectedPowers] = useState<Power[]>([]);\r\n    const [previewPower, setPreviewPower] = useState<Power>();\r\n\r\n    const isPowerSelected = (power: Power) => !!selectedPowers.find((pwr) => pwr.name === power.name);\r\n    const minPowersSelected = () => selectedPowers.length >= (isCaptain ? 3 : 2);\r\n    const maxPowersSelected = () => selectedPowers.length >= (isCaptain ? 4 : 3);\r\n\r\n    return <React.Fragment>\r\n        {previewPower ?\r\n            <React.Fragment>\r\n                <div className=\"modal-header\">\r\n                    {`View Details for Power \"${previewPower.name}\"`}\r\n                    <div className=\"modal-sub-header\">{\"Click the back to return to the selection menu.\"}</div>\r\n                </div>\r\n                <div className=\"power-preview-section\">\r\n                    <div className=\"power-preview-name\">{`${previewPower.name}`}</div>\r\n                    <div className=\"power-preview-infos\">\r\n                        {`Activation: ${previewPower.activation}`} / {`Strain: ${previewPower.strain}`} / {Array.isArray(previewPower.category) ? `Categories: ${previewPower.category.join(\", \")}` : `Category: ${previewPower.category}`}\r\n                    </div>\r\n                    <div className={previewPower.effect.length <= 200 ? \"large-text\" : previewPower.effect.length <= 400 ? \"power-preview-medium-text\" : \"power-preview-small-text\"}>{previewPower.effect}</div>\r\n                </div>\r\n            </React.Fragment> :\r\n            <React.Fragment>\r\n                <div className=\"modal-header\">\r\n                    {`Choose ${isCaptain ? \"3 - 4\" : \"2 - 3\"} core Powers`}\r\n                    <div className=\"modal-sub-header\">{\"Click the info icon in the top right corner of a power to view its details\"}</div>\r\n                </div>\r\n                {background ? getPowerInfos(getBackgroundInfos(background.name).corePowers).map((power) => <div style={{ display: \"inline-block\", width: \"100%\" }}>\r\n                    <div\r\n                        onClick={() => {\r\n                            if (isPowerSelected(power)) {\r\n                                const idx = selectedPowers.findIndex((pwr) => pwr.name === power.name);\r\n                                if (idx !== -1) {\r\n                                    setSelectedPowers([...selectedPowers.slice(0, idx), ...selectedPowers.slice(idx + 1, selectedPowers.length)]);\r\n                                }\r\n                            } else {\r\n                                if (maxPowersSelected()) {\r\n                                    return;\r\n                                }\r\n                                setSelectedPowers([...selectedPowers, { ...power, activation: power.activation + (isCaptain ? 0 : 2) }]);\r\n                            }\r\n                        }}\r\n                        className={isPowerSelected(power) ? \"power-selection selected\" : maxPowersSelected() ? \"power-selection disabled\" : \"power-selection\"}\r\n                        key={`add_dialog_x_stat_${power.name}`}>\r\n\r\n                        <div className={isPowerSelected(power) ? \"info-corner inverted\" : \"info-corner \"} />\r\n                        <div className=\"info-corner-text\">i</div>\r\n                        <div>{power.name}</div>\r\n                        <div style={{ fontSize: \"0.8rem\" }}>{power.activation + (isCaptain ? 0 : 2)} / {power.strain} / {Array.isArray(power.category) ? `${power.category.join(\", \")}` : power.category}</div>\r\n                    </div>\r\n                    <div className=\"info-click-area\"\r\n                        onClick={(event) => {\r\n                            setPreviewPower(isCaptain ? power : { ...power, activation: power.activation + 2 });\r\n                            event.preventDefault();\r\n                            event.stopPropagation();\r\n                        }} />\r\n                </div>\r\n                ) : null}\r\n            </React.Fragment>}\r\n        {previewPower ? <button\r\n            onClick={(event) => {\r\n                setPreviewPower(undefined);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }}\r\n            className={\"dialog-btn back-btn foreground\"}\r\n        >Back</button> : null}\r\n        <button\r\n            onClick={() => minPowersSelected() ? updatePowers(selectedPowers.sort((a, b) => (a.name.localeCompare(b.name)))) : undefined}\r\n            className={minPowersSelected() ? \"dialog-btn confirm-btn\" : \"dialog-btn confirm-btn disabled\"}\r\n        >Confirm</button>\r\n    </React.Fragment>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Power } from \"../../types/Characters\";\r\n\r\nexport const SelectPowerUpgrades = ({ powers, upgradePowers }: { powers: Power[]; upgradePowers(value: Power[]): void }) => {\r\n    const [selectedPowers, setSelectedPowers] = useState<Power[]>([]);\r\n    const [previewPower, setPreviewPower] = useState<Power | undefined>(undefined);\r\n    const updatedArray = () => powers.filter((pwr) => !selectedPowers.find((x) => x.name === pwr.name)).concat(selectedPowers).sort((a, b) => (a.name.localeCompare(b.name)));\r\n    const isPowerSelected = (power: Power) => !!selectedPowers.find((pwr) => pwr.name === power.name);\r\n    return <React.Fragment >\r\n        {previewPower ?\r\n            <React.Fragment >\r\n                <div className=\"modal-header\">\r\n                    {`View Details for Power \"${previewPower.name}\"`}\r\n                    <div className=\"modal-sub-header\">{\"Click the back to return to the selection menu.\"}</div>\r\n                </div>\r\n                <div className=\"power-preview-section\">\r\n                    <div className=\"power-preview-name\">{`${previewPower.name}`}</div>\r\n                    <div className=\"power-preview-infos\">\r\n                        {`Activation: ${previewPower.activation}`} / {`Strain: ${previewPower.strain}`} / {Array.isArray(previewPower.category) ? `Categories: ${previewPower.category.join(\", \")}` : `Category: ${previewPower.category}`}\r\n                    </div>\r\n                    <div className={previewPower.effect.length <= 200 ? \"large-text\" : previewPower.effect.length <= 400 ? \"power-preview-medium-text\" : \"power-preview-small-text\"}>{previewPower.effect}</div>\r\n                </div>\r\n            </React.Fragment > :\r\n            <React.Fragment>\r\n                <div className=\"modal-header\">Select 2 of the following powers to lower their activation value by 1 each</div>\r\n                {powers.map((power) => <div style={{ display: \"inline-block\", width: \"100%\" }}>\r\n                    <div className={isPowerSelected(power) ? \"background-power-selection full-width selected\" : \"background-power-selection full-width\"}\r\n                        onClick={() => {\r\n                            if (selectedPowers.find((pwr) => pwr.name === power.name)) {\r\n                                setSelectedPowers(selectedPowers.filter((pwr) => pwr.name !== power.name));\r\n                            } else {\r\n                                if (selectedPowers.length >= 2) {\r\n                                    return;\r\n                                }\r\n                                setSelectedPowers([...selectedPowers, { ...power, activation: power.activation - 1 }]);\r\n                            }\r\n                        }}\r\n                        key={`add_dialog_x_stat_${power.name}`}>\r\n                        <div className={isPowerSelected(power) ? \"info-corner inverted\" : \"info-corner \"} />\r\n                        <div className=\"info-corner-text\">i</div>\r\n                        <div>{power.name}</div>\r\n                        <div style={{ fontSize: \"0.8rem\" }}>{isPowerSelected(power) ? power.activation - 1 : power.activation} / {power.strain} / {Array.isArray(power.category) ? `${power.category.join(\", \")}` : power.category}</div>\r\n\r\n                    </div>\r\n                    <div className=\"info-click-area\"\r\n                        onClick={(event) => {\r\n                            setPreviewPower(power);\r\n                            event.preventDefault();\r\n                            event.stopPropagation();\r\n                        }} />\r\n                </div>)}\r\n\r\n            </React.Fragment >\r\n        }\r\n        {previewPower ? <button\r\n            onClick={(event) => {\r\n                setPreviewPower(undefined);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }}\r\n            className={\"dialog-btn back-btn foreground\"}\r\n        >Back</button> : null}\r\n        <button\r\n            onClick={() => selectedPowers.length === 2 ? upgradePowers(updatedArray()) : undefined}\r\n            className={selectedPowers.length === 2 ? \"dialog-btn confirm-btn\" : \"dialog-btn confirm-btn disabled\"}\r\n        >Confirm</button>\r\n    </React.Fragment >;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Backgrounds from \"../../data/Backgrounds.json\";\r\nimport { BackgroundEnum, BackgroundModifications, BackgroundOptions } from \"../../types/Background\";\r\nimport { Stats, StatsEnum } from \"../../types/Characters\";\r\n\r\nconst backgroundInformation = Backgrounds.backgrounds as BackgroundOptions[];\r\nconst getBackgroundInfos = (background: BackgroundEnum) => backgroundInformation.find((bg) => bg.name === background) as BackgroundOptions;\r\n\r\nexport const SelectStatsImprovements = ({ background, updateStatsCallback, updateAndContinue }: { background: BackgroundModifications; updateStatsCallback(value: React.SetStateAction<Partial<Stats>>): void; updateAndContinue(): void }) => {\r\n    const [selections, setSelections] = useState<Array<Partial<Stats>>>([]);\r\n    useEffect(() => {\r\n        const mand = background.statModifications.mandatory;\r\n        const parts: Partial<Stats> = {};\r\n        const merged: Partial<Stats> = Object.assign(parts, ...selections);\r\n        updateStatsCallback(Object.fromEntries([...Object.entries(mand), ...Object.entries(merged)].reduce((acc, [key, value]) => acc.set(key, (acc.get(key) || 0) + (value || 0)), new Map<string, number | undefined>())));\r\n    }, [selections]);\r\n    const isStatSelected = (statName: string) => selections.find((stat) => stat[statName as StatsEnum] !== undefined);\r\n    const statModificationsForBackground = getBackgroundInfos(background.name).statModifications;\r\n    const maxStatsReached = () => selections.length === statModificationsForBackground.chooseOptionals;\r\n    return <React.Fragment>\r\n        <div style={{ marginTop: \"0.5rem\" }} className=\"modal-header\">Granted Stats Improvements</div>\r\n        {Object.entries(statModificationsForBackground.mandatory).map(([statName, statValue]) =>\r\n            <div className=\"background-stat-selection background-stat-selected\" key={`add_captain_dialog_mand_stat_${statName}`}>+{statValue} {statName}</div>\r\n        )}\r\n        <div className=\"modal-header\">{`Optional Stats Improvements \\n (choose ${statModificationsForBackground.chooseOptionals} of the following)`}</div>\r\n        {Object.entries(statModificationsForBackground.optional).map(([statName, statValue]) =>\r\n            <div\r\n                onClick={() => {\r\n                    if (isStatSelected(statName)) {\r\n                        setSelections(selections.filter((stat) => stat[statName as StatsEnum] === undefined));\r\n                    } else {\r\n                        if (maxStatsReached()) {\r\n                            return;\r\n                        }\r\n                        setSelections([...selections, { [statName]: statValue }]);\r\n                    }\r\n                }}\r\n                className={isStatSelected(statName) ? \"background-stat-selection background-stat-selected\" : maxStatsReached() ? \"background-stat-selection disabled\" : \"background-stat-selection\"}\r\n                key={`add_captain_dialog_opt_stat_${statName}`}>\r\n                +{statValue} {statName}\r\n            </div>\r\n        )}\r\n        <button\r\n            onClick={() => maxStatsReached() ? updateAndContinue() : undefined}\r\n            className={maxStatsReached() ? \"dialog-btn confirm-btn\" : \"dialog-btn confirm-btn disabled\"}\r\n        >Confirm</button>\r\n    </React.Fragment>;\r\n};\r\n","import * as Characters from \"../data/Characters.json\";\r\nimport { Character, Soldier, StatsEnum } from \"../types/Characters\";\r\nimport { CharacterMetadata } from \"../types/Metadata\";\r\nimport { getStatStrings, getStatsWithGear, isCaptain } from \"../Utils\";\r\n\r\nconst baseCaptain = Characters.Captain as CharacterMetadata;\r\nconst baseFirstMate = Characters.FirstMate as CharacterMetadata;\r\n\r\nexport const CharacterStatusBarTable = ({ character, gearSlotsUsed, isTileTable }: { character: Character; gearSlotsUsed: number; isTileTable?: boolean }) =>\r\n    <table className={isTileTable ? \"character-tile-table\" : \"character-statusbar-table\"}>\r\n        <colgroup>\r\n            <col style={{ width: \"14%\" }} />\r\n            <col style={{ width: \"14%\" }} />\r\n            <col style={{ width: \"14%\" }} />\r\n            <col style={{ width: \"14%\" }} />\r\n            <col style={{ width: \"14%\" }} />\r\n            <col style={{ width: \"14%\" }} />\r\n            <col style={{ width: \"14%\" }} />\r\n        </colgroup>\r\n        <thead>\r\n            <tr className={isTileTable ? \"small-text centered-text\" : \"small-text\"}>\r\n                {Object.keys(StatsEnum).map((stat) => <td key={`add_dialog__stat_header_${stat}`}>{stat}</td>)}\r\n                <td key={\"add_dialog_stat_header_gear\"}>Gear</td>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr className={isTileTable ? \"centered-text\" : \"\"}>\r\n                {getStatStrings(getStatsWithGear(character.stats, {}, character.gear)).map((stat) =>\r\n                    <td\r\n                        className={getStatsWithGear(character.stats, {}, character.gear)[Object.keys(stat)[0] as StatsEnum] !== (isCaptain(character.type) ? baseCaptain : baseFirstMate).stats[Object.keys(stat)[0] as StatsEnum] ? \"improved-stat\" : \"\"}\r\n                        key={`add_dialog_${character.name}_stat_${Object.keys(stat)[0]}`}>\r\n                        {stat[Object.keys(stat)[0]]}\r\n                    </td>\r\n                )}\r\n                <td>{`${gearSlotsUsed}/${character.gearSlots}`}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>;\r\n\r\nexport const SoldierStatusBarTable = ({ soldier, gearSlotsUsed, isTileTable }: { soldier: Soldier; gearSlotsUsed: number; isTileTable?: boolean }) =>\r\n    <table className={isTileTable ? \"character-tile-table\" : \"character-statusbar-table\"}>\r\n        <colgroup>\r\n            <col style={{ width: \"14%\" }} />\r\n            <col style={{ width: \"14%\" }} />\r\n            <col style={{ width: \"14%\" }} />\r\n            <col style={{ width: \"14%\" }} />\r\n            <col style={{ width: \"14%\" }} />\r\n            <col style={{ width: \"14%\" }} />\r\n            <col style={{ width: \"14%\" }} />\r\n        </colgroup>\r\n        <thead>\r\n            <tr className={isTileTable ? \"small-text centered-text\" : \"small-text\"}>\r\n                {Object.keys(StatsEnum).map((stat) => <td key={`add_dialog__stat_header_${stat}`}>{stat}</td>)}\r\n                <td key={\"add_dialog_stat_header_gear\"}>Gear</td>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr className={isTileTable ? \"centered-text\" : \"\"}>\r\n                {getStatStrings(soldier.stats).map((stat) =>\r\n                    <td\r\n                        key={`add_dialog_${soldier.type}_stat_${Object.keys(stat)[0]}`}>\r\n                        {stat[Object.keys(stat)[0]]}\r\n                    </td>\r\n                )}\r\n                <td>{`${gearSlotsUsed}/1`}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>;\r\n","import { connect } from \"react-redux\";\r\nimport { Character } from \"../../types/Characters\";\r\nimport { CrewState } from \"../../types/State\";\r\nimport { isCaptain } from \"../../Utils\";\r\nimport { CharacterStatusBarTable } from \"../CharacterStatusBarTable\";\r\n\r\nexport const Statusbar = ({ character, gearSlotsUsed }: { character: Character; gearSlotsUsed: number }) =>\r\n    <div key=\"statusbar\" id=\"statusbar\" className=\"statusbar\" >\r\n        <div className=\"statusbar-tiles\" style={{ display: \"block\", float: \"none\" }}>{`${isCaptain(character.type) ? \"Cpt.\" : \"Ltn.\"} ${character.name}` || \"Unnamed Character\"}</div>\r\n        <CharacterStatusBarTable\r\n            character={character}\r\n            gearSlotsUsed={gearSlotsUsed} />\r\n    </div>;\r\n\r\nconst mapStateToProps = (state: CrewState) => state;\r\n\r\nexport const CharacterStatusbar = connect(mapStateToProps)(Statusbar);\r\n","import { Character, Soldier } from \"../types/Characters\";\r\nimport { CrewState } from \"../types/State\";\r\n\r\nexport const ADD_SOLDIERS = \"ADD_SOLDIERS\";\r\nexport const SET_CAPTAINS_NAME = \"SET_CAPTAINS_NAME\";\r\nexport const SET_FIRST_MATE = \"SET_FIRST_MATE\";\r\nexport const SET_CAPTAIN = \"SET_CAPTAIN\";\r\nexport const SET_CREW = \"SET_CREW\";\r\nexport const SET_CREWNAME = \"SET_CREWNAME\";\r\n\r\ninterface SetCrew {\r\n    type: typeof SET_CREW;\r\n    payload: CrewState;\r\n}\r\n\r\ninterface SetCrewName {\r\n    type: typeof SET_CREWNAME;\r\n    payload: string;\r\n}\r\n\r\ninterface SetCaptainsName {\r\n    type: typeof SET_CAPTAINS_NAME;\r\n    payload: string;\r\n}\r\n\r\ninterface SetCaptain {\r\n    type: typeof SET_CAPTAIN;\r\n    payload: Character;\r\n}\r\n\r\ninterface SetFirstMate {\r\n    type: typeof SET_FIRST_MATE;\r\n    payload: Character;\r\n}\r\n\r\ninterface AddSoldiers {\r\n    type: typeof ADD_SOLDIERS;\r\n    payload: Soldier[];\r\n}\r\nexport type Actions = SetCrew | SetCrewName | SetCaptainsName | SetCaptain | SetFirstMate | AddSoldiers;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SelectBackground } from \"../components/characterDialog/SelectBackground\";\r\nimport { SelectGear } from \"../components/characterDialog/SelectGear\";\r\nimport { SelectName } from \"../components/characterDialog/SelectName\";\r\nimport { SelectNonCorePowers } from \"../components/characterDialog/SelectNonCorePowers\";\r\nimport { SelectPowers } from \"../components/characterDialog/SelectPowers\";\r\nimport { SelectPowerUpgrades } from \"../components/characterDialog/SelectPowerUpgrades\";\r\nimport { SelectStatsImprovements } from \"../components/characterDialog/SelectStatsImprovements\";\r\nimport { CharacterStatusbar } from \"../components/statusbar/CharacterStatusBar\";\r\nimport { SET_CAPTAIN, SET_FIRST_MATE } from \"../redux/actions\";\r\nimport { BackgroundModifications } from \"../types/Background\";\r\nimport { Character, ModifiedGear, Power, Stats, StatsEnum } from \"../types/Characters\";\r\nimport { getStatsWithGear, isCaptain } from \"../Utils\";\r\n// tslint:disable-next-line: cyclomatic-complexity\r\nexport const CharacterCreation = ({ baseCharacter }: { baseCharacter: Character }) => {\r\n    const [character, setCharacter] = useState<Character>(baseCharacter);\r\n    const [background, setBackground] = useState<BackgroundModifications>();\r\n    const [updatedStats, setUpdatedStats] = useState<Partial<Stats>>({});\r\n    const [selectedPowers, setSelectedPowers] = useState<Power[]>([]);\r\n    const [statsSelected, setStatsSelected] = useState<boolean>(false);\r\n    const [powersUpgraded, setPowersUpgraded] = useState<boolean>(false);\r\n    const [gear, setGear] = useState<ModifiedGear[]>([]);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const isCaptainCharacter = isCaptain(character.type);\r\n    const improvedStats = () => Object.keys(character.stats).reduce(\r\n        (acc, stat) => ({ ...acc, [stat]: (character.stats[stat as StatsEnum] || 0) + (updatedStats[stat as StatsEnum] || 0) }),\r\n        { \"Move\": 0, \"Fight\": 0, \"Shoot\": 0, \"Armour\": 0, \"Will\": 0, \"Health\": 0 }\r\n    );\r\n    const finishPowerUpgrades = (powers: Power[]) => {\r\n        setPowersUpgraded(true);\r\n        setSelectedPowers(powers);\r\n    };\r\n    const finishCreation = () => {\r\n        dispatch({\r\n            type: isCaptain(character.type) ? SET_CAPTAIN : SET_FIRST_MATE,\r\n            payload: {\r\n                ...character,\r\n                stats: improvedStats(),\r\n                background: background?.name,\r\n                powers: selectedPowers,\r\n                gear,\r\n            },\r\n        });\r\n        isCaptainCharacter ? history.push(\"/FirstMateCreation\", { isCaptain: false }) : history.push(\"/SoldierSelection\");\r\n    };\r\n    return <React.Fragment>\r\n        <CharacterStatusbar\r\n            character={background ? { ...character, stats: getStatsWithGear(character.stats, updatedStats, gear), background: background.name, powers: [] } : character}\r\n            gearSlotsUsed={gear.reduce((acc, gearItem) => acc + gearItem.gearSlots, 0)}\r\n        />\r\n        {!character.name ? <SelectName\r\n            character={character}\r\n            updateAndContinue={(val: Character) => { setCharacter(val); }}\r\n        /> : null}\r\n        {!background && character.name ? <SelectBackground\r\n            character={character}\r\n            updateAndContinue={(val: BackgroundModifications) => { setBackground(val); }}\r\n        /> : null}\r\n        {background && !statsSelected ? <SelectStatsImprovements\r\n            background={background}\r\n            updateStatsCallback={(value) => { setUpdatedStats(value); }}\r\n            updateAndContinue={() => setStatsSelected(true)}\r\n        /> : null}\r\n        {background && statsSelected && !(selectedPowers.length > 0) ?\r\n            <SelectPowers background={background} isCaptain={isCaptainCharacter} updatePowers={setSelectedPowers} />\r\n            : null}\r\n        {background && statsSelected && selectedPowers.length > 0 && selectedPowers.length !== (isCaptainCharacter ? 5 : 4) ?\r\n            <SelectNonCorePowers background={background} corePowers={selectedPowers} isCaptain={isCaptainCharacter} updatePowers={isCaptainCharacter ? setSelectedPowers : finishPowerUpgrades} />\r\n            : null}\r\n        {background && statsSelected && selectedPowers.length > 0 && selectedPowers.length === (isCaptainCharacter ? 5 : 4) && !powersUpgraded ?\r\n            <SelectPowerUpgrades powers={selectedPowers} upgradePowers={finishPowerUpgrades} />\r\n            : null}\r\n        {background && statsSelected && powersUpgraded ?\r\n            <SelectGear isCaptain={isCaptainCharacter} updateGear={setGear} finish={finishCreation} />\r\n            : null}\r\n        {character.name ?\r\n            <button\r\n                onClick={() => {\r\n                    if (background && statsSelected && selectedPowers.length > 0 && powersUpgraded) {\r\n                        setGear([]);\r\n                        setPowersUpgraded(false);\r\n                        setSelectedPowers([]);\r\n                        return;\r\n                    }\r\n                    if (background && statsSelected && selectedPowers.length > 0) {\r\n                        setSelectedPowers([]);\r\n                        return;\r\n                    }\r\n                    if (background && statsSelected) {\r\n                        setStatsSelected(false);\r\n                        setUpdatedStats({});\r\n                        return;\r\n                    }\r\n                    if (background) {\r\n                        setBackground(undefined);\r\n                        return;\r\n                    }\r\n                    if (!background && character.name) {\r\n                        setCharacter({ ...character, name: \"\" });\r\n                        return;\r\n                    }\r\n                }}\r\n                className={\"dialog-btn back-btn\"}\r\n            >Back</button>\r\n            : undefined}\r\n    </React.Fragment>;\r\n};\r\n","import { CharacterCreation } from \"../components/CreateCharacter\";\r\nimport * as Characters from \"../data/Characters.json\";\r\nimport { CharacterMetadata } from \"../types/Metadata\";\r\n\r\nexport const CaptainCreationPage = () => {\r\n    const baseCaptain = Characters.Captain as CharacterMetadata;\r\n    return <CharacterCreation baseCharacter={{ ...baseCaptain, name: \"\" }} />;\r\n};\r\n","import React from \"react\";\r\nimport { Character, Gear, ModifiedGear, Soldier } from \"../types/Characters\";\r\nimport { getGearDetails } from \"../Utils\";\r\n\r\nconst renderGear = (gear: Gear[] | ModifiedGear[], renderSoldier?: boolean) => <table className=\"character-tile-table\" style={{ width: \"100%\" }}>\r\n    <colgroup>\r\n        <col style={{ width: \"25%\" }} />\r\n        <col style={{ width: \"75%\" }} />\r\n    </colgroup>\r\n    <tbody>\r\n        <tr>\r\n            <td style={{ fontSize: \"1rem\", paddingRight: \"1rem\" }}>Gear</td>\r\n            <td className=\"small-text\">\r\n                {`${renderSoldier ?\r\n                    gear.map((gearItem: ModifiedGear) => gearItem.name).join(\", \") :\r\n                    gear.map((gearItem: ModifiedGear) => `${gearItem.name} (${gearItem.gearSlots})`).join(\", \")}`}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>;\r\n\r\nexport const CharacterTileGearAndPowers = ({ character }: { character: Character }) =>\r\n    <React.Fragment>\r\n        <table className=\"character-tile-table\" style={{ width: \"100%\", textAlign: \"left\" }}>\r\n            <colgroup>\r\n                <col style={{ width: \"25%\" }} />\r\n                <col style={{ width: \"75%\" }} />\r\n            </colgroup>\r\n            <tbody>\r\n                <tr>\r\n                    <td style={{ fontSize: \"1rem\", paddingRight: \"1rem\" }}>Powers</td>\r\n                    <td className=\"small-text\">{`${character.powers?.map((power) => `${power.name} (${power.activation})`).join(\", \")}`}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        {character.gear ? renderGear(character.gear) : null}\r\n    </React.Fragment>;\r\n\r\nexport const SoldierTileGearAndPowers = ({ soldier }: { soldier: Soldier }) =>\r\n    <React.Fragment>\r\n        {soldier.gear ? renderGear(soldier.gear.map(getGearDetails), true) : null}\r\n    </React.Fragment>;\r\n","import { Character, Soldier } from \"../types/Characters\";\r\nimport { isCaptain } from \"../Utils\";\r\n\r\nexport const CharacterTileHeader = ({ character }: { character: Character }) =>\r\n    <table className=\"character-tile-table\" style={{ width: \"100%\" }}>\r\n        <tbody>\r\n            <tr>\r\n                <td>\r\n                    {`${isCaptain(character.type) ? \"Cpt.\" : \"Ltn.\"} ${character.name} (${character.background})`}\r\n                </td>\r\n                <td style={{ textAlign: \"end\" }}>{`Level ${character.level}`}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>;\r\n\r\nexport const SoldierTileHeader = ({ soldier }: { soldier: Soldier }) =>\r\n    <table className=\"character-tile-table\" style={{ width: \"100%\" }}>\r\n        <tbody>\r\n            <tr>\r\n                <td>\r\n                    {soldier.amount > 0 ? `${soldier.amount}x ${soldier.type}` : soldier.type}\r\n                </td>\r\n                <td style={{ textAlign: \"end\" }}>{`(${soldier.amount > 0 ? soldier.cost * soldier.amount : soldier.cost} \\xA5)`}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>;\r\n","import { store } from \"..\";\r\nimport { Character } from \"../types/Characters\";\r\nimport { CharacterStatusBarTable } from \"./CharacterStatusBarTable\";\r\nimport { CharacterTileGearAndPowers } from \"./CharacterTileGearAndPowers\";\r\nimport { CharacterTileHeader } from \"./CharacterTileHeader\";\r\n\r\nexport const CharacterComponent = ({ isCaptain }: { isCaptain: boolean }) => {\r\n    const state = store.getState();\r\n    const character = (isCaptain ? state.Captain : state.FirstMate) as Character;\r\n    const id = isCaptain ? \"captain\" : \"firstmate\";\r\n    return <div key={`${id}_tile`} className=\"character-tile\">\r\n        <CharacterTileHeader character={character} />\r\n        <CharacterStatusBarTable character={character} gearSlotsUsed={character.gear?.reduce((acc, gearItem) => acc + gearItem.gearSlots, 0) || 0} isTileTable={true} />\r\n        <CharacterTileGearAndPowers character={character} />\r\n    </div>;\r\n};\r\n","import { Soldier } from \"../types/Characters\";\r\nimport { SoldierStatusBarTable } from \"./CharacterStatusBarTable\";\r\nimport { SoldierTileGearAndPowers } from \"./CharacterTileGearAndPowers\";\r\nimport { SoldierTileHeader } from \"./CharacterTileHeader\";\r\n\r\nexport const SoldierComponent = ({ soldier }: { soldier: Soldier }) =>\r\n    <div key={`${soldier.type}_tile`} className=\"character-tile\">\r\n        <SoldierTileHeader soldier={soldier} />\r\n        <SoldierStatusBarTable soldier={soldier} gearSlotsUsed={0} isTileTable={true} />\r\n        <SoldierTileGearAndPowers soldier={soldier} />\r\n    </div>;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { store } from \"../..\";\r\nimport { SET_CREWNAME } from \"../../redux/actions\";\r\nimport { NameComponent } from \"../NameComponent\";\r\n\r\nexport const CrewNameComponent = () => {\r\n    const state = store.getState();\r\n    const dispatch = useDispatch();\r\n    const setCrewName = (name: string) => {\r\n        dispatch({ type: SET_CREWNAME, payload: name });\r\n    };\r\n\r\n    return <NameComponent inputCallback={setCrewName} currentStateValue={state.Title} tooltip=\"Your ship needs a name\" />;\r\n};\r\n","import { CSSProperties } from \"react\";\r\nimport { CrewIcon } from \"../../images\";\r\nimport { numberOfCrewMembers } from \"../../Utils\";\r\n\r\nexport const CrewSizeComponent = ({ externalStyles, virtualCrewSize }: { externalStyles?: CSSProperties; virtualCrewSize?: number }) => {\r\n\r\n    const openHireMenu = () => {\r\n        console.error(\"HireMenu - Implementation missing\");\r\n    };\r\n\r\n    return <div style={externalStyles} className=\"statusbar-tiles\" title={\"Current size of your crew\"}>\r\n        <img\r\n            src={CrewIcon}\r\n            className={\"toolbar-compact-icon\"}\r\n            id={\"CrewIcon\"}\r\n            alt={\"CrewIcon\"}>\r\n        </img>\r\n        <div className={\"toolbar-compact-text\"}>{virtualCrewSize || numberOfCrewMembers()} / 10</div>\r\n    </div>;\r\n};\r\n","import { useHistory } from \"react-router-dom\";\r\nimport { SaveIcon } from \"../../images\";\r\n\r\nexport const FileComponent = () => {\r\n    const history = useHistory();\r\n    return <div className=\"statusbar-tiles\" onClick={() => history.push(\"/FileOperations\")} title=\"Click to open dialog to save/load a crew\">\r\n        <img\r\n            src={SaveIcon}\r\n            style={{ paddingLeft: \"0.2rem\" }}\r\n            className=\"toolbar-icon\"\r\n            id={\"SaveIcon\"}\r\n            alt={\"SaveIcon\"}>\r\n        </img>\r\n    </div>;\r\n};\r\n","import { useState } from \"react\";\r\nimport { PdfIcon } from \"../../images\";\r\n\r\nexport const PdfComponent = () => {\r\n    const [openDialog, setOpenDialog] = useState<boolean>(false);\r\n    const openHistory = () => {\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    return <div className=\"statusbar-tiles\" onClick={openHistory} title=\"Click to open dialog to save/load a crew\">\r\n        <img\r\n            src={PdfIcon}\r\n            style={{ paddingLeft: \"0.2rem\" }}\r\n            className=\"toolbar-icon\"\r\n            id={\"SaveIcon\"}\r\n            alt={\"SaveIcon\"}>\r\n        </img>\r\n    </div>;\r\n};\r\n","import { CSSProperties, useContext } from \"react\";\r\nimport { ReactReduxContext } from \"react-redux\";\r\nimport { TreasuryIcon } from \"../../images\";\r\nimport { CrewState } from \"../../types/State\";\r\n\r\nexport const TreasuryComponent = ({ externalStyles, virtualCredits }: { externalStyles?: CSSProperties; virtualCredits?: number }) => {\r\n    const { store } = useContext(ReactReduxContext);\r\n    const state = store.getState() as CrewState;\r\n\r\n    return <div style={externalStyles} className=\"statusbar-tiles\" title={\"Current amount of credits in your treasury\"}>\r\n        <img\r\n            src={TreasuryIcon}\r\n            className={\"toolbar-compact-icon\"}\r\n            id={\"TreasuryIcon\"}\r\n            alt={\"TreasuryIcon\"}>\r\n        </img>\r\n        <div className={\"toolbar-compact-text\"}>\r\n            {`${virtualCredits || state.Credits} \\xA5`}\r\n        </div>\r\n    </div>;\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { CrewState } from \"../../types/State\";\r\nimport { CrewNameComponent } from \"./CrewNameComponent\";\r\nimport { CrewSizeComponent } from \"./CrewSizeComponent\";\r\nimport { FileComponent } from \"./FileComponent\";\r\nimport { PdfComponent } from \"./PdfComponent\";\r\nimport { TreasuryComponent } from \"./TreasuryComponent\";\r\n\r\nexport const Statusbar = () =>\r\n    <div key=\"statusbar\" id=\"statusbar\" className=\"statusbar\">\r\n        <CrewNameComponent />\r\n        <FileComponent />\r\n        <PdfComponent />\r\n        <TreasuryComponent />\r\n        <CrewSizeComponent />\r\n    </div>;\r\n\r\nconst mapStateToProps = (state: CrewState) => state;\r\n\r\nexport const StatusbarComponent = connect(mapStateToProps)(Statusbar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CharacterComponent } from \"../components/CharacterComponent\";\r\nimport { Carousel } from \"../components/characterDialog/Carousel\";\r\nimport { SoldierComponent } from \"../components/SoldierComponent\";\r\nimport { StatusbarComponent } from \"../components/statusbar/StatusBarComponent\";\r\nimport { Character, Soldier } from \"../types/Characters\";\r\nimport { CarouselSize, CrewState } from \"../types/State\";\r\nimport { numberOfSoldiers } from \"../Utils\";\r\n\r\nexport const CrewOverview = ({ shipName, captain, firstMate, soldiers }: { shipName: string; captain: Character | undefined; firstMate: Character | undefined; soldiers: Soldier[] | undefined }) =>\r\n    <React.Fragment>\r\n        {captain && firstMate && soldiers && numberOfSoldiers() === 8 ?\r\n            <React.Fragment>\r\n                <StatusbarComponent key=\"statusbarComponent\" />\r\n                <div key=\"crewRoster\" id=\"crewRoster\" style={{ paddingTop: \"0.5rem\" }}>\r\n                    <Carousel\r\n                        splitSize={4}\r\n                        size={CarouselSize.large}\r\n                        inputDivs={[\r\n                            <CharacterComponent key=\"captainComponent\" isCaptain={true} />,\r\n                            <CharacterComponent key=\"firstMateComponent\" isCaptain={false} />,\r\n                            ...soldiers.map((soldier) => <SoldierComponent key={`crew_member_${soldier.type}`} soldier={soldier} />),\r\n                        ]}\r\n                    />\r\n                    {/* {captain ? <CharacterComponent key=\"captainComponent\" isCaptain={true} /> : <AddCharacterComponent isCaptain={true} />}\r\n                                {firstMate ? <CharacterComponent key=\"firstMateComponent\" isCaptain={false} /> : <AddCharacterComponent isCaptain={false} />}\r\n                                {soldiers && numberOfSoldiers() > 0 ? soldiers.map((soldier) => <SoldierComponent key={`crew_member_${soldier.type}`} soldier={soldier} />) : undefined}\r\n                                {numberOfSoldiers() < 8 ? <AddCrewMemberComponent /> : undefined} */}\r\n                </div>\r\n            </React.Fragment> : null\r\n        }\r\n    </React.Fragment>;\r\n\r\nconst mapStateToProps = (state: CrewState) => ({\r\n    shipName: state.Title,\r\n    captain: state.Captain,\r\n    firstMate: state.FirstMate,\r\n    soldiers: state.Soldiers,\r\n});\r\n\r\nexport const CrewPage = connect(mapStateToProps)(CrewOverview);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { ReactReduxContext, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NameComponent } from \"../components/NameComponent\";\r\nimport { ImportCrewIcon, SaveIcon } from \"../images\";\r\nimport { SET_CREW } from \"../redux/actions\";\r\nimport { CrewState } from \"../types/State\";\r\n\r\nexport const FileOperationsPage = () => {\r\n    const { store } = useContext(ReactReduxContext);\r\n    const state = store.getState() as CrewState;\r\n    const [fileName, setFileName] = useState<string>();\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        document.getElementById(\"NameInput\")?.focus();\r\n    });\r\n    const saveToFileNew = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        const anchor = document.createElement(\"a\");\r\n        document.body.appendChild(anchor);\r\n        const json = JSON.stringify(state);\r\n        const blob = new Blob([json], { type: \"octet/stream\" });\r\n        const url = window.URL.createObjectURL(blob);\r\n        anchor.href = url;\r\n        anchor.download = `${fileName}.sg`;\r\n        anchor.id = \"ClickableDownloadAnchor\";\r\n        anchor.click();\r\n        window.URL.revokeObjectURL(url);\r\n        document.body.removeChild(document.getElementById(\"ClickableDownloadAnchor\") as Node);\r\n        history.push(\"/CrewOverview\");\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    };\r\n    return <React.Fragment>\r\n        <div className=\"vertical-splitter\">\r\n            <div className=\"chapter-header\">Tap to load another warband from file</div>\r\n            <label htmlFor=\"file-uploader\" className=\"file-uploader\">\r\n                <input\r\n                    id=\"file-uploader\"\r\n                    type=\"file\"\r\n                    accept=\".sg\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={() => {\r\n                        const reader = new FileReader();\r\n                        reader.onload = (ev: ProgressEvent<FileReader>) => {\r\n                            dispatch({ type: SET_CREW, payload: JSON.parse(ev.target?.result as string) });\r\n                            history.push(\"/CrewOverview\");\r\n                        };\r\n                        reader.readAsText((document.querySelector(\"#file-uploader\") as HTMLInputElement)?.files?.item(0) as File);\r\n                    }}\r\n                />\r\n\r\n                <img alt=\"ImportWarband\" className=\"file-uploader-icon\" src={ImportCrewIcon} />\r\n            </label>\r\n        </div>\r\n        <div className=\"vertical-splitter\">\r\n            <div style={{ marginTop: \"10rem\", borderTop: \"0.15rem solid\" }} className=\"chapter-header\">Tap to save your warband to file</div>\r\n            <div className=\"modal-header\">Change the file name if you wish</div>\r\n            <NameComponent inputCallback={setFileName} currentStateValue={`${fileName || `${state.Title} ${state.Captain?.name}  (lvl ${state.Captain?.level || 15})` || \"Unnamed_Crew (lvl 15)\"}`} tooltip={\"The file name\"} />\r\n            <div style={{ display: \"grid\" }}>\r\n                <img className=\"file-uploader-icon\" src={SaveIcon} onClick={saveToFileNew} />\r\n            </div>\r\n        </div>\r\n        <button\r\n            onClick={(event) => {\r\n                history.push(\"/CrewOverview\");\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }}\r\n            className={\"dialog-btn back-btn\"}\r\n        >Back</button>\r\n    </React.Fragment>;\r\n};\r\n","import { CharacterCreation } from \"../components/CreateCharacter\";\r\nimport * as Characters from \"../data/Characters.json\";\r\nimport { CharacterMetadata } from \"../types/Metadata\";\r\n\r\nexport const FirstMateCreationPage = () => {\r\n    const baseFirstMate = Characters.FirstMate as CharacterMetadata;\r\n    return <CharacterCreation baseCharacter={{ ...baseFirstMate, name: \"\" }} />;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Firefly.b34485f8.sg\";","import { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as Crew from \"../data/Samples/Firefly.sg\";\r\nimport { CreateCrewIcon, ImportCrewIcon, UseSampleIcon } from \"../images\";\r\nimport { SET_CREW } from \"../redux/actions\";\r\nimport { CrewState, InitialCrewState } from \"../types/State\";\r\n\r\nexport const LandingPage = () => {\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    return <div className=\"landing-page \">\r\n        <div className=\"landing-page-title\">Stargrave Crew Configuration</div>\r\n        <label htmlFor=\"file-uploader\" className=\"landing-page-tile\">\r\n            <input\r\n                id=\"file-uploader\"\r\n                type=\"file\"\r\n                accept=\".sg\"\r\n                style={{ display: \"none\" }}\r\n                onChange={() => {\r\n                    const reader = new FileReader();\r\n                    reader.onload = (ev: ProgressEvent<FileReader>) => {\r\n                        dispatch({ type: SET_CREW, payload: JSON.parse(ev.target?.result as string) });\r\n                        history.push(\"/CrewOverview\");\r\n                    };\r\n                    reader.readAsText((document.querySelector(\"#file-uploader\") as HTMLInputElement)?.files?.item(0) as File);\r\n                }}\r\n            />\r\n\r\n            <img alt=\"ImportWarband\" className=\"landing-page-icon\" src={ImportCrewIcon} />\r\n            <div className=\"landing-page-header\">Load existing crew from file</div>\r\n        </label>\r\n        <div\r\n            className=\"landing-page-tile\"\r\n            onClick={() => {\r\n                dispatch({ type: SET_CREW, payload: InitialCrewState });\r\n                history.push(\"/ShipName\");\r\n            }}>\r\n\r\n            <img alt=\"CreateWarband\" className=\"landing-page-icon\" src={CreateCrewIcon} />\r\n            <div className=\"landing-page-header\">Create new crew</div>\r\n        </div>\r\n        <div\r\n            className=\"landing-page-tile\"\r\n            onClick={() => {\r\n                dispatch({ type: SET_CREW, payload: (Crew as any).default as CrewState });\r\n                history.push(\"/CrewOverview\");\r\n            }}>\r\n\r\n            <img alt=\"SampleWarband\" className=\"landing-page-icon\" src={UseSampleIcon} />\r\n            <div className=\"landing-page-header\">Use sample crew</div>\r\n        </div>\r\n    </div >;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NameComponent } from \"../components/NameComponent\";\r\nimport { SET_CREWNAME } from \"../redux/actions\";\r\n\r\nexport const ShipNamePage = () => {\r\n    const [name, setName] = useState<string>(\"\");\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    return <React.Fragment>\r\n        <div className=\"chapter-header\">Welcome to Stargarve - Science Fiction wargames in the ravaged galaxy</div>\r\n        {/* <div className=\"modal-header\">This nifty little tool is supposed to guide you through the process of creating your crew for a game or even a campaign of Stargrave.</div> */}\r\n        <div className=\"modal-header\">\r\n            In the following screens you will design yourself a captain that is leading your crew, configure a loyal first mate to assist your fearless leader and hire disposable bodies (crewmen) to help you to complete your objectives\r\n            </div>\r\n        <div className=\"modal-header\">But first things first. Your crew needs a ship to get to their missions. What is the name of your ship?</div>\r\n        <NameComponent inputCallback={setName} currentStateValue={name} tooltip={\"Your ship needs a name\"} />\r\n        <button\r\n            onClick={() => {\r\n                dispatch({ type: SET_CREWNAME, payload: name });\r\n                history.push(\"/CaptainCreation\");\r\n            }}\r\n            className={name ? \"dialog-btn confirm-btn\" : \"dialog-btn confirm-btn disabled\"}\r\n        >Confirm</button>\r\n    </React.Fragment>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as SoldierList from \"../data/Soldiers.json\";\r\nimport { AddIcon, getSoldierImage, MinusIcon } from \"../images\";\r\nimport { ADD_SOLDIERS } from \"../redux/actions\";\r\nimport { Soldier } from \"../types/Characters\";\r\nimport { SoldierGroups, SoldierMetadata } from \"../types/Metadata\";\r\nimport { CarouselSize, CrewState } from \"../types/State\";\r\nimport { Carousel } from \"./characterDialog/Carousel\";\r\nimport { SoldierComponent } from \"./SoldierComponent\";\r\nimport { CrewSizeComponent } from \"./statusbar/CrewSizeComponent\";\r\nimport { TreasuryComponent } from \"./statusbar/TreasuryComponent\";\r\n\r\nconst listOfSoldiers = SoldierList.Soldiers as SoldierMetadata[];\r\n\r\nconst SoldierSelection = ({ credits }: { credits: number }) => {\r\n    const [soldiers, setSoldiers] = useState<Soldier[]>([]);\r\n    const [previewSoldier, setPreviewSoldier] = useState<SoldierMetadata>();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const getCurrentSoldierAmount = (soldierType: string) => soldiers.find((soldier) => soldier.type === soldierType)?.amount || 0;\r\n    const soldierCount = () => soldiers.reduce((acc, soldier) => soldier.amount + acc, 0);\r\n    const specialistCount = () => soldiers.filter((soldier) => soldier.group === SoldierGroups.Specialist).reduce((acc, specialist) => specialist.amount + acc, 0);\r\n    const hiringCost = () => soldiers.reduce((acc, soldier) => acc + (soldier.amount * soldier.cost), 0);\r\n    const canSubmit = () => soldierCount() <= 8 && specialistCount() <= 4 && hiringCost() <= credits;\r\n\r\n    const renderSoldierTile = (soldier: SoldierMetadata) => <div\r\n        key={`add-character-${soldier.type}`}\r\n        className={getCurrentSoldierAmount(soldier.type) > 0 ? \"add-character-background selected\" : \"add-character-background\"}\r\n        onClick={() => setPreviewSoldier(soldier)}>\r\n        <img style={{ paddingTop: \"0.5rem\" }} className=\"add-character-background-icons\" src={getSoldierImage(soldier.type)} alt={`add-character-${soldier.type}-icon`} />\r\n        <div className=\"soldier-cost\">{`${soldier.cost} \\xA5`}</div>\r\n        <div style={{ paddingTop: \"0.5rem\" }} className=\"large-text\">{`${soldier.type}`}</div>\r\n        {soldier.group === SoldierGroups.Specialist ? <div className=\"medium-text\">Specialist</div> : null}\r\n        {getCurrentSoldierAmount(soldier.type) > 0 ? <div className=\"soldier-type\">{getCurrentSoldierAmount(soldier.type)}x</div> : null}\r\n    </div>;\r\n\r\n    return <React.Fragment>\r\n        <div className=\"statusbar-tiles\" style={{ width: \"calc(100% - 1.1rem)\", height: \"3rem\" }}>\r\n            <div className=\"toolbar-two-column-header-text\">Hire your crew</div>\r\n            <div className=\"small-text\">{\"You need to hire 8 Soldiers. \\n Only 4 may be Specialists\"}</div>\r\n        </div>\r\n        <CrewSizeComponent externalStyles={{ width: \"calc(50% - 1.1rem)\" }} virtualCrewSize={soldierCount() + 2} />\r\n        <TreasuryComponent externalStyles={{ width: \"calc(50% - 1.1rem)\" }} virtualCredits={credits - hiringCost()} />\r\n        {previewSoldier ?\r\n            <React.Fragment>\r\n                <div className=\"modal-header\">Soldier details</div>\r\n                <SoldierComponent soldier={{ ...previewSoldier, amount: 0, gearSlots: 1 }} />\r\n                <div className=\"modal-header\">Use the Plus/Minus buttons below to hire some of these soldiers if they suit your needs</div>\r\n                <div className=\"soldier-selection-amount\">\r\n                    <div\r\n                        className=\"btn\"\r\n                        onClick={() => {\r\n                            const soldierIdx = soldiers.findIndex((sol) => sol.type === previewSoldier.type);\r\n                            if (soldierIdx !== -1) {\r\n                                setSoldiers([...soldiers.slice(0, soldierIdx), { ...soldiers[soldierIdx], amount: soldiers[soldierIdx].amount + 1 }, ...soldiers.slice(soldierIdx + 1)]);\r\n                            } else {\r\n                                setSoldiers([...soldiers, { ...previewSoldier, amount: 1, gearSlots: 1 }]);\r\n                            }\r\n                        }}><img style={{ width: \"3rem\" }} src={AddIcon} /></div>\r\n                    <div className=\"very-large-text\">{getCurrentSoldierAmount(previewSoldier.type)}</div>\r\n                    <div\r\n                        className=\"btn\"\r\n                        onClick={() => {\r\n                            const soldierIdx = soldiers.findIndex((sol) => sol.type === previewSoldier.type);\r\n                            if (soldierIdx !== -1) {\r\n                                if (soldiers[soldierIdx].amount === 1) {\r\n                                    setSoldiers(soldiers.filter((sol) => sol.type !== previewSoldier.type));\r\n                                } else {\r\n                                    setSoldiers([...soldiers.slice(0, soldierIdx), { ...soldiers[soldierIdx], amount: soldiers[soldierIdx].amount - 1 }, ...soldiers.slice(soldierIdx + 1)]);\r\n                                }\r\n                            }\r\n                        }}><img style={{ width: \"3rem\" }} src={MinusIcon} /></div>\r\n                </div>\r\n            </React.Fragment> :\r\n            <Carousel splitSize={10} inputDivs={listOfSoldiers.map(renderSoldierTile)} size={CarouselSize.medium} />}\r\n        {specialistCount() > 4 ?\r\n            <div>You are not allowed to have more than 4 'Specialist' Soldiers in your crew</div> :\r\n            null}\r\n        {soldierCount() > 8 ? <div>You are not allowed to have more than 8 Soldiers in total in your crew</div> : null}\r\n        {hiringCost() > credits ? <div>{\"You don't have enough credits ( \\xA5 ) to hire all of these crew men\"} </div> : null}\r\n        {previewSoldier ? <button\r\n            onClick={(event) => {\r\n                setPreviewSoldier(undefined);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }}\r\n            className={\"dialog-btn back-btn foreground\"}\r\n        >Back</button> :\r\n            <button\r\n                onClick={(e) => {\r\n                    if (canSubmit()) {\r\n                        dispatch({ type: ADD_SOLDIERS, payload: soldiers });\r\n                        history.push(\"/CrewOverview\");\r\n                    }\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                }}\r\n                className={canSubmit() ? \"dialog-btn confirm-btn\" : \"dialog-btn confirm-btn disabled\"}>\r\n                Confirm Staffing</button>}\r\n    </React.Fragment>;\r\n};\r\n\r\nconst mapStateToProps = (state: CrewState) => ({ credits: state.Credits });\r\n\r\nexport const SoldierSelectionComponent = connect(mapStateToProps)(SoldierSelection);\r\n","import { SoldierSelectionComponent } from \"../components/SoldierSelection\";\r\n\r\nexport const SoldierSelectionPage = () =>\r\n    <SoldierSelectionComponent />;\r\n","import React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { connect, Provider } from \"react-redux\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { compose, createStore } from \"redux\";\nimport \"./App.css\";\nimport { CaptainCreationPage } from \"./pages/CaptainCreationPage\";\nimport { CrewPage } from \"./pages/CrewPage\";\nimport { FileOperationsPage } from \"./pages/FileOperationsPage\";\nimport { FirstMateCreationPage } from \"./pages/FirstMateCreationPage\";\nimport { LandingPage } from \"./pages/LandingPage\";\nimport { ShipNamePage } from \"./pages/SetShipNamePage\";\nimport { SoldierSelectionPage } from \"./pages/SoldierSelectionPage\";\nimport { stateReducer } from \"./redux/reducer\";\n\nconst App = () =>\n  <BrowserRouter>\n    <div className=\"app-body\">\n      <Switch>\n        <Route path=\"/ShipName\" component={ShipNamePage} />\n        <Route path=\"/CaptainCreation\" component={CaptainCreationPage} />\n        <Route path=\"/FirstMateCreation\" component={FirstMateCreationPage} />\n        <Route path=\"/SoldierSelection\" component={SoldierSelectionPage} />\n        <Route path=\"/CrewOverview\" component={CrewPage} />\n        <Route path=\"/FileOperations\" component={FileOperationsPage} />\n        <Route path=\"/\" component={LandingPage} />\n      </Switch>\n    </div>\n  </BrowserRouter>;\n\nexport const AppContainer = connect()(App);\nexport const store = createStore(stateReducer, compose(typeof window === \"object\" &&\n  typeof (window as any).devToolsExtension !== \"undefined\" ?\n  (window as any).devToolsExtension() :\n  (f: any) => f\n));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { Character } from \"../types/Characters\";\r\nimport { CrewState, InitialCrewState } from \"../types/State\";\r\nimport * as ReduxActions from \"./actions\";\r\n\r\n// tslint:disable-next-line: cyclomatic-complexity\r\nexport function stateReducer(state: CrewState = InitialCrewState, action: ReduxActions.Actions): CrewState {\r\n    switch (action.type) {\r\n        case ReduxActions.SET_CREW:\r\n            return action.payload;\r\n        case ReduxActions.SET_CREWNAME:\r\n            return { ...state, Title: action.payload };\r\n        case ReduxActions.SET_CAPTAINS_NAME:\r\n            return { ...state, Captain: { ...state.Captain as Character, name: action.payload } };\r\n        case ReduxActions.SET_CAPTAIN:\r\n            return { ...state, Captain: action.payload };\r\n        case ReduxActions.SET_FIRST_MATE:\r\n            return { ...state, FirstMate: action.payload };\r\n        case ReduxActions.ADD_SOLDIERS:\r\n            const soldiers = state.Soldiers ? [...state.Soldiers, ...action.payload] : action.payload;\r\n            return { ...state, Soldiers: soldiers, Credits: state.Credits - action.payload.reduce((acc, soldier) => acc + (soldier.amount * soldier.cost), 0) };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"],"sourceRoot":""}