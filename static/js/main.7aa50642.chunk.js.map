{"version":3,"sources":["types/Background.ts","images/Biomorph.png","types/Characters.ts","images/CreateCrew.png","images/Cyborg.png","images/icons/Add.png","images/icons/Crew.png","images/icons/Captain.png","images/icons/Delete.png","images/icons/Treasury.png","images/ImportCrew.png","images/Mystic.png","images/Psionicist.png","images/RoboticsExpert.png","images/Rogue.png","images/Tekker.png","images/Unknown.png","images/UseSample.png","images/Veteran.png","images/index.ts","redux/actions.ts","Utils.ts","types/Metadata.ts","components/InputControl.tsx","components/CharacterTableComponent.tsx","components/characterDialog/SelectBackground.tsx","components/characterDialog/SelectPowers.tsx","components/characterDialog/SelectPowerUpgrades.tsx","components/characterDialog/SelectStatsImprovements.tsx","components/characterDialog/CharacterCreationWrapper.tsx","components/AddCharacterComponent.tsx","components/AddCrewDialog.tsx","components/AddCrewMemberComponent.tsx","components/CharacterComponent.tsx","components/CrewMemberComponent.tsx","components/statusbar/CrewNameComponent.tsx","components/statusbar/CrewSizeComponent.tsx","components/statusbar/TreasuryComponent.tsx","components/statusbar/StatusBarComponent.tsx","pages/CrewPage.tsx","pages/LandingPage.tsx","types/State.ts","index.tsx","redux/reducer.ts"],"names":["BackgroundEnum","StatsEnum","CharactersEnum","CyborgIcon","CyborgPng","BiomorphIcon","BiomorphPng","MysticIcon","MysticPng","PsionicistIcon","PsionicistPng","RoboticsExpertIcon","RoboticsExpertPng","RogueIcon","RoguePng","TekkerIcon","TekkerPng","VeteranIcon","VeteranPng","getBackgroundImage","background","Biomorph","Cyborg","Mystic","Psionicist","RoboticsExpert","Rogue","Tekker","Veteran","UnknownPng","UseSampleIcon","UseSamplePng","CreateCrewIcon","CreateCrewPng","ImportCrewIcon","ImportCrewPng","TreasuryIcon","TreasuryPng","CrewIcon","CrewPng","AddIcon","AddPng","DeleteItemIcon","DeletePng","ADD_SOLDIERS","SET_CAPTAINS_NAME","SET_FIRST_MATE","SET_CAPTAIN","SET_CREW","SET_CREWNAME","SoldierGroups","allPowers","PowerList","allBackgrounds","BackgroundList","numberOfCrewMembers","state","store","getState","Soldiers","length","Captain","FirstMate","numberOfSoldiers","getStatStrings","stats","Object","keys","map","stat","getPower","name","find","power","getBackground","isCorePower","powerName","backgroundName","corePowers","isCaptain","type","InputComponent","currentState","tooltip","cssClass","callback","useState","setName","inputVisible","setInputVisible","inputRef","useRef","useLayoutEffect","current","focus","ref","className","id","onChange","event","currentTarget","value","onKeyDown","code","onBlur","style","placeSelf","padding","onClick","baseCaptain","Characters","baseFirstMate","CharacterTable","character","statModifications","setNameCallback","improvedStats","reduce","acc","smallWidth","width","level","backgroundInformation","Backgrounds","getBackgroundInfos","bg","SelectBackground","updateAndContinue","selectedBackground","setBackground","Fragment","backgroundEnumEntry","undefined","mandatory","optional","powers","src","description","SelectPowers","powerNames","updatePowers","selectedPowers","setSelectedPowers","activationValue","strain","category","effect","previewPower","setPreviewPower","isPowerSelected","pwr","infos","maxCorePowersSelected","powersRemaining","filter","maxNonCorePowersSelected","maxPowersSelected","Array","isArray","join","float","onMouseOver","idx","findIndex","slice","fontSize","includes","SelectPowerUpgrades","upgradePowers","x","concat","sort","a","b","localeCompare","SelectStatsImprovements","updateStatsCallback","selections","setSelections","useEffect","mand","merged","assign","fromEntries","entries","key","set","get","Map","isStatSelected","statName","statModificationsForBackground","maxStatsReached","chooseOptionals","statValue","CharacterCreationDialog","baseCharacter","setCharacter","updatedStats","setUpdatedStats","statsSelected","setStatsSelected","dispatch","useDispatch","finishCreation","payload","ReactDOM","createPortal","e","preventDefault","stopPropagation","val","document","getElementById","AddCharacterComponent","showDialog","setDialogShown","listOfSoldiers","SoldierList","AddCrewDialogComponent","connect","soldiersState","credits","Credits","position","getBoundingClientRect","cssProperties","top","left","height","soldiers","setSoldiers","soldierSelection","isSpecialist","list","soldier","group","Specialist","Standard","half","Math","ceil","gridArea","gearSlots","cost","updateName","gear","sold","fontWeight","AddCrewMemberComponent","CharacterComponent","String","cat","CrewMemberComponent","gearItem","CrewNameComponent","minWidth","console","error","Title","CrewSizeComponent","title","alt","TreasuryComponent","useContext","ReactReduxContext","treasury","text","GenericTreasuryComponent","StatusbarComponent","CrewPage","captain","firstMate","paddingTop","LandingPage","history","useHistory","textAlign","htmlFor","accept","display","reader","FileReader","onload","ev","JSON","parse","target","result","push","readAsText","querySelector","files","item","Crew","InitialCrewState","AppContainer","path","component","createStore","action","ReduxActions","StrictMode"],"mappings":"296BAEYA,E,uGAAAA,K,oBAAAA,E,gBAAAA,E,gBAAAA,E,wBAAAA,E,gCAAAA,E,cAAAA,E,gBAAAA,E,mBAAAA,M,KCFG,IC4BHC,EAsBAC,EDlDG,MAA0B,qCEA1B,MAA0B,uCCA1B,MAA0B,mCCA1B,MAA0B,gCCA1B,GCAA,IDAA,IAA0B,kCEA1B,MAA0B,mCCA1B,MAA0B,qCCA1B,MAA0B,uCCA1B,MAA0B,mCCA1B,MAA0B,uCCA1B,MAA0B,2CCA1B,MAA0B,kCCA1B,MAA0B,mCCA1B,MAA0B,oCCA1B,MAA0B,sCCA1B,MAA0B,oCCoB5BC,EAAaC,EACbC,EAAeC,EACfC,EAAaC,EACbC,EAAiBC,EACjBC,EAAqBC,EACrBC,EAAYC,EACZC,EAAaC,EACbC,EAAcC,EAEdC,EAAqB,SAACC,GAC/B,OAAQA,GACJ,KAAKpB,EAAeqB,SAAU,OAAOhB,EACrC,KAAKL,EAAesB,OAAQ,OAAOnB,EACnC,KAAKH,EAAeuB,OAAQ,OAAOhB,EACnC,KAAKP,EAAewB,WAAY,OAAOf,EACvC,KAAKT,EAAeyB,eAAgB,OAAOd,EAC3C,KAAKX,EAAe0B,MAAO,OAAOb,EAClC,KAAKb,EAAe2B,OAAQ,OAAOZ,EACnC,KAAKf,EAAe4B,QAAS,OAAOX,EACpC,QACI,OAAOY,IAKNC,EAAgBC,EAChBC,EAAiBC,EACjBC,EAAiBC,EAEjBC,EAAeC,EACfC,EAAWC,EACXC,EAAUC,EAEVC,EAAiBC,E,QClDjBC,EAAe,eACfC,EAAoB,oBACpBC,EAAiB,iBACjBC,EAAc,cACdC,GAAW,WACXC,GAAe,e,4BlBoBhBhD,K,YAAAA,E,cAAAA,E,cAAAA,E,gBAAAA,E,YAAAA,E,iBAAAA,M,cAsBAC,K,kBAAAA,E,uBAAAA,M,KmB5CZ,ICJYgD,GDINC,GAAqBC,KACrBC,GAAuCC,KAEhCC,GAAsB,WAAO,IAAD,EAC/BC,EAAQC,GAAMC,WACpB,QAAQ,UAAAF,EAAMG,gBAAN,eAAgBC,SAAU,IAAMJ,EAAMK,QAAU,EAAI,IAAML,EAAMM,UAAY,EAAI,IAG/EC,GAAmB,WAAO,IAAD,EAElC,OAAO,UADON,GAAMC,WACPC,gBAAN,eAAgBC,SAAU,GAGxBI,GAAiB,SAACC,GAAD,OAAmCC,OAAOC,KAAKF,GAAOG,KAAI,SAACC,GACrF,OAAQA,GACJ,IAAK,QACL,IAAK,QACL,IAAK,OACD,OAAO,eAAGA,EAAV,WAAqBJ,EAAMI,KAC/B,QACI,OAAO,eAAGA,EAAV,UAAoBJ,EAAMI,UAGhCC,GAAW,SAACC,GAAD,OAAkBpB,GAAUqB,MAAK,SAACC,GAAD,OAAWA,EAAMF,OAASA,MAItEG,GAAgB,SAACH,GAAD,OAAkBlB,GAAemB,MAAK,SAACpD,GAAD,OAAgBA,EAAWmD,OAASA,MAEnFI,GAAc,SAACC,EAAmBC,GAApB,QAAiDH,GAAcG,GAAgBC,WAAWN,MAAK,SAACC,GAAD,OAAWA,IAAUG,MAElIG,GAAY,SAACC,GAAD,OAAkBA,IAAS9E,EAAe2D,S,QEnCtDoB,GAAiB,SAAC,GAA8I,IAA5IC,EAA2I,EAA3IA,aAAcC,EAA6H,EAA7HA,QAASC,EAAoH,EAApHA,SAAUC,EAA0G,EAA1GA,SAA0G,EAChJC,mBAAiBJ,GAD+H,mBACjKX,EADiK,KAC3JgB,EAD2J,OAEhID,oBAAkB,GAF8G,mBAEjKE,EAFiK,KAEnJC,EAFmJ,KAGlKC,EAAWC,iBAAyB,MAC1CC,2BAAgB,WAAO,IAAD,EACV,OAARF,QAAQ,IAARA,GAAA,UAAAA,EAAUG,eAAV,SAAmBC,UACpB,CAACN,IAcJ,OAAOA,EACH,wBACIO,IAAKL,EACLM,UAAWZ,EACXa,GAAG,YACHC,SAAU,SAACC,GAAD,OAA8CZ,EAAQY,EAAMC,cAAcC,QACpFC,UAlBW,SAACH,GACG,UAAfA,EAAMI,OACNlB,EAASd,GACTkB,GAAgB,IAED,WAAfU,EAAMI,OACNhB,EAAQL,GACRG,EAASH,GACTO,GAAgB,KAWhBe,OAAQ,WACJnB,EAASd,GACTkB,GAAgB,IAEpBY,MAAO9B,IAEX,sBACIkC,MAAO,CAAEC,UAAW,QAASC,QAAS,kBACtCX,UAAWd,EAAe,iBAAmB,6BAC7C0B,QAAS,kBAAMnB,GAAgB,IAHnC,SAIKP,GAAgBC,KChCvB0B,GAAcC,IACdC,GAAgBD,IAETE,GAAiB,SAAC,GAGzB,IAFAC,EAED,EAFCA,UAAWC,EAEZ,EAFYA,kBAAmBC,EAE/B,EAF+BA,gBAG1BC,EAAgB,kBAAMlD,OAAOC,KAAK8C,EAAUhD,OAAOoD,QACrD,SAACC,EAAKjD,GAAN,mBAAC,eAAoBiD,GAArB,kBAA2BjD,EAAO4C,EAAUhD,MAAMI,IAAsB6C,EAAkB7C,IAAsB,OAChH,CAAE,KAAQ,EAAG,MAAS,EAAG,MAAS,EAAG,OAAU,EAAG,KAAQ,EAAG,OAAU,KAErEkD,EAAaN,EAAU7F,WAAa,KAAO,MACjD,OAAO,yBAAO4E,UAAU,kBAAjB,UACH,sCACI,sBAAKS,MAAO,CAAEe,MAAO,SACrB,sBAAKf,MAAO,CAAEe,MAAOD,KACrB,sBAAKd,MAAO,CAAEe,MAAOD,KACrB,sBAAKd,MAAO,CAAEe,MAAOD,KACrB,sBAAKd,MAAO,CAAEe,MAAOD,KACrB,sBAAKd,MAAO,CAAEe,MAAOD,KACrB,sBAAKd,MAAO,CAAEe,MAAOD,KACrB,sBAAKd,MAAO,CAAEe,MAAOD,KACpBN,EAAU7F,WAAa,sBAAKqF,MAAO,CAAEe,MAAOD,KAAmB,QAEpE,iCACI,gCACI,sCAAS,+BACRrD,OAAOC,KAAKlE,GAAWmE,KAAI,SAACC,GAAD,OAAU,8BAA6CA,GAA7C,kCAAoCA,OAC1E,uCAAS,gCACR4C,EAAU7F,WAAa,4CAAS,+BAAiD,UAG1F,iCACI,gCACI,8BACI,eAAC,GAAD,CAAgBiE,SAAU8B,EAAiBjC,aAAc+B,EAAU1C,KAAMY,QAAO,eAAUJ,GAAUkC,EAAUjC,MAAQ,UAAY,aAAlD,wBAAsFI,SAAS,wBADnL,0BAA4B6B,EAAU1C,OAGrCP,GAAeoD,KAAiBhD,KAAI,SAACC,GAAD,OACjC,qBACI2B,UAAWoB,IAAgBlD,OAAOC,KAAKE,GAAM,OAAsBU,GAAUkC,EAAUjC,MAAQ6B,GAAcE,IAAe9C,MAAMC,OAAOC,KAAKE,GAAM,IAAmB,gBAAkB,GAD7L,SAGKA,EAAKH,OAAOC,KAAKE,GAAM,KAH5B,qBAEuB4C,EAAU1C,KAFjC,iBAE8CL,OAAOC,KAAKE,GAAM,QAIpE,8BAAK4C,EAAUQ,QACdR,EAAU7F,WAAa,8BAAK6F,EAAU7F,WAAWmD,OAAa,cC7CzEmD,GAAwBC,KACxBC,GAAqB,SAACxG,GAAD,OAAgCsG,GAAsBlD,MAAK,SAACqD,GAAD,OAAQA,EAAGtD,OAASnD,MAE7F0G,GAAmB,SAAC,GAAsM,IAApMb,EAAmM,EAAnMA,UAA+Bc,GAAoK,EAAxLC,mBAAwL,EAApKD,mBAAoK,EAC9LzC,qBAD8L,mBAC3NlE,EAD2N,KAC/M6G,EAD+M,KAkBlO,OAAO,gBAAC,IAAMC,SAAP,WACH,sBAAKlC,UAAU,eAAf,gDAA+DjB,GAAUkC,EAAUjC,MAAQ,UAAY,gBACvG,sBAAKgB,UAAU,qCAAf,SACK9B,OAAOC,KAAKnE,GAAgBoE,KAAI,SAAC+D,GAAD,OAnBXN,EAmBiEM,EAnB1C,uBAEjDnC,UAAW6B,KAAE,OAAKzG,QAAL,IAAKA,OAAL,EAAKA,EAAYmD,MAAO,+CAAiD,2BACtFqC,QAAS,kBAAMqB,EACXJ,KAAE,OAAKzG,QAAL,IAAKA,OAAL,EAAKA,EAAYmD,WACf6D,EACA,CACI7D,KAAMsD,EACNX,kBAAmB,CAAEmB,UAAWT,GAAmBC,GAAIX,kBAAkBmB,UAAWC,SAAU,IAC9FC,OAAQ,MAT6B,UAYjD,sBAAKvC,UAAU,iCAAiCwC,IAAKrH,EAAmB0G,KACxE,sBAAK7B,UAAU,gCAAf,mBAAmD6B,OAbF,wBAC3BA,IADG,IAACA,OAqBzBzG,EAAa,sBAAK4E,UAAU,eAAf,oCAA6D,KAC1E5E,EAAa,sBAAK4E,UAAU,yBAAf,SAAyC4B,GAAmBxG,EAAWmD,MAAMkE,cAAqB,KAChH,yBACI7B,QAAS,kBAAMxF,EAAa2G,EAAkB3G,QAAcgH,GAC5DpC,UAAW5E,GAAc6F,EAAU1C,KAAO,YAAc,qBAF5D,8C,QC7BFmD,GAAwBC,KAGjBe,GAAe,SAAC,GAGvB,IL2B2B7D,EARH8D,EKrBxBvH,EAED,EAFCA,WAAY2D,EAEb,EAFaA,UAAW6D,EAExB,EAFwBA,aAExB,EAC2CtD,mBAAkB,IAD7D,mBACMuD,EADN,KACsBC,EADtB,OAEuCxD,mBAAgB,CAAEf,KAAM,GAAIwE,gBAAiB,EAAGC,OAAQ,EAAGC,SAAU,QAASC,OAAQ,oCAF7H,mBAEMC,EAFN,KAEoBC,EAFpB,KAGKC,EAAkB,SAAC5E,GAAD,QAAoBoE,EAAerE,MAAK,SAAC8E,GAAD,OAASA,EAAI/E,OAASE,EAAMF,SACtFgF,EATiB,SAACnI,GAAD,OAAgCsG,GAAsBlD,MAAK,SAACqD,GAAD,OAAQA,EAAGtD,OAASnD,KASxFwG,CAAmBxG,EAAWmD,MAEtCiF,EAAwB,WAC1B,IAAIC,EAAkB1E,EAAY,EAAI,EAItC,OAH2F,IAAvF8D,EAAea,QAAO,SAACjF,GAAD,OAAYE,GAAYF,EAAMF,KAAMnD,EAAWmD,SAAOX,SAC5E6F,EAAkB1E,EAAY,EAAI,GAE/B8D,EAAea,QAAO,SAACjF,GAAD,OAAWE,GAAYF,EAAMF,KAAMnD,EAAWmD,SAAOX,QAAU6F,GAG1FE,EAA2B,kBAAMd,EAAea,QAAO,SAACjF,GAAD,OAAYE,GAAYF,EAAMF,KAAMnD,EAAWmD,SAAOX,SAAW4F,IAA0B,EAAI,IACtJI,EAAoB,kBAAMf,EAAejF,SAAWmB,EAAY,EAAI,IAE1E,OAAO,gBAAC,IAAMmD,SAAP,WACH,uBAAKlC,UAAU,wBAAf,UACI,sBAAKA,UAAU,qBAAf,SAAqCmD,EAAa5E,OAClD,uBAAKyB,UAAU,sBAAf,gCAAqDmD,EAAaJ,iBAAlE,wBAAmGI,EAAaH,QAAhH,MAA6Ha,MAAMC,QAAQX,EAAaF,UAA3B,sBAAsDE,EAAaF,SAASc,KAAK,OAAjF,oBAAwGZ,EAAaF,aAClP,sBAAKjD,UAAWmD,EAAaD,OAAOtF,QAAU,IAAM,2BAA6BuF,EAAaD,OAAOtF,QAAU,IAAM,4BAA8B,2BAAnJ,SAAgLuF,EAAaD,YAEjM,uBAAKlD,UAAU,qBAAf,UACI,sBAAKA,UAAU,oBAAf,0BAA8CjB,EAAY,QAAU,QAApE,kBACA,sBAAKiB,UAAU,cAAf,SACK5E,GLPauH,EKOcY,EAAMzE,WLPc6D,EAAWvE,IAAIE,KKOjBF,KAAI,SAACK,GAAD,OAAW,uBACzDgC,MAAO,CAAEuD,MAAO,QAChBC,YAAa,kBAAMb,EAAgB3E,IACnCmC,QAAS,WAEL,GADAwC,EAAgBrE,EAAYN,EAAH,2BAAgBA,GAAhB,IAAuBsE,gBAAiBtE,EAAMsE,gBAAkB,KACrFM,EAAgB5E,GAAQ,CACxB,IAAMyF,EAAMrB,EAAesB,WAAU,SAACb,GAAD,OAASA,EAAI/E,OAASE,EAAMF,SACpD,IAAT2F,GACApB,EAAkB,GAAD,oBAAKD,EAAeuB,MAAM,EAAGF,IAA7B,aAAsCrB,EAAeuB,MAAMF,EAAM,EAAGrB,EAAejF,eAErG,CACH,GAAI4F,IACA,OAEJV,EAAkB,GAAD,oBAAKD,GAAL,aAAC,eAAyBpE,GAA1B,IAAiCsE,gBAAiBtE,EAAMsE,iBAAmBhE,EAAY,EAAI,UAGpHiB,UAAWqD,EAAgB5E,GAAS,sCAAwC+E,IAA0B,sCAAwC,6BAjBrF,UAmBzD,+BAAM/E,EAAMF,OACZ,uBAAKkC,MAAO,CAAE4D,SAAU,WAAxB,UAAsC5F,EAAMsE,iBAAmBhE,EAAY,EAAI,GAA/E,MAAsFN,EAAMuE,OAA5F,MAAuGa,MAAMC,QAAQrF,EAAMwE,UAApB,UAAmCxE,EAAMwE,SAASc,KAAK,OAAUtF,EAAMwE,cApBrH,4BAkB/BxE,EAAMF,UAIhC,UAGZ,uBAAKyB,UAAU,yBAAf,UACI,sBAAKA,UAAU,oBAAf,0CACA,sBAAKA,UAAU,cAAf,SACK5E,GL3BgByD,EK2BczD,EAAWmD,KL3BEpB,GAAUuG,QAAO,SAACjF,GAAD,OAAYC,GAAcG,GAAgBC,WAAWwF,SAAS7F,EAAMF,UK2BjFH,KAAI,SAACK,GAAD,OAAW,uBAC3DmC,QAAS,WAEL,GADAwC,EAAgB,2BAAK3E,GAAN,IAAasE,gBAAiBtE,EAAMsE,iBAAmBhE,EAAY,EAAI,MAClFsE,EAAgB5E,GAAQ,CACxB,IAAMyF,EAAMrB,EAAesB,WAAU,SAACb,GAAD,OAASA,EAAI/E,OAASE,EAAMF,SACpD,IAAT2F,GACApB,EAAkB,GAAD,oBAAKD,EAAeuB,MAAM,EAAGF,IAA7B,aAAsCrB,EAAeuB,MAAMF,EAAM,EAAGrB,EAAejF,eAErG,CACH,GAAI+F,IACA,OAEJb,EAAkB,GAAD,oBAAKD,GAAL,aAAC,eAAyBpE,GAA1B,IAAiCsE,gBAAiBtE,EAAMsE,iBAAmBhE,EAAY,EAAI,UAGpHiB,UAAWqD,EAAgB5E,GAAS,sCAAwCkF,IAA6B,sCAAwC,6BAftF,UAiB3D,+BAAMlF,EAAMF,OACZ,uBAAKkC,MAAO,CAAE4D,SAAU,WAAxB,UAAsC5F,EAAMsE,iBAAmBhE,EAAY,EAAI,GAA/E,MAAsFN,EAAMuE,OAA5F,MAAuGa,MAAMC,QAAQrF,EAAMwE,UAApB,UAAmCxE,EAAMwE,SAASc,KAAK,OAAUtF,EAAMwE,cAlBnH,4BAgBjCxE,EAAMF,UAIhC,UAGZ,yBACIqC,QAAS,kBAAMgD,IAAsBhB,EAAaC,QAAkBT,GACpEpC,UAAW4D,IAAsB,YAAc,qBAFnD,mBAGK7E,EAAY,2BAA6B,sDCzFzCwF,GAAsB,SAAC,GAG9B,IAFAhC,EAED,EAFCA,OAAQiC,EAET,EAFSA,cAET,EAC2ClF,mBAAkB,IAD7D,mBACMuD,EADN,KACsBC,EADtB,KAID,OAAO,uBAAK9C,UAAU,2BAAf,UACH,sBAAKA,UAAU,eAAf,sCACA,sBAAKA,UAAU,sBAAf,wFACCuC,EAAOnE,KAAI,SAACK,GAAD,OACR,uBAAKuB,UAAW6C,EAAerE,MAAK,SAAC8E,GAAD,OAASA,EAAI/E,OAASE,EAAMF,QAAQ,sBAAwB,aAC5FqC,QAAS,WACL,GAAIiC,EAAerE,MAAK,SAAC8E,GAAD,OAASA,EAAI/E,OAASE,EAAMF,QAChDuE,EAAkBD,EAAea,QAAO,SAACJ,GAAD,OAASA,EAAI/E,OAASE,EAAMF,aACjE,CACH,GAAIsE,EAAejF,QAAU,EACzB,OAEJkF,EAAkB,GAAD,oBAAKD,GAAL,aAAC,eAAyBpE,GAA1B,IAAiCsE,gBAAiBtE,EAAMsE,gBAAkB,SARvG,UAWI,sBAAK/C,UAAU,qBAAf,SAAqCvB,EAAMF,OAC3C,uBAAKyB,UAAU,sBAAf,gCAAqDvB,EAAMsE,iBAA3D,wBAA4FtE,EAAMuE,QAAlG,MAA+Ga,MAAMC,QAAQrF,EAAMwE,UAApB,sBAA+CxE,EAAMwE,SAASc,KAAK,OAAnE,oBAA0FtF,EAAMwE,aAC/M,sBAAKjD,UAAWvB,EAAMyE,OAAOtF,QAAU,IAAM,2BAA6Ba,EAAMyE,OAAOtF,QAAU,IAAM,4BAA8B,2BAArI,SAAkKa,EAAMyE,eAEhL,yBACItC,QAAS,kBAAgC,IAA1BiC,EAAejF,OAAe4G,EAtB1BjC,EAAOmB,QAAO,SAACJ,GAAD,OAAUT,EAAerE,MAAK,SAACiG,GAAD,OAAOA,EAAElG,OAAS+E,EAAI/E,WAAOmG,OAAO7B,GAAgB8B,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAErG,KAAKuG,cAAcD,EAAEtG,eAsB7E6D,GAC7EpC,UAAqC,IAA1B6C,EAAejF,OAAe,YAAc,qBAF3D,uDCxBF8D,GAAwBC,KAGjBoD,GAA0B,SAAC,GAAwM,IAAtM3J,EAAqM,EAArMA,WAAY4J,EAAyL,EAAzLA,oBAAqBjD,EAAoK,EAApKA,kBAAoK,EACvMzC,mBAAgC,IADuK,mBACpO2F,EADoO,KACxNC,EADwN,KAE3OC,qBAAU,WACN,IAAMC,EAAOhK,EAAW8F,kBAAkBmB,UAEpCgD,EAAyBnH,OAAOoH,OAAP,MAAApH,OAAM,CADP,IACO,oBAAkB+G,KACvDD,EAAoB9G,OAAOqH,YAAY,uBAAIrH,OAAOsH,QAAQJ,IAAnB,aAA6BlH,OAAOsH,QAAQH,KAAShE,QAAO,SAACC,EAAD,0BAAOmE,EAAP,KAAYpF,EAAZ,YAAuBiB,EAAIoE,IAAID,GAAMnE,EAAIqE,IAAIF,IAAQ,IAAMpF,GAAS,MAAK,IAAIuF,SACjL,CAACX,IACJ,IAAMY,EAAiB,SAACC,GAAD,OAAsBb,EAAWzG,MAAK,SAACH,GAAD,YAA0C+D,IAAhC/D,EAAKyH,OACtEC,EAXiB,SAAC3K,GAAD,OAAgCsG,GAAsBlD,MAAK,SAACqD,GAAD,OAAQA,EAAGtD,OAASnD,KAW/DwG,CAAmBxG,EAAWmD,MAAM2C,kBACrE8E,EAAkB,kBAAMf,EAAWrH,SAAWmI,EAA+BE,iBACnF,OAAO,gBAAC,IAAM/D,SAAP,WACH,sBAAKlC,UAAU,oBAAf,wCACA,sBAAKA,UAAU,cAAf,SACK9B,OAAOsH,QAAQO,EAA+B1D,WAAWjE,KAAI,mCAAE0H,EAAF,KAAYI,EAAZ,YAC1D,uBAAKlG,UAAU,qDAAf,cAAuHkG,EAAvH,IAAmIJ,IAAnI,uCAAyGA,SAGjH,sBAAK9F,UAAU,oBAAf,uDAA2E+F,EAA+BE,gBAA1G,wBACA,sBAAKjG,UAAU,cAAf,SACK9B,OAAOsH,QAAQO,EAA+BzD,UAAUlE,KAAI,mCAAE0H,EAAF,KAAYI,EAAZ,YACzD,uBACItF,QAAS,WACL,GAAIiF,EAAeC,GACfZ,EAAcD,EAAWvB,QAAO,SAACrF,GAAD,YAA0C+D,IAAhC/D,EAAKyH,WAC5C,CACH,GAAIE,IACA,OAEJd,EAAc,GAAD,oBAAKD,GAAL,gBAAoBa,EAAWI,QAGpDlG,UAAW6F,EAAeC,GAAY,qDAAuDE,IAAoB,qDAAuD,4BAX5K,cAaME,EAbN,IAakBJ,IAblB,sCAYwCA,SAKhD,yBACIlF,QAAS,kBAAMoF,IAAoBjE,SAAsBK,GACzDpC,UAAWgG,IAAoB,YAAc,qBAFjD,yCChCKG,GAA0B,SAAC,GAAqH,IAAnHC,EAAkH,EAAlHA,cAAe/G,EAAmG,EAAnGA,SAAmG,EACtHC,mBAAoB8G,GADkG,mBACjJnF,EADiJ,KACtIoF,EADsI,OAEpH/G,qBAFoH,mBAEjJlE,EAFiJ,KAErI6G,EAFqI,OAGhH3C,mBAAyB,IAHuF,mBAGjJgH,EAHiJ,KAGnIC,EAHmI,OAI5GjH,mBAAkB,IAJ0F,mBAIjJuD,EAJiJ,KAIjIC,EAJiI,OAK9GxD,oBAAkB,GAL4F,mBAKjJkH,EALiJ,KAKlIC,EALkI,KAMlJC,EAAWC,cAKXC,EAAiB,SAACrE,GACpBmE,EAAS,CACL1H,KAAMD,GAAUkC,EAAUjC,MAAQjC,EAAcD,EAChD+J,QAAQ,2BACD5F,GADA,IAEHhD,MATgBC,OAAOC,KAAK8C,EAAUhD,OAAOoD,QACrD,SAACC,EAAKjD,GAAN,mBAAC,eAAoBiD,GAArB,kBAA2BjD,GAAQ4C,EAAUhD,MAAMI,IAAsB,IAAMiI,EAAajI,IAAsB,OAClH,CAAE,KAAQ,EAAG,MAAS,EAAG,MAAS,EAAG,OAAU,EAAG,KAAQ,EAAG,OAAU,IAQ/DjD,WAAY,CACRmD,KAAI,OAAEnD,QAAF,IAAEA,OAAF,EAAEA,EAAYmD,KAClBgE,cAIZlD,GAAS,IAEb,OACIyH,IAASC,aACL,sBAAK/G,UAAU,mBAAf,SACI,uBAAKA,UAAU,QAAf,UACI,sBACIA,UAAU,eACVwC,IAAK9F,EACLkE,QAAS,SAACoG,GACN3H,GAAS,GACT2H,EAAEC,iBACFD,EAAEE,qBAET,sBAAKlH,UAAU,eAAf,SAAgCiB,EAAU1C,KAAX,UAAkGQ,GAAUkC,EAAUjC,MAAQ,UAAY,aAA1I,mCAA+BD,GAAUkC,EAAUjC,MAAQ,UAAY,aAAvE,aAChC,eAAC,GAAD,CAAgBiC,UAAW7F,EAAU,2BAAQ6F,GAAR,IAAmB7F,WAAY,CAAEmD,KAAMnD,EAAWmD,KAAMgE,OAAQ,MAAStB,EAAWC,kBAAmBoF,EAAcnF,gBAAiB,SAAC5C,GAAD,OAAkB8H,EAAa,2BAAKpF,GAAN,IAAiB1C,aACxNnD,EAIG,KAJU,eAAC,GAAD,CACX6F,UAAWA,EACXe,mBAAoB5G,EACpB2G,kBAAmB,SAACoF,GAAmClF,EAAckF,MAExE/L,IAAeoL,EAAgB,eAAC,GAAD,CAC5BpL,WAAYA,EACZ4J,oBAAqB,SAAC3E,GAAYkG,EAAgBlG,IAClD0B,kBAAmB,kBAAM0E,GAAiB,MACzC,MACJrL,IAAcoL,GAAmB3D,EAAejF,OAAS,EACpD,KADyD,eAAC,GAAD,CAAcxC,WAAYA,EAAY2D,UAAWA,GAAUkC,EAAUjC,MAAO4D,aAAc7D,GAAUkC,EAAUjC,MAAQ8D,EAAoB8D,IAExMxL,GAAcoL,GAAiB3D,EAAejF,OAAS,EAAI,eAAC,GAAD,CAAqB2E,OAAQM,EAAgB2B,cAAeoC,IAAqB,UAGrJQ,SAASC,eAAe,gBC9D9BxG,GAAcC,IACdC,GAAgBD,IACTwG,GAAwB,SAAC,GAA2C,IAAzCvI,EAAwC,EAAxCA,UAAwC,EACvCO,oBAAkB,GADqB,mBACrEiI,EADqE,KACzDC,EADyD,KAE5E,OAAO,uBAAyDxH,UAAU,qBAAqBY,QAAS,kBAAM4G,GAAe,IAAtH,UACFD,EAAa,eAAC,GAAD,CAAyBnB,cAAerH,EAAS,2BAAQ8B,IAAR,IAAqBtC,KAAM,KAA3B,2BAAuCwC,IAAvC,IAAsDxC,KAAM,KAAMc,SAAUmI,SAAqBpF,EAChK,+BACI,uBAAK3B,MAAO,CAAEuD,MAAO,QAArB,UACI,sBAAKhE,UAAU,6BAA6BwC,IAAKhG,IACjD,sBAAKwD,UAAU,6BAAf,uCAAoEjB,EAAY,UAAY,aAA5F,0BALL,UAAaA,EAAY,UAAY,YAArC,W,mBRRC7B,K,oBAAAA,E,yBAAAA,Q,KSUZ,IAAMuK,GAAiBC,KAuGVC,GAAyBC,aAFd,SAACpK,GAAD,MAAuB,CAAEqK,cAAerK,EAAMG,SAAUmK,QAAStK,EAAMuK,WAEzDH,EArGT,SAAC,GAA+I,IAAD,EAA5IC,EAA4I,EAA5IA,cAAeC,EAA6H,EAA7HA,QAASzI,EAAoH,EAApHA,SAC9C2I,EAAQ,UAAGZ,SAASC,eAAe,eAA3B,aAAG,EAAiCY,wBAC5CC,EAAgB,CAAEC,MAAc,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUG,MAAO,GAAK,EAAGC,OAAe,OAARJ,QAAQ,IAARA,OAAA,EAAAA,EAAUI,OAAQ,GAAK,EAAG5G,QAAgB,OAARwG,QAAQ,IAARA,OAAA,EAAAA,EAAUxG,QAAS,GAAK,GAAI6G,SAAiB,OAARL,QAAQ,IAARA,OAAA,EAAAA,EAAUK,SAAU,GAAK,IAFU,EAGxI/I,mBAAoB,IAHoH,mBAGjKgJ,EAHiK,KAGvJC,EAHuJ,KAUlK7B,EAAWC,cAEX6B,EAAmB,SAACC,GACtB,IAAMC,EAAOjB,GAAe/D,QAAO,SAACiF,GAAD,OAAaA,EAAQC,SAAWH,EAAevL,GAAc2L,WAAa3L,GAAc4L,aACrHC,EAAOC,KAAKC,KAAKP,EAAK9K,OAAS,GACrC,OAAO,uBAAKoC,UAAU,6BAAf,UACH,sBAAKA,UAAU,0BAAf,mBAA6CyI,EAAe,aAAe,WAA3E,eACCC,EAAKtK,KAAI,SAACuK,EAASzE,GAAV,OACN,uBACIzD,MAAOyD,GAAO6E,EAAO,CAAEG,SAAS,GAAD,OAAMhF,EAAM6E,EAAQ,EAApB,SAAgC,GAC/D/I,UAAU,wBACVY,QAAS,kBAAM2H,EAAY,GAAD,oBAAKD,GAAL,aAAC,eAAmBK,GAApB,IAA6BpK,KAAM,GAAI4K,UAAW,EAAGlJ,GAAIqI,EAAS1K,OAAS,QAHzG,UAII,sBAAKoC,UAAU,mBAAmBwC,IAAKhG,IACvC,sBAAKwD,UAAU,+BAAf,mBAAkD2I,EAAQ3J,KAA1D,cAAoE2J,EAAQS,KAA5E,uBAMhB,OACItC,IAASC,aACL,sBAAK/G,UAAU,mBAAf,SACI,uBAAKS,MAAOyH,EAAelI,UAAU,QAArC,UACI,sBAAKA,UAAU,eAAf,mCACCwI,GAAiB,GACjBA,GAAiB,GAClB,yBAAOxI,UAAU,kBAAjB,UACI,iCACI,gCACI,sCAAS,+BACT,sCAAS,+BACR9B,OAAOC,KAAKlE,GAAWmE,KAAI,SAACC,GAAD,OAAU,8BAA6CA,GAA7C,kCAAoCA,OAC1E,sCAAS,+BACT,sCAAS,oCAGjB,mCACKiK,EAASlK,KAAI,SAACuK,GAAD,OAAa,gCACvB,8BACI,eAAC,GAAD,CAAgBtJ,SAAU,SAACd,GAAD,OA7CvC,SAACA,EAAc0B,GAC9B,IAAMiE,EAAMoE,EAASnE,WAAU,SAACwE,GAAD,OAAaA,EAAQ1I,KAAOA,MAC9C,IAATiE,GACAqE,EAAY,GAAD,oBAAKD,EAASlE,MAAM,EAAGF,IAAvB,aAAC,eAAiCoE,EAASpE,IAA3C,IAAiD3F,UAAjD,aAA4D+J,EAASlE,MAAMF,EAAM,MA0CxBmF,CAAW9K,EAAMoK,EAAQ1I,KAAKf,aAAcyJ,EAAQpK,KAAMY,QAAQ,aAAaC,SAAS,iBADxI,0BAA4BuJ,EAAQpK,OAGpC,8BAA6CoK,EAAQ3J,MAArD,0BAA4B2J,EAAQ3J,OACnChB,GAAe2K,EAAQ1K,OAAOG,KAAI,SAACC,GAAD,OAAU,8BAAqEA,EAAKH,OAAOC,KAAKE,GAAM,KAA5F,qBAAuBsK,EAAQpK,KAA/B,iBAA4CL,OAAOC,KAAKE,GAAM,QAC1GsK,EAAQW,KAAK1L,OAAS,EAAI+K,EAAQW,KAAKlL,KAAI,SAACkL,GAAD,OAAU,sBAAqDtJ,UAAU,WAA/D,SAA2EsJ,GAA3E,0BAA6BX,EAAQpK,KAArC,YAA6C+K,OAA6C,oCAChJ,wCAAgDX,EAAQS,KAAxD,oCAA4BT,EAAQS,OACpC,qBAAIxI,QAAS,kBAAM2H,EAAYD,EAAS5E,QAAO,SAAC6F,GAAD,OAAUA,EAAKtJ,KAAO0I,EAAQ1I,QAA7E,SACI,sBAAKD,UAAU,mBAAmBwC,IAAK9F,YAG/C,sBAAI+D,MAAO,CAAE4D,SAAU,UAAvB,UACI,qBAAIrE,UAAU,YAAd,mBACA,qBAAIA,UAAU,cACd,qBAAIA,UAAU,cACd,qBAAIA,UAAU,cACd,qBAAIA,UAAU,cACd,qBAAIA,UAAU,cACd,qBAAIA,UAAU,cACd,qBAAIA,UAAU,cACd,qBAAIA,UAAU,cACd,qBAAIA,UAAU,YAAYS,MAAO,CAAE+I,WAAY,QAA/C,mBAA6DlB,EAASjH,QAAO,SAACC,EAAKqH,GAAN,OAAkBrH,EAAMqH,EAAQS,OAAM,GAAnH,oBAGX,uBAAIvB,GAAJ,aAAsBS,IAAU5E,QAAO,SAACiF,GAAD,OAAaA,EAAQC,QAAU1L,GAAc2L,cAAYjL,OAAS,EAAI,8GAAwF,KACrMiK,EAAcjK,OAAS0K,EAAS1K,OAAS,EAAI,0GAAoF,KACjI0K,EAASjH,QAAO,SAACC,EAAKqH,GAAN,OAAkBrH,EAAMqH,EAAQS,OAAM,GAAKtB,EAAU,iCAAM,uEAAN,OAAuF,KAC7J,yBACIlH,QAAS,SAACoG,GACN3H,GAAS,GACTqH,EAAS,CAAE1H,KAAMpC,EAAciK,QAASyB,IACxCtB,EAAEC,iBACFD,EAAEE,mBAENlH,UAvEI6H,EAAcjK,OAAS0K,EAAS1K,QAAU,GAAK,uBAAIiK,GAAJ,aAAsBS,IAAU5E,QAAO,SAACiF,GAAD,OAAaA,EAAQC,QAAU1L,GAAc2L,cAAYjL,QAAU,EAuEpI,iBAAmB,kBAPhD,oBASA,yBACIgD,QAAS,SAACoG,GACN3H,GAAS,GACT2H,EAAEC,iBACFD,EAAEE,mBAENlH,UAAU,gBANd,yBAURoH,SAASC,eAAe,kBCxGvBoC,GAAyB,WAAO,IAAD,EACHnK,oBAAkB,GADf,mBACjCiI,EADiC,KACrBC,EADqB,KAExC,OAAO,uBAA8BxH,UAAU,qBAAqBY,QAAS,kBAAM4G,GAAe,IAA3F,UACFD,EAAa,eAACI,GAAD,CAAwBtI,SAAUmI,SAAqBpF,EACrE,+BACI,uBAAK3B,MAAO,CAAEuD,MAAO,QAArB,UACI,sBAAKhE,UAAU,6BAA6BwC,IAAKhG,IACjD,sBAAKwD,UAAU,6BAAf,SAA6C,gDALxC,qBCFR0J,GAAqB,SAAC,GAA2C,IAAD,MAAxC3K,EAAwC,EAAxCA,UAC3BvB,EAAQC,GAAMC,WACduD,EAAalC,EAAYvB,EAAMK,QAAUL,EAAMM,UAC/CmC,EAAKlB,EAAY,UAAY,YAgBnC,OAAO,uBAAwBiB,UAAU,iBAAlC,UACH,uBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,uBAAf,SAAuCiB,EAAU1C,OACjD,sBAAKyB,UAAU,wBAAf,SAAwCjB,EAAY,UAAY,kBAEpE,yBAAOiB,UAAU,kBAAjB,UACI,iCACI,gCACI,gDAAYC,EAAZ,sBACC/B,OAAOC,KAAKlE,GAAWmE,KAAI,SAACC,GAAD,OAAU,8BAAuCA,GAAvC,UAAY4B,EAAZ,wBAA8B5B,OACpE,iDAAY4B,EAAZ,4BAGR,iCA5ByB,gCAC7B,8BAAKgB,EAAU1C,OACdL,OAAOC,KAAK8C,EAAUhD,OAAOG,KAAI,SAACC,GAC/B,OAAQA,GACJ,IAAK,QACL,IAAK,QACL,IAAK,OACD,OAAO,oCAAiC4C,EAAUhD,MAAMI,KAAjD,UAAY4B,EAAZ,iBAAuB5B,IAClC,QACI,OAAO,8BAAwC4C,EAAUhD,MAAMI,IAAxD,UAAY4B,EAAZ,iBAAuB0J,OAAOtL,SAGjD,8BAAK4C,EAAUQ,gBAoBf,sBAAKzB,UAAU,kBAAf,wBACA,iCACI,uBAAKS,MAAO,CAAEuD,MAAO,QAArB,UACI,sBAAKhE,UAAU,wBAAwBwC,IAAKrH,EAAkB,UAAC8F,EAAU7F,kBAAX,aAAC,EAAsBmD,QACrF,sBAAKyB,UAAU,mBAAf,mBAAmCiB,EAAU7F,kBAA7C,aAAmC,EAAsBmD,UAE7D,yBAAOyB,UAAU,cAAjB,UACI,iCACI,gCACI,wCACA,mDACA,yCACA,gDAGR,2CACKiB,EAAU7F,kBADf,aACK,EAAsBmH,OAAOnE,KAAI,SAACK,GAAD,OAC9B,gCACI,8BAAKA,EAAMF,OAAU,8BAAKE,EAAMsE,kBAChC,8BAAKtE,EAAMuE,SACX,8BAAKa,MAAMC,QAAQrF,EAAMwE,UAAYxE,EAAMwE,SAAS7E,KAAI,SAACwL,GAAD,OAAS,+BAAMA,OAAcnL,EAAMwE,aAH/F,UAAYhD,EAAZ,kBAAwBxB,EAAMF,oBAlC3C,UAAa0B,EAAb,WCnBE4J,GAAsB,SAAC,GAAuC,IAArClB,EAAoC,EAApCA,QAMlC,OAAO,uBAAkC3I,UAAU,iBAA5C,UACH,uBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,uBAAf,SAAuC2I,EAAQpK,OAC/C,uBAAKyB,UAAU,wBAAf,UAAwC2I,EAAQ3J,KAAhD,KAAwD2J,EAAQS,KAAhE,UAEJ,yBAAOpJ,UAAU,kBAAjB,UACI,iCACI,gCACI,gDAAY2I,EAAQpK,KAApB,sBACCL,OAAOC,KAAKlE,GAAWmE,KAAI,SAACC,GAAD,OAAU,8BAAiDA,GAAjD,UAAYsK,EAAQpK,KAApB,wBAAwCF,YAGtF,iCAjBkB,gCACtB,8BAAKsK,EAAQpK,OACZP,GAAe2K,EAAQ1K,OAAOG,KAAI,SAACC,GAAD,OAAU,8BAA0DA,EAAKH,OAAOC,KAAKE,GAAM,KAAjF,UAAYsK,EAAQpK,KAApB,iBAAiCL,OAAOC,KAAKE,GAAM,gBAmBhG,sBAAK2B,UAAU,kBAAf,kBACC2I,EAAQW,KAAK1L,OAAS,EAAI+K,EAAQW,KAAKlL,KAAI,SAAC0L,GAAD,OAAc,sBAA8C9J,UAAU,WAAxD,SAAoE8J,GAApE,eAAkBnB,EAAQpK,KAA1B,YAAkCuL,OAAqD,sBAAK9J,UAAU,WAAf,iBAjB9I,UAAa2I,EAAQpK,KAArB,WCJEwL,GAAoB,WAC7B,IAAMvM,EAAQC,GAAMC,WACdgJ,EAAWC,cASjB,OAAO,uBAAK3G,UAAU,kBAAkBS,MAAO,CAAEuJ,SAAU,SAApD,UACH,sBAAKhK,UAAU,4CAA4CY,QAT3C,WAChBqJ,QAAQC,MAAM,6CAQd,uBACA,eAAC,GAAD,CAAgB7K,SANA,SAACd,GACjBmI,EAAS,CAAE1H,KAAM/B,GAAc4J,QAAStI,KAKDW,aAAc1B,EAAM2M,MAAOhL,QAAQ,yBAAyBC,SAAS,oBCfvGgL,GAAoB,WACf3M,GAAMC,WAMpB,OAAO,uBAAKsC,UAAU,kBAAkBqK,MAAO,4BAAxC,UACH,sBAAKrK,UAAU,4CAA4CY,QAL1C,WACjBqJ,QAAQC,MAAM,sCAId,uBACA,sBACI1H,IAAKlG,EACL0D,UAAU,eACVC,GAAI,WACJqK,IAAK,aAET,uBAAKtK,UAAU,eAAf,UAA+BzC,KAA/B,eCdKgN,GAAoB,WAAO,IAE9B/M,EADYgN,qBAAWC,KAArBhN,MACYC,WACpB,OAAO,eAAC,GAAD,CAA0BgN,SAAUlN,EAAMuK,QAAS4C,KAAK,WAAWN,MAAM,gDAGvEO,GAA2B,SAAC,GAAkF,IAAhFF,EAA+E,EAA/EA,SAAUL,EAAqE,EAArEA,MAAOM,EAA8D,EAA9DA,KAMxD,OAAO,uBAAK3K,UAAU,kBAAkBqK,MAAOA,EAAxC,UACH,sBAAKrK,UAAU,4CAA4CY,QAL3C,WAChBqJ,QAAQC,MAAM,6CAId,SAAkFS,IAClF,sBACInI,IAAKpG,EACL4D,UAAU,eACVC,GAAI,eACJqK,IAAK,iBAET,sBAAKtK,UAAU,eAAf,mBACQ0K,EADR,eCTKG,GAAqBjD,aAFV,SAACpK,GAAD,OAAsBA,IAEZoK,EATT,kBACrB,uBAAqB3H,GAAG,YAAYD,UAAU,oBAA9C,UACI,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,MAHK,gBCqBA8K,GAAWlD,aANA,SAACpK,GAAD,MAAuB,CAC3CuN,QAASvN,EAAMK,QACfmN,UAAWxN,EAAMM,UACjBwK,SAAU9K,EAAMG,YAGIiK,EAlBI,SAAC,GAAD,IAAGmD,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAW1C,EAAvB,EAAuBA,SAAvB,OAA6I,gBAAC,IAAMpG,SAAP,WACrK,eAAC2I,GAAD,GAAwB,sBACxB,uBAAsB5K,GAAG,aAAaQ,MAAO,CAAEwK,WAAY,UAA3D,UACI,uBAA8BxK,MAAO,CAAEuD,MAAO,QAA9C,UACK+G,EAAU,eAAC,GAAD,CAA2ChM,WAAW,GAA9B,oBAAyC,eAAC,GAAD,CAAuBA,WAAW,IAC7GiM,EAAY,eAAC,GAAD,CAA6CjM,WAAW,GAAhC,sBAA4C,eAAC,GAAD,CAAuBA,WAAW,MAF9G,sBAIRuJ,GAAYA,EAAS1K,OAAS,EAAI0K,EAASlK,KAAI,SAACuK,GAAD,OAAa,eAAC,GAAD,CAAyDA,QAASA,GAAlE,sBAAyCA,EAAQpK,eAAgC6D,EAC7IrE,KAAqB,EAAI,eAAC,GAAD,SAA6BqE,IANlD,oB,SCLA8I,GAAc,WAEvB,IAAMC,EAAUC,cACV1E,EAAWC,cAEjB,OACI,uBAAK3G,UAAU,gBAAf,UACI,sBAAKS,MAAO,CAAEyI,SAAU,UAAW1H,MAAO,OAAQ6J,UAAW,SAAU7B,WAAY,OAAQnF,SAAU,UAArG,mEACA,yBAAOiH,QAAQ,gBAAgBtL,UAAU,uBAAuBS,MAAO,CAAEyI,SAAU,OAAnF,UACI,wBACIjJ,GAAG,gBACHjB,KAAK,OACLuM,OAAO,QACP9K,MAAO,CAAE+K,QAAS,QAClBtL,SAAU,WAAO,IAAD,IACNuL,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACC,GAAmC,IAAD,EAC/ClF,EAAS,CAAE1H,KAAMhC,GAAU6J,QAASgF,KAAKC,MAAL,UAAWF,EAAGG,cAAd,aAAW,EAAWC,UAC1Db,EAAQc,KAAK,aAEjBR,EAAOS,WAAP,UAAmB9E,SAAS+E,cAAc,yBAA1C,iBAAkB,EAAgEC,aAAlF,aAAkB,EAAuEC,KAAK,OAGtG,sBAAK5L,MAAO,CAAEyI,SAAU,OAASlJ,UAAU,6BAA3C,6CACA,sBAAKS,MAAO,CAAEyI,SAAU,OAASoB,IAAI,gBAAgBtK,UAAU,2BAA2BwC,IAAKtG,OAEnG,uBAAK8D,UAAU,uBAAuBS,MAAO,CAAEyI,SAAU,OAAStI,QAAS,kBAAMuK,EAAQc,KAAK,aAA9F,UACI,sBAAKjM,UAAU,6BAAf,+BACA,sBAAKsK,IAAI,gBAAgBtK,UAAU,2BAA2BwC,IAAKxG,OAEvE,uBACIgE,UAAU,uBACVS,MAAO,CAAEyI,SAAU,OACnBtI,QAAS,WACL8F,EAAS,CAAE1H,KAAMhC,GAAU6J,QAAUyF,KACrCnB,EAAQc,KAAK,aALrB,UAOI,sBAAKjM,UAAU,6BAAf,wCACA,sBAAKsK,IAAI,gBAAgBtK,UAAU,2BAA2BwC,IAAK1G,WCnCtEyQ,GAA8B,CACvCxE,QAAS,IACTpK,SAAU,GACVwM,MAAO,WCJX,IAYaqC,GAAe5E,eAZhB,kBACV,eAAC,IAAD,UACE,sBAAK5H,UAAU,WAAf,SACE,gBAAC,IAAD,WAEE,eAAC,IAAD,CAAOyM,KAAK,WAAWC,UAAW5B,KAElC,eAAC,IAAD,CAAO2B,KAAK,IAAIC,UAAWxB,eAMtBzN,GAAQkP,aClBd,WAAqG,IAA/EnP,EAA8E,uDAA3D+O,GAAkBK,EAAyC,uCACvG,OAAQA,EAAO5N,MACX,KAAK6N,GACD,OAAOD,EAAO/F,QAClB,KAAKgG,GACD,OAAO,2BAAKrP,GAAZ,IAAmB2M,MAAOyC,EAAO/F,UACrC,KAAKgG,EACD,OAAO,2BAAKrP,GAAZ,IAAmBK,QAAQ,2BAAML,EAAMK,SAAb,IAAmCU,KAAMqO,EAAO/F,YAC9E,KAAKgG,EACD,OAAO,2BAAKrP,GAAZ,IAAmBK,QAAS+O,EAAO/F,UACvC,KAAKgG,EACD,OAAO,2BAAKrP,GAAZ,IAAmBM,UAAW8O,EAAO/F,UACzC,KAAKgG,EACD,IAAMvE,EAAW9K,EAAMG,SAAN,uBAAqBH,EAAMG,UAA3B,aAAwCiP,EAAO/F,UAAW+F,EAAO/F,QAClF,OAAO,2BAAKrJ,GAAZ,IAAmBG,SAAU2K,EAAUP,QAASvK,EAAMuK,QAAU6E,EAAO/F,QAAQxF,QAAO,SAACC,EAAKqH,GAAN,OAAkBrH,EAAMqH,EAAQS,OAAM,KAChI,QACI,OAAO5L,MDInBsJ,SACE,eAAC,IAAMgG,WAAP,UACE,eAAC,IAAD,CAAUrP,MAAOA,GAAjB,SACE,eAAC+O,GAAD,QAGJpF,SAASC,eAAe,W","file":"static/js/main.7aa50642.chunk.js","sourcesContent":["import { Power, Stats } from \"./Characters\";\r\n\r\nexport enum BackgroundEnum {\r\n    Biomorph = \"Biomorph\",\r\n    Cyborg = \"Cyborg\",\r\n    Mystic = \"Mystic\",\r\n    Psionicist = \"Psionicist\",\r\n    RoboticsExpert = \"RoboticsExpert\",\r\n    Rogue = \"Rogue\",\r\n    Tekker = \"Tekker\",\r\n    Veteran = \"Veteran\",\r\n}\r\n\r\nexport interface BackgroundMetadata {\r\n    name: string;\r\n    statModifications: {\r\n        mandatory: Partial<Stats>;\r\n        optional: Partial<Stats>;\r\n        chooseOptionals: number;\r\n    };\r\n    corePowers: string[];\r\n    description: string;\r\n}\r\n\r\nexport interface BackgroundModifications {\r\n    name: BackgroundEnum;\r\n    statModifications: StatsImprovements;\r\n    powers: Power[];\r\n}\r\n\r\nexport interface BackgroundOptions {\r\n    name: BackgroundEnum;\r\n    statModifications: {\r\n        mandatory: Partial<Stats>;\r\n        optional: Partial<Stats>;\r\n        chooseOptionals: number;\r\n    };\r\n    corePowers: string[];\r\n    description: string;\r\n}\r\n\r\nexport interface StatsImprovements {\r\n    mandatory: Partial<Stats>;\r\n    optional: Partial<Stats>;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Biomorph.30852fce.png\";","import { SoldierGroups } from \"./Metadata\";\r\n\r\nexport interface Background {\r\n    name: string;\r\n    powers: Power[];\r\n}\r\n\r\nexport interface Power {\r\n    name: string;\r\n    activationValue: number;\r\n    strain: number;\r\n    category: string | string[];\r\n    effect: string;\r\n}\r\n\r\ninterface Stat {\r\n    [key: string]: number;\r\n}\r\n\r\nexport interface Character {\r\n    name: string;\r\n    stats: Stats;\r\n    level: number;\r\n    gearSlots: number;\r\n    type: string;\r\n    background?: Background;\r\n}\r\n\r\nexport enum StatsEnum {\r\n    Move = \"Move\",\r\n    Fight = \"Fight\",\r\n    Shoot = \"Shoot\",\r\n    Armour = \"Armour\",\r\n    Will = \"Will\",\r\n    Health = \"Health\",\r\n}\r\n\r\nexport type Stats = { [key in StatsEnum]: number; };\r\n\r\nexport interface Soldier {\r\n    name: string;\r\n    type: string;\r\n    stats: Stats;\r\n    cost: number;\r\n    gearSlots: number;\r\n    gear: string[];\r\n    id: number;\r\n    group: SoldierGroups;\r\n}\r\n\r\nexport enum CharactersEnum {\r\n    Captain = \"Captain\",\r\n    FirstMate = \"FirstMate\",\r\n}\r\n","export default __webpack_public_path__ + \"static/media/CreateCrew.aa96e00e.png\";","export default __webpack_public_path__ + \"static/media/Cyborg.1d6e41d1.png\";","export default __webpack_public_path__ + \"static/media/Add.94030173.png\";","export default __webpack_public_path__ + \"static/media/Crew.517fe591.png\";","export default __webpack_public_path__ + \"static/media/Captain.95237b5a.png\";","export default __webpack_public_path__ + \"static/media/Delete.17e835d8.png\";","export default __webpack_public_path__ + \"static/media/Treasury.94a0facb.png\";","export default __webpack_public_path__ + \"static/media/ImportCrew.e5abae4c.png\";","export default __webpack_public_path__ + \"static/media/Mystic.41443507.png\";","export default __webpack_public_path__ + \"static/media/Psionicist.3e8db9d2.png\";","export default __webpack_public_path__ + \"static/media/RoboticsExpert.62afca10.png\";","export default __webpack_public_path__ + \"static/media/Rogue.67294730.png\";","export default __webpack_public_path__ + \"static/media/Tekker.9c3b86f0.png\";","export default __webpack_public_path__ + \"static/media/Unknown.c12505bd.png\";","export default __webpack_public_path__ + \"static/media/UseSample.3dd4980b.png\";","export default __webpack_public_path__ + \"static/media/Veteran.9d33839f.png\";","import { BackgroundEnum } from \"../types/Background\";\r\nimport BiomorphPng from \"./Biomorph.png\";\r\nimport CreateCrewPng from \"./CreateCrew.png\";\r\nimport CyborgPng from \"./Cyborg.png\";\r\nimport AddPng from \"./icons/Add.png\";\r\nimport CaptainPng from \"./icons/Captain.png\";\r\nimport CreditsPng from \"./icons/Credits.png\";\r\nimport CrewPng from \"./icons/Crew.png\";\r\nimport DeletePng from \"./icons/Delete.png\";\r\nimport TreasuryPng from \"./icons/Treasury.png\";\r\nimport ImportCrewPng from \"./ImportCrew.png\";\r\nimport MysticPng from \"./Mystic.png\";\r\nimport PsionicistPng from \"./Psionicist.png\";\r\nimport RoboticsExpertPng from \"./RoboticsExpert.png\";\r\nimport RoguePng from \"./Rogue.png\";\r\nimport TekkerPng from \"./Tekker.png\";\r\nimport UnknownPng from \"./Unknown.png\";\r\nimport UseSamplePng from \"./UseSample.png\";\r\nimport VeteranPng from \"./Veteran.png\";\r\n\r\nexport const CyborgIcon = CyborgPng;\r\nexport const BiomorphIcon = BiomorphPng;\r\nexport const MysticIcon = MysticPng;\r\nexport const PsionicistIcon = PsionicistPng;\r\nexport const RoboticsExpertIcon = RoboticsExpertPng;\r\nexport const RogueIcon = RoguePng;\r\nexport const TekkerIcon = TekkerPng;\r\nexport const VeteranIcon = VeteranPng;\r\n\r\nexport const getBackgroundImage = (background: string | undefined) => {\r\n    switch (background) {\r\n        case BackgroundEnum.Biomorph: return BiomorphIcon;\r\n        case BackgroundEnum.Cyborg: return CyborgIcon;\r\n        case BackgroundEnum.Mystic: return MysticIcon;\r\n        case BackgroundEnum.Psionicist: return PsionicistIcon;\r\n        case BackgroundEnum.RoboticsExpert: return RoboticsExpertIcon;\r\n        case BackgroundEnum.Rogue: return RogueIcon;\r\n        case BackgroundEnum.Tekker: return TekkerIcon;\r\n        case BackgroundEnum.Veteran: return VeteranIcon;\r\n        default:\r\n            return UnknownPng;\r\n    }\r\n};\r\n\r\nexport const CaptainIcon = CaptainPng;\r\nexport const UseSampleIcon = UseSamplePng;\r\nexport const CreateCrewIcon = CreateCrewPng;\r\nexport const ImportCrewIcon = ImportCrewPng;\r\nexport const CreditsIcon = CreditsPng;\r\nexport const TreasuryIcon = TreasuryPng;\r\nexport const CrewIcon = CrewPng;\r\nexport const AddIcon = AddPng;\r\n\r\nexport const DeleteItemIcon = DeletePng;\r\n","import { Character, Soldier } from \"../types/Characters\";\r\nimport { CrewState } from \"../types/State\";\r\n\r\nexport const ADD_SOLDIERS = \"ADD_SOLDIERS\";\r\nexport const SET_CAPTAINS_NAME = \"SET_CAPTAINS_NAME\";\r\nexport const SET_FIRST_MATE = \"SET_FIRST_MATE\";\r\nexport const SET_CAPTAIN = \"SET_CAPTAIN\";\r\nexport const SET_CREW = \"SET_CREW\";\r\nexport const SET_CREWNAME = \"SET_CREWNAME\";\r\n\r\ninterface SetCrew {\r\n    type: typeof SET_CREW;\r\n    payload: CrewState;\r\n}\r\n\r\ninterface SetCrewName {\r\n    type: typeof SET_CREWNAME;\r\n    payload: string;\r\n}\r\n\r\ninterface SetCaptainsName {\r\n    type: typeof SET_CAPTAINS_NAME;\r\n    payload: string;\r\n}\r\n\r\ninterface SetCaptain {\r\n    type: typeof SET_CAPTAIN;\r\n    payload: Character;\r\n}\r\n\r\ninterface SetFirstMate {\r\n    type: typeof SET_FIRST_MATE;\r\n    payload: Character;\r\n}\r\n\r\ninterface AddSoldiers {\r\n    type: typeof ADD_SOLDIERS;\r\n    payload: Soldier[];\r\n}\r\nexport type Actions = SetCrew | SetCrewName | SetCaptainsName | SetCaptain | SetFirstMate | AddSoldiers;\r\n","import { store } from \".\";\r\nimport * as BackgroundList from \"./data/Backgrounds.json\";\r\nimport * as PowerList from \"./data/Powers.json\";\r\nimport { BackgroundMetadata, BackgroundModifications } from \"./types/Background\";\r\nimport { CharactersEnum, Power, Stats, StatsEnum } from \"./types/Characters\";\r\n\r\nconst allPowers: Power[] = PowerList.Powers;\r\nconst allBackgrounds: BackgroundMetadata[] = BackgroundList.backgrounds;\r\n\r\nexport const numberOfCrewMembers = () => {\r\n    const state = store.getState();\r\n    return (state.Soldiers?.length || 0) + (state.Captain ? 1 : 0) + (state.FirstMate ? 1 : 0);\r\n};\r\n\r\nexport const numberOfSoldiers = () => {\r\n    const state = store.getState();\r\n    return state.Soldiers?.length || 0;\r\n};\r\n\r\nexport const getStatStrings = (stats: Stats | Partial<Stats>) => Object.keys(stats).map((stat) => {\r\n    switch (stat) {\r\n        case \"Fight\":\r\n        case \"Shoot\":\r\n        case \"Will\":\r\n            return { [stat]: `+${stats[stat]}` };\r\n        default:\r\n            return { [stat]: `${stats[stat as StatsEnum]}` };\r\n    }\r\n});\r\nconst getPower = (name: string) => allPowers.find((power) => power.name === name) as Power;\r\n\r\nexport const getPowerInfos = (powerNames: string[]): Power[] => powerNames.map(getPower);\r\n\r\nconst getBackground = (name: string) => allBackgrounds.find((background) => background.name === name) as BackgroundMetadata;\r\n\r\nexport const isCorePower = (powerName: string, backgroundName: string) => !!getBackground(backgroundName).corePowers.find((power) => power === powerName);\r\n\r\nexport const isCaptain = (type: string) => type === CharactersEnum.Captain;\r\n\r\nexport const getNonCorePowers = (backgroundName: string) => allPowers.filter((power) => !getBackground(backgroundName).corePowers.includes(power.name));\r\n\r\nexport const maxStatsSelected = (background: BackgroundModifications) => Object.keys(background.statModifications.mandatory).length + Object.keys(background.statModifications.optional).length >= 3;\r\n\r\nexport const maxCorePowersSelected = (background: BackgroundModifications, isCaptainFlag: boolean) => {\r\n    let powersRemaining = isCaptainFlag ? 4 : 3;\r\n    if (background.powers.filter((power) => !isCorePower(power.name, background.name)).length === 2) {\r\n        powersRemaining = isCaptainFlag ? 3 : 2;\r\n    }\r\n    return background.powers.filter((power) => isCorePower(power.name, background.name)).length >= powersRemaining;\r\n};\r\n\r\nexport const maxNonCorePowersSelected = (background: BackgroundModifications, isCaptainFlag: boolean) =>\r\n    background.powers.filter((power) => !isCorePower(power.name, background.name)).length >= (maxCorePowersSelected(background, isCaptainFlag) ? 1 : 2);\r\n","import { Stats } from \"./Characters\";\r\n\r\nexport enum SoldierGroups {\r\n    Standard = \"Standard\",\r\n    Specialist = \"Specialist\",\r\n}\r\n\r\nexport interface SoldierMetadata {\r\n    type: string;\r\n    cost: number;\r\n    stats: Stats;\r\n    gear: string[];\r\n    group: SoldierGroups;\r\n}\r\n\r\nexport interface CharacterMetadata {\r\n    stats: Stats;\r\n    level: number;\r\n    gearSlots: number;\r\n    type: string;\r\n}\r\n","import React, { useLayoutEffect, useRef, useState } from \"react\";\r\n\r\nexport const InputComponent = ({ currentState, tooltip, cssClass, callback }: { currentState: string; tooltip: string; cssClass: string; callback(name: string): void }) => {\r\n    const [name, setName] = useState<string>(currentState);\r\n    const [inputVisible, setInputVisible] = useState<boolean>(false);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    useLayoutEffect(() => {\r\n        inputRef?.current?.focus();\r\n    }, [inputVisible]);\r\n\r\n    const checkEnter = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.code === \"Enter\") {\r\n            callback(name);\r\n            setInputVisible(false);\r\n        }\r\n        if (event.code === \"Escape\") {\r\n            setName(currentState);\r\n            callback(currentState);\r\n            setInputVisible(false);\r\n        }\r\n    };\r\n\r\n    return inputVisible ?\r\n        <input\r\n            ref={inputRef}\r\n            className={cssClass}\r\n            id=\"NameInput\"\r\n            onChange={(event: React.FormEvent<HTMLInputElement>) => setName(event.currentTarget.value)}\r\n            onKeyDown={checkEnter}\r\n            onBlur={() => {\r\n                callback(name);\r\n                setInputVisible(false);\r\n            }}\r\n            value={name}\r\n        /> :\r\n        <div\r\n            style={{ placeSelf: \"start\", padding: \"0.2rem 0.23rem\" }}\r\n            className={currentState ? \"input-text-div\" : \"input-text-div input-error\"}\r\n            onClick={() => setInputVisible(true)}>\r\n            {currentState || tooltip}\r\n        </div>;\r\n};\r\n","import React from \"react\";\r\nimport * as Characters from \"../data/Characters.json\";\r\nimport { Character, Stats, StatsEnum } from \"../types/Characters\";\r\nimport { CharacterMetadata } from \"../types/Metadata\";\r\nimport { getStatStrings, isCaptain } from \"../Utils\";\r\nimport { InputComponent } from \"./InputControl\";\r\n\r\nconst baseCaptain = Characters.Captain as CharacterMetadata;\r\nconst baseFirstMate = Characters.FirstMate as CharacterMetadata;\r\n\r\nexport const CharacterTable = (\r\n    { character, statModifications, setNameCallback }:\r\n        { character: Character; statModifications: Partial<Stats>; setNameCallback(value: React.SetStateAction<string>): void }\r\n) => {\r\n    const improvedStats = () => Object.keys(character.stats).reduce(\r\n        (acc, stat) => ({ ...acc, [stat]: character.stats[stat as StatsEnum] + (statModifications[stat as StatsEnum] || 0) }),\r\n        { \"Move\": 0, \"Fight\": 0, \"Shoot\": 0, \"Armour\": 0, \"Will\": 0, \"Health\": 0 }\r\n    );\r\n    const smallWidth = character.background ? \"8%\" : \"10%\";\r\n    return <table className=\"character-table\">\r\n        <colgroup>\r\n            <col style={{ width: \"30%\" }} />\r\n            <col style={{ width: smallWidth }} />\r\n            <col style={{ width: smallWidth }} />\r\n            <col style={{ width: smallWidth }} />\r\n            <col style={{ width: smallWidth }} />\r\n            <col style={{ width: smallWidth }} />\r\n            <col style={{ width: smallWidth }} />\r\n            <col style={{ width: smallWidth }} />\r\n            {character.background ? <col style={{ width: smallWidth }} /> : null}\r\n        </colgroup>\r\n        <thead>\r\n            <tr>\r\n                <td key={\"add_dialog_stat_header_name\"}>Name</td>\r\n                {Object.keys(StatsEnum).map((stat) => <td key={`add_dialog__stat_header_${stat}`}>{stat}</td>)}\r\n                <td key={\"add_dialog_stat_header_level\"}>Level</td>\r\n                {character.background ? <td key={\"add_dialog_stat_header_gear\"}>Background</td> : null}\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n                <td key={`add_dialog_name_${character.name}`}>\r\n                    <InputComponent callback={setNameCallback} currentState={character.name} tooltip={`Your ${isCaptain(character.type) ? \"captain\" : \"first mate\"} needs a proper name`} cssClass=\"dialog-input-field\" />\r\n                </td>\r\n                {getStatStrings(improvedStats()).map((stat) =>\r\n                    <td\r\n                        className={improvedStats()[Object.keys(stat)[0] as StatsEnum] !== (isCaptain(character.type) ? baseCaptain : baseFirstMate).stats[Object.keys(stat)[0] as StatsEnum] ? \"improved-stat\" : \"\"}\r\n                        key={`add_dialog_${character.name}_stat_${Object.keys(stat)[0]}`}>\r\n                        {stat[Object.keys(stat)[0]]}\r\n                    </td>\r\n                )}\r\n                <td>{character.level}</td>\r\n                {character.background ? <td>{character.background.name}</td> : null}\r\n            </tr>\r\n        </tbody>\r\n    </table>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as Backgrounds from \"../../data/Backgrounds.json\";\r\nimport { getBackgroundImage } from \"../../images/index\";\r\nimport { BackgroundEnum, BackgroundModifications, BackgroundOptions } from \"../../types/Background\";\r\nimport { Character } from \"../../types/Characters\";\r\nimport { isCaptain } from \"../../Utils\";\r\n\r\nconst backgroundInformation = Backgrounds.backgrounds as BackgroundOptions[];\r\nconst getBackgroundInfos = (background: BackgroundEnum) => backgroundInformation.find((bg) => bg.name === background) as BackgroundOptions;\r\n\r\nexport const SelectBackground = ({ character, selectedBackground, updateAndContinue }: { character: Character; selectedBackground: BackgroundModifications | undefined; updateAndContinue(value: BackgroundModifications): void }) => {\r\n    const [background, setBackground] = useState<BackgroundModifications | undefined>();\r\n    const renderBackgroundTile = (bg: BackgroundEnum) => <div\r\n        key={`add-character-${bg}`}\r\n        className={bg === background?.name ? \"add-character-background background-selected\" : \"add-character-background\"}\r\n        onClick={() => setBackground(\r\n            bg === background?.name ?\r\n                undefined :\r\n                {\r\n                    name: bg,\r\n                    statModifications: { mandatory: getBackgroundInfos(bg).statModifications.mandatory, optional: {} },\r\n                    powers: [],\r\n                }\r\n        )}>\r\n        <img className=\"add-character-background-icons\" src={getBackgroundImage(bg)} />\r\n        <div className=\"add-character-background-text\">{`${bg}`}</div>\r\n    </div>;\r\n\r\n    return <React.Fragment>\r\n        <div className=\"modal-header\">{`Select a background for your ${isCaptain(character.type) ? \"Captain\" : \"First Mate\"}`}</div>\r\n        <div className=\"add-character-background-container\">\r\n            {Object.keys(BackgroundEnum).map((backgroundEnumEntry: string) => renderBackgroundTile(backgroundEnumEntry as BackgroundEnum))}\r\n        </div>\r\n        {background ? <div className=\"modal-header\">Background Description</div> : null}\r\n        {background ? <div className=\"background-description\">{getBackgroundInfos(background.name).description}</div> : null}\r\n        <button\r\n            onClick={() => background ? updateAndContinue(background) : undefined}\r\n            className={background && character.name ? \"power-btn\" : \"power-btn disabled\"}\r\n        >Confirm Background selection</button>\r\n    </React.Fragment>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as Backgrounds from \"../../data/Backgrounds.json\";\r\nimport { BackgroundEnum, BackgroundModifications, BackgroundOptions } from \"../../types/Background\";\r\nimport { Power } from \"../../types/Characters\";\r\nimport { getNonCorePowers, getPowerInfos, isCorePower } from \"../../Utils\";\r\n\r\nconst backgroundInformation = Backgrounds.backgrounds as BackgroundOptions[];\r\nconst getBackgroundInfos = (background: BackgroundEnum) => backgroundInformation.find((bg) => bg.name === background) as BackgroundOptions;\r\n\r\nexport const SelectPowers = (\r\n    { background, isCaptain, updatePowers }:\r\n        { background: BackgroundModifications; isCaptain: boolean; updatePowers(value: Power[]): void }\r\n) => {\r\n    const [selectedPowers, setSelectedPowers] = useState<Power[]>([]);\r\n    const [previewPower, setPreviewPower] = useState<Power>({ name: \"\", activationValue: 0, strain: 0, category: \"Touch\", effect: \"Click any Power to preview here\" });\r\n    const isPowerSelected = (power: Power) => !!selectedPowers.find((pwr) => pwr.name === power.name);\r\n    const infos = getBackgroundInfos(background.name);\r\n\r\n    const maxCorePowersSelected = () => {\r\n        let powersRemaining = isCaptain ? 4 : 3;\r\n        if (selectedPowers.filter((power) => !isCorePower(power.name, background.name)).length === 2) {\r\n            powersRemaining = isCaptain ? 3 : 2;\r\n        }\r\n        return selectedPowers.filter((power) => isCorePower(power.name, background.name)).length >= powersRemaining;\r\n    };\r\n\r\n    const maxNonCorePowersSelected = () => selectedPowers.filter((power) => !isCorePower(power.name, background.name)).length >= (maxCorePowersSelected() ? 1 : 2);\r\n    const maxPowersSelected = () => selectedPowers.length >= (isCaptain ? 5 : 4);\r\n\r\n    return <React.Fragment>\r\n        <div className=\"power-preview-section\">\r\n            <div className=\"power-preview-name\">{previewPower.name}</div>\r\n            <div className=\"power-preview-infos\">{`Activation: ${previewPower.activationValue}`} / {`Strain: ${previewPower.strain}`} / {Array.isArray(previewPower.category) ? `Categories: ${previewPower.category.join(\", \")}` : `Category: ${previewPower.category}`}</div>\r\n            <div className={previewPower.effect.length <= 200 ? \"power-preview-large-text\" : previewPower.effect.length <= 400 ? \"power-preview-medium-text\" : \"power-preview-small-text\"}>{previewPower.effect}</div>\r\n        </div>\r\n        <div className=\"core-power-section\">\r\n            <div className=\"dialog-sub-header\">{`Choose ${isCaptain ? \"3 - 4\" : \"2 - 3\"} core Powers`}</div>\r\n            <div className=\"section-div\" >\r\n                {background ? getPowerInfos(infos.corePowers).map((power) => <div\r\n                    style={{ float: \"none\" }}\r\n                    onMouseOver={() => setPreviewPower(power)}\r\n                    onClick={() => {\r\n                        setPreviewPower(isCaptain ? power : { ...power, activationValue: power.activationValue + 2 });\r\n                        if (isPowerSelected(power)) {\r\n                            const idx = selectedPowers.findIndex((pwr) => pwr.name === power.name);\r\n                            if (idx !== -1) {\r\n                                setSelectedPowers([...selectedPowers.slice(0, idx), ...selectedPowers.slice(idx + 1, selectedPowers.length)]);\r\n                            }\r\n                        } else {\r\n                            if (maxCorePowersSelected()) {\r\n                                return;\r\n                            }\r\n                            setSelectedPowers([...selectedPowers, { ...power, activationValue: power.activationValue + (isCaptain ? 0 : 2) }]);\r\n                        }\r\n                    }}\r\n                    className={isPowerSelected(power) ? \"background-power-selection selected\" : maxCorePowersSelected() ? \"background-power-selection disabled\" : \"background-power-selection\"}\r\n                    key={`add_dialog_x_stat_${power.name}`}>\r\n                    <div>{power.name}</div>\r\n                    <div style={{ fontSize: \"0.65rem\" }}>{power.activationValue + (isCaptain ? 0 : 2)} / {power.strain} / {Array.isArray(power.category) ? `${power.category.join(\", \")}` : power.category}</div>\r\n                </div>\r\n                ) : null}\r\n            </div>\r\n        </div>\r\n        <div className=\"non-core-power-section\">\r\n            <div className=\"dialog-sub-header\">Choose 1 - 2 non-core Powers</div>\r\n            <div className=\"section-div\" >\r\n                {background ? getNonCorePowers(background.name).map((power) => <div\r\n                    onClick={() => {\r\n                        setPreviewPower({ ...power, activationValue: power.activationValue + (isCaptain ? 2 : 4) });\r\n                        if (isPowerSelected(power)) {\r\n                            const idx = selectedPowers.findIndex((pwr) => pwr.name === power.name);\r\n                            if (idx !== -1) {\r\n                                setSelectedPowers([...selectedPowers.slice(0, idx), ...selectedPowers.slice(idx + 1, selectedPowers.length)]);\r\n                            }\r\n                        } else {\r\n                            if (maxNonCorePowersSelected()) {\r\n                                return;\r\n                            }\r\n                            setSelectedPowers([...selectedPowers, { ...power, activationValue: power.activationValue + (isCaptain ? 2 : 4) }]);\r\n                        }\r\n                    }}\r\n                    className={isPowerSelected(power) ? \"background-power-selection selected\" : maxNonCorePowersSelected() ? \"background-power-selection disabled\" : \"background-power-selection\"}\r\n                    key={`add_dialog_x_stat_${power.name}`}>\r\n                    <div>{power.name}</div>\r\n                    <div style={{ fontSize: \"0.65rem\" }}>{power.activationValue + (isCaptain ? 2 : 4)} / {power.strain} / {Array.isArray(power.category) ? `${power.category.join(\", \")}` : power.category}</div>\r\n                </div>\r\n                ) : null}\r\n            </div>\r\n        </div>\r\n        <button\r\n            onClick={() => maxPowersSelected() ? updatePowers(selectedPowers) : undefined}\r\n            className={maxPowersSelected() ? \"power-btn\" : \"power-btn disabled\"}\r\n        >{`${isCaptain ? \"Confirm Powers selection\" : \"Confirm Powers selection and finish creation\"}`}</button>\r\n    </React.Fragment>;\r\n};\r\n","import { useState } from \"react\";\r\nimport { Power } from \"../../types/Characters\";\r\n\r\nexport const SelectPowerUpgrades = (\r\n    { powers, upgradePowers }:\r\n        { powers: Power[]; upgradePowers(value: Power[]): void }\r\n) => {\r\n    const [selectedPowers, setSelectedPowers] = useState<Power[]>([]);\r\n    const updatedArray = () => powers.filter((pwr) => !selectedPowers.find((x) => x.name === pwr.name)).concat(selectedPowers).sort((a, b) => (a.name.localeCompare(b.name)));\r\n\r\n    return <div className=\"power-overview-container\">\r\n        <div className=\"modal-header\">Selected Powers Overview</div>\r\n        <div className=\"power-overview-hint\">Select 2 of the following powers to lower their activation value by 1 each</div>\r\n        {powers.map((power) =>\r\n            <div className={selectedPowers.find((pwr) => pwr.name === power.name) ? \"power-card selected\" : \"power-card\"}\r\n                onClick={() => {\r\n                    if (selectedPowers.find((pwr) => pwr.name === power.name)) {\r\n                        setSelectedPowers(selectedPowers.filter((pwr) => pwr.name !== power.name));\r\n                    } else {\r\n                        if (selectedPowers.length >= 2) {\r\n                            return;\r\n                        }\r\n                        setSelectedPowers([...selectedPowers, { ...power, activationValue: power.activationValue - 1 }]);\r\n                    }\r\n                }}>\r\n                <div className=\"power-preview-name\">{power.name}</div>\r\n                <div className=\"power-preview-infos\">{`Activation: ${power.activationValue}`} / {`Strain: ${power.strain}`} / {Array.isArray(power.category) ? `Categories: ${power.category.join(\", \")}` : `Category: ${power.category}`}</div>\r\n                <div className={power.effect.length <= 200 ? \"power-preview-large-text\" : power.effect.length <= 400 ? \"power-preview-medium-text\" : \"power-preview-small-text\"}>{power.effect}</div>\r\n            </div>)}\r\n        <button\r\n            onClick={() => selectedPowers.length === 2 ? upgradePowers(updatedArray()) : undefined}\r\n            className={selectedPowers.length === 2 ? \"power-btn\" : \"power-btn disabled\"}\r\n        >Confirm selection and finish creation</button>\r\n    </div>;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Backgrounds from \"../../data/Backgrounds.json\";\r\nimport { BackgroundEnum, BackgroundModifications, BackgroundOptions } from \"../../types/Background\";\r\nimport { Stats, StatsEnum } from \"../../types/Characters\";\r\n\r\nconst backgroundInformation = Backgrounds.backgrounds as BackgroundOptions[];\r\nconst getBackgroundInfos = (background: BackgroundEnum) => backgroundInformation.find((bg) => bg.name === background) as BackgroundOptions;\r\n\r\nexport const SelectStatsImprovements = ({ background, updateStatsCallback, updateAndContinue }: { background: BackgroundModifications; updateStatsCallback(value: React.SetStateAction<Partial<Stats>>): void; updateAndContinue(): void }) => {\r\n    const [selections, setSelections] = useState<Array<Partial<Stats>>>([]);\r\n    useEffect(() => {\r\n        const mand = background.statModifications.mandatory;\r\n        const parts: Partial<Stats> = {};\r\n        const merged: Partial<Stats> = Object.assign(parts, ...selections);\r\n        updateStatsCallback(Object.fromEntries([...Object.entries(mand), ...Object.entries(merged)].reduce((acc, [key, value]) => acc.set(key, (acc.get(key) || 0) + (value || 0)), new Map<string, number | undefined>())));\r\n    }, [selections]);\r\n    const isStatSelected = (statName: string) => selections.find((stat) => stat[statName as StatsEnum] !== undefined);\r\n    const statModificationsForBackground = getBackgroundInfos(background.name).statModifications;\r\n    const maxStatsReached = () => selections.length === statModificationsForBackground.chooseOptionals;\r\n    return <React.Fragment>\r\n        <div className=\"dialog-sub-header\">Granted Stats Improvements</div>\r\n        <div className=\"section-div\" >\r\n            {Object.entries(statModificationsForBackground.mandatory).map(([statName, statValue]) =>\r\n                <div className=\"background-stat-selection background-stat-selected\" key={`add_captain_dialog_mand_stat_${statName}`}>+{statValue} {statName}</div>\r\n            )}\r\n        </div>\r\n        <div className=\"dialog-sub-header\">{`Optional Stats Improvements (choose ${statModificationsForBackground.chooseOptionals} of the following)`}</div>\r\n        <div className=\"section-div\" >\r\n            {Object.entries(statModificationsForBackground.optional).map(([statName, statValue]) =>\r\n                <div\r\n                    onClick={() => {\r\n                        if (isStatSelected(statName)) {\r\n                            setSelections(selections.filter((stat) => stat[statName as StatsEnum] === undefined));\r\n                        } else {\r\n                            if (maxStatsReached()) {\r\n                                return;\r\n                            }\r\n                            setSelections([...selections, { [statName]: statValue }]);\r\n                        }\r\n                    }}\r\n                    className={isStatSelected(statName) ? \"background-stat-selection background-stat-selected\" : maxStatsReached() ? \"background-stat-selection background-stat-disabled\" : \"background-stat-selection\"}\r\n                    key={`add_captain_dialog_opt_stat_${statName}`}>\r\n                    +{statValue} {statName}\r\n                </div>\r\n            )}\r\n        </div>\r\n        <button\r\n            onClick={() => maxStatsReached() ? updateAndContinue() : undefined}\r\n            className={maxStatsReached() ? \"power-btn\" : \"power-btn disabled\"}\r\n        >Confirm Stats selection</button>\r\n    </React.Fragment>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DeleteItemIcon } from \"../../images\";\r\nimport { SET_CAPTAIN, SET_FIRST_MATE } from \"../../redux/actions\";\r\nimport { BackgroundModifications } from \"../../types/Background\";\r\nimport { Character, Power, Stats, StatsEnum } from \"../../types/Characters\";\r\nimport { isCaptain } from \"../../Utils\";\r\nimport { CharacterTable } from \"../CharacterTableComponent\";\r\nimport { SelectBackground } from \"./SelectBackground\";\r\nimport { SelectPowers } from \"./SelectPowers\";\r\nimport { SelectPowerUpgrades } from \"./SelectPowerUpgrades\";\r\nimport { SelectStatsImprovements } from \"./SelectStatsImprovements\";\r\n\r\nexport const CharacterCreationDialog = ({ baseCharacter, callback }: { baseCharacter: Character; callback(value: React.SetStateAction<boolean>): void }) => {\r\n    const [character, setCharacter] = useState<Character>(baseCharacter);\r\n    const [background, setBackground] = useState<BackgroundModifications>();\r\n    const [updatedStats, setUpdatedStats] = useState<Partial<Stats>>({});\r\n    const [selectedPowers, setSelectedPowers] = useState<Power[]>([]);\r\n    const [statsSelected, setStatsSelected] = useState<boolean>(false);\r\n    const dispatch = useDispatch();\r\n    const improvedStats = () => Object.keys(character.stats).reduce(\r\n        (acc, stat) => ({ ...acc, [stat]: (character.stats[stat as StatsEnum] || 0) + (updatedStats[stat as StatsEnum] || 0) }),\r\n        { \"Move\": 0, \"Fight\": 0, \"Shoot\": 0, \"Armour\": 0, \"Will\": 0, \"Health\": 0 }\r\n    );\r\n    const finishCreation = (powers: Power[]) => {\r\n        dispatch({\r\n            type: isCaptain(character.type) ? SET_CAPTAIN : SET_FIRST_MATE,\r\n            payload: {\r\n                ...character,\r\n                stats: improvedStats(),\r\n                background: {\r\n                    name: background?.name,\r\n                    powers,\r\n                },\r\n            },\r\n        });\r\n        callback(false);\r\n    };\r\n    return (\r\n        ReactDOM.createPortal(\r\n            <div className=\"block-background\">\r\n                <div className=\"modal\">\r\n                    <img\r\n                        className=\"close-dialog\"\r\n                        src={DeleteItemIcon}\r\n                        onClick={(e) => {\r\n                            callback(false);\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }} />\r\n                    {<div className=\"modal-header\">{!character.name ? `Give your ${isCaptain(character.type) ? \"Captain\" : \"First Mate\"} a name` : `${isCaptain(character.type) ? \"Captain\" : \"First Mate\"} - Overview`}</div>}\r\n                    <CharacterTable character={background ? { ...character, background: { name: background.name, powers: [] } } : character} statModifications={updatedStats} setNameCallback={(name: string) => setCharacter({ ...character, name })} />\r\n                    {!background ? <SelectBackground\r\n                        character={character}\r\n                        selectedBackground={background}\r\n                        updateAndContinue={(val: BackgroundModifications) => { setBackground(val); }}\r\n                    /> : null}\r\n                    {background && !statsSelected ? <SelectStatsImprovements\r\n                        background={background}\r\n                        updateStatsCallback={(value) => { setUpdatedStats(value); }}\r\n                        updateAndContinue={() => setStatsSelected(true)}\r\n                    /> : null}\r\n                    {background && statsSelected && !(selectedPowers.length > 0) ? <SelectPowers background={background} isCaptain={isCaptain(character.type)} updatePowers={isCaptain(character.type) ? setSelectedPowers : finishCreation} />\r\n                        : null}\r\n                    {background && statsSelected && selectedPowers.length > 0 ? <SelectPowerUpgrades powers={selectedPowers} upgradePowers={finishCreation} /> : null}\r\n                </div>\r\n            </div >,\r\n            document.getElementById(\"crewRoster\") as HTMLElement\r\n        )\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport * as Characters from \"../data/Characters.json\";\r\nimport { AddIcon } from \"../images\";\r\nimport { CharacterMetadata } from \"../types/Metadata\";\r\nimport { CharacterCreationDialog } from \"./characterDialog/CharacterCreationWrapper\";\r\n\r\nconst baseCaptain = Characters.Captain as CharacterMetadata;\r\nconst baseFirstMate = Characters.FirstMate as CharacterMetadata;\r\nexport const AddCharacterComponent = ({ isCaptain }: { isCaptain: boolean }) => {\r\n    const [showDialog, setDialogShown] = useState<boolean>(false);\r\n    return <div key={`${isCaptain ? \"captain\" : \"firstmate\"}_tile`} className=\"add-character-tile\" onClick={() => setDialogShown(true)}>\r\n        {showDialog ? <CharacterCreationDialog baseCharacter={isCaptain ? { ...baseCaptain, name: \"\" } : { ...baseFirstMate, name: \"\" }} callback={setDialogShown} /> : undefined}\r\n        <div>\r\n            <div style={{ float: \"left\" }}>\r\n                <img className=\"background-image add-image\" src={AddIcon} />\r\n                <div className=\"background-title add-title\">{`Click here to add a ${isCaptain ? \"Captain\" : \"First Mate\"} to your crew`}</div>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport * as SoldierList from \"../data/Soldiers.json\";\r\nimport { AddIcon, DeleteItemIcon } from \"../images/index\";\r\nimport { ADD_SOLDIERS } from \"../redux/actions\";\r\nimport { Soldier, StatsEnum } from \"../types/Characters\";\r\nimport { SoldierGroups, SoldierMetadata } from \"../types/Metadata\";\r\nimport { CrewState } from \"../types/State\";\r\nimport { getStatStrings } from \"../Utils\";\r\nimport { InputComponent } from \"./InputControl\";\r\n\r\nconst listOfSoldiers = SoldierList.Soldiers as SoldierMetadata[];\r\n\r\nexport const AddCrewDialog = ({ soldiersState, credits, callback }: { soldiersState: Soldier[]; credits: number; callback(value: React.SetStateAction<boolean>): void }) => {\r\n    const position = document.getElementById(\"root\")?.getBoundingClientRect();\r\n    const cssProperties = { top: (position?.top || 0) + 5, left: (position?.left || 0) + 5, width: (position?.width || 0) - 10, height: (position?.height || 0) - 10 };\r\n    const [soldiers, setSoldiers] = useState<Soldier[]>([]);\r\n    const updateName = (name: string, id: number) => {\r\n        const idx = soldiers.findIndex((soldier) => soldier.id === id);\r\n        if (idx !== -1) {\r\n            setSoldiers([...soldiers.slice(0, idx), { ...soldiers[idx], name }, ...soldiers.slice(idx + 1)]);\r\n        }\r\n    };\r\n    const dispatch = useDispatch();\r\n    const canSubmit = () => soldiersState.length + soldiers.length <= 8 && [...soldiersState, ...soldiers].filter((soldier) => soldier.group === SoldierGroups.Specialist).length <= 4;\r\n    const soldierSelection = (isSpecialist: boolean) => {\r\n        const list = listOfSoldiers.filter((soldier) => soldier.group === (isSpecialist ? SoldierGroups.Specialist : SoldierGroups.Standard));\r\n        const half = Math.ceil(list.length / 2);\r\n        return <div className=\"add-soldier-list-container\">\r\n            <div className=\"add-soldier-list-header\">{`${isSpecialist ? \"Specialist\" : \"Standard\"} Soldiers`}</div>\r\n            {list.map((soldier, idx) =>\r\n                <div\r\n                    style={idx >= half ? { gridArea: `${(idx - half) + 2} / 2` } : {}}\r\n                    className=\"add-soldier-list-item\"\r\n                    onClick={() => setSoldiers([...soldiers, { ...soldier, name: \"\", gearSlots: 1, id: soldiers.length + 1 }])}>\r\n                    <img className=\"add_dialog_icons\" src={AddIcon} />\r\n                    <div className=\"add_dialog_soldier_selection\">{`${soldier.type} ( ${soldier.cost} \\xA5 )`}</div>\r\n                </div>\r\n            )}\r\n        </div>\r\n            ;\r\n    };\r\n    return (\r\n        ReactDOM.createPortal(\r\n            <div className=\"block-background\">\r\n                <div style={cssProperties} className=\"modal\">\r\n                    <div className=\"modal-header\">Hire new crew members</div>\r\n                    {soldierSelection(false)}\r\n                    {soldierSelection(true)}\r\n                    <table className=\"character-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <td key={\"add_dialog_stat_header_name\"}>Name</td>\r\n                                <td key={\"add_dialog_stat_header_type\"}>Type</td>\r\n                                {Object.keys(StatsEnum).map((stat) => <td key={`add_dialog__stat_header_${stat}`}>{stat}</td>)}\r\n                                <td key={\"add_dialog_stat_header_gear\"}>Gear</td>\r\n                                <td key={\"add_dialog_stat_header_cost\"}>Cost</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {soldiers.map((soldier) => <tr>\r\n                                <td key={`add_dialog_name_${soldier.name}`}>\r\n                                    <InputComponent callback={(name: string) => updateName(name, soldier.id)} currentState={soldier.name} tooltip=\"Enter name\" cssClass=\"input-field\" />\r\n                                </td>\r\n                                <td key={`add_dialog_type_${soldier.type}`}>{soldier.type}</td>\r\n                                {getStatStrings(soldier.stats).map((stat) => <td key={`add_dialog_${soldier.name}_stat_${Object.keys(stat)[0]}`}>{stat[Object.keys(stat)[0]]}</td>)}\r\n                                {soldier.gear.length > 0 ? soldier.gear.map((gear) => <div key={`add_dialog_gear_${soldier.name}_${gear}`} className=\"gear-div\">{gear}</div>) : <td>-</td>}\r\n                                <td key={`add_dialog_cost_${soldier.cost}`}>{`${soldier.cost} \\xA5`}</td>\r\n                                <td onClick={() => setSoldiers(soldiers.filter((sold) => sold.id !== soldier.id))}>\r\n                                    <img className=\"add_dialog_icons\" src={DeleteItemIcon} />\r\n                                </td>\r\n                            </tr>)}\r\n                            <tr style={{ fontSize: \"1.1rem\" }}>\r\n                                <td className=\"totals-td\">Total</td>\r\n                                <td className=\"totals-td\" />\r\n                                <td className=\"totals-td\" />\r\n                                <td className=\"totals-td\" />\r\n                                <td className=\"totals-td\" />\r\n                                <td className=\"totals-td\" />\r\n                                <td className=\"totals-td\" />\r\n                                <td className=\"totals-td\" />\r\n                                <td className=\"totals-td\" />\r\n                                <td className=\"totals-td\" style={{ fontWeight: \"bold\" }}>{`${soldiers.reduce((acc, soldier) => acc + soldier.cost, 0)} \\xA5`}</td></tr>\r\n                        </tbody>\r\n                    </table>\r\n                    {[...soldiersState, ...soldiers].filter((soldier) => soldier.group === SoldierGroups.Specialist).length > 4 ? <div>You are not allowed to have more than 4 'Specialist' Soldiers in your crew</div> : null}\r\n                    {soldiersState.length + soldiers.length > 8 ? <div>You are not allowed to have more than 8 Soldiers in total in your crew</div> : null}\r\n                    {soldiers.reduce((acc, soldier) => acc + soldier.cost, 0) > credits ? <div>{\"You don't have enough credits ( \\xA5 ) to hire all of these crew men\"} </div> : null}\r\n                    <button\r\n                        onClick={(e) => {\r\n                            callback(false);\r\n                            dispatch({ type: ADD_SOLDIERS, payload: soldiers });\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }}\r\n                        className={canSubmit() ? \"button-enabled\" : \"button-disabled\"}>\r\n                        Hired!</button>\r\n                    <button\r\n                        onClick={(e) => {\r\n                            callback(false);\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }}\r\n                        className=\"button-cancel\">\r\n                        Cancel</button>\r\n                </div>\r\n            </div>,\r\n            document.getElementById(\"crewRoster\") as HTMLElement\r\n        )\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: CrewState) => ({ soldiersState: state.Soldiers, credits: state.Credits });\r\n\r\nexport const AddCrewDialogComponent = connect(mapStateToProps)(AddCrewDialog);\r\n","import React, { useState } from \"react\";\r\nimport { AddIcon } from \"../images\";\r\nimport { AddCrewDialogComponent } from \"./AddCrewDialog\";\r\n\r\nexport const AddCrewMemberComponent = () => {\r\n    const [showDialog, setDialogShown] = useState<boolean>(false);\r\n    return <div key={\"add_soldier_tile\"} className=\"add-character-tile\" onClick={() => setDialogShown(true)}>\r\n        {showDialog ? <AddCrewDialogComponent callback={setDialogShown} /> : undefined}\r\n        <div>\r\n            <div style={{ float: \"left\" }}>\r\n                <img className=\"background-image add-image\" src={AddIcon} />\r\n                <div className=\"background-title add-title\">{\"Click here to hire a new crew member\"}</div>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n};\r\n","import { store } from \"..\";\r\nimport { getBackgroundImage } from \"../images\";\r\nimport { Character, StatsEnum } from \"../types/Characters\";\r\n\r\nexport const CharacterComponent = ({ isCaptain }: { isCaptain: boolean }) => {\r\n    const state = store.getState();\r\n    const character = (isCaptain ? state.Captain : state.FirstMate) as Character;\r\n    const id = isCaptain ? \"captain\" : \"firstmate\";\r\n    const renderCaptainStats = () => <tr>\r\n        <td>{character.name}</td>\r\n        {Object.keys(character.stats).map((stat) => {\r\n            switch (stat) {\r\n                case \"Fight\":\r\n                case \"Shoot\":\r\n                case \"Will\":\r\n                    return <td key={`${id}_stat_${stat}`}>+{character.stats[stat as StatsEnum]}</td>;\r\n                default:\r\n                    return <td key={`${id}_stat_${String(stat)}`}>{character.stats[stat as StatsEnum]}</td>;\r\n            }\r\n        })}\r\n        <td>{character.level}</td>\r\n    </tr>;\r\n\r\n    return <div key={`${id}_tile`} className=\"character-tile\">\r\n        <div className=\"character-title\">\r\n            <div className=\"character-title-left\">{character.name}</div>\r\n            <div className=\"character-title-right\">{isCaptain ? \"Captain\" : \"First Mate\"}</div>\r\n        </div>\r\n        <table className=\"character-table\">\r\n            <thead>\r\n                <tr>\r\n                    <td key={`${id}_stat_header_name`}>Name</td>\r\n                    {Object.keys(StatsEnum).map((stat) => <td key={`${id}_stat_header_${stat}`}>{stat}</td>)}\r\n                    <td key={`${id}_stat_header_level`}>Level</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {renderCaptainStats()}\r\n            </tbody>\r\n        </table>\r\n        <div className=\"character-title\">Background</div>\r\n        <div>\r\n            <div style={{ float: \"left\" }}>\r\n                <img className=\"background-image-tile\" src={getBackgroundImage(character.background?.name)} />\r\n                <div className=\"background-title\">{character.background?.name}</div>\r\n            </div>\r\n            <table className=\"power-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>Power</td>\r\n                        <td>Activation Level</td>\r\n                        <td>Strain</td>\r\n                        <td>Category</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {character.background?.powers.map((power) =>\r\n                        <tr key={`${id}_power_${power.name}`}>\r\n                            <td>{power.name}</td><td>{power.activationValue}</td>\r\n                            <td>{power.strain}</td>\r\n                            <td>{Array.isArray(power.category) ? power.category.map((cat) => <div>{cat}</div>) : power.category}</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>;\r\n};\r\n","import React from \"react\";\r\nimport { Soldier, StatsEnum } from \"../types/Characters\";\r\nimport { getStatStrings } from \"../Utils\";\r\n\r\nexport const CrewMemberComponent = ({ soldier }: { soldier: Soldier }) => {\r\n    const renderStats = () => <tr>\r\n        <td>{soldier.name}</td>\r\n        {getStatStrings(soldier.stats).map((stat) => <td key={`${soldier.name}_stat_${Object.keys(stat)[0]}`}>{stat[Object.keys(stat)[0]]}</td>)}\r\n    </tr>;\r\n\r\n    return <div key={`${soldier.name}_tile`} className=\"character-tile\">\r\n        <div className=\"character-title\">\r\n            <div className=\"character-title-left\">{soldier.name}</div>\r\n            <div className=\"character-title-right\">{soldier.type} ({soldier.cost})</div>\r\n        </div>\r\n        <table className=\"character-table\">\r\n            <thead>\r\n                <tr>\r\n                    <td key={`${soldier.name}_stat_header_name`}>Name</td>\r\n                    {Object.keys(StatsEnum).map((stat) => <td key={`${soldier.name}_stat_header_${stat}`}>{stat}</td>)}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {renderStats()}\r\n            </tbody>\r\n        </table>\r\n        <div className=\"character-title\">Gear</div>\r\n        {soldier.gear.length > 0 ? soldier.gear.map((gearItem) => <div key={`gear_${soldier.name}_${gearItem}`} className=\"gear-div\">{gearItem}</div>) : <div className=\"gear-div\">-</div>}\r\n    </div>;\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { store } from \"../..\";\r\nimport { SET_CREWNAME } from \"../../redux/actions\";\r\nimport { InputComponent } from \"../InputControl\";\r\n\r\nexport const CrewNameComponent = () => {\r\n    const state = store.getState();\r\n    const dispatch = useDispatch();\r\n    const openHistory = () => {\r\n        console.error(\"TreasuryHistory - Implementation missing\");\r\n    };\r\n\r\n    const setCrewName = (name: string) => {\r\n        dispatch({ type: SET_CREWNAME, payload: name });\r\n    };\r\n\r\n    return <div className=\"statusbar-tiles\" style={{ minWidth: \"18rem\" }}>\r\n        <div className=\"toolbar-two-column-header-text small-text\" onClick={openHistory}>Crew Name</div>\r\n        <InputComponent callback={setCrewName} currentState={state.Title} tooltip=\"Your crew needs a name\" cssClass=\"input-field\" />\r\n    </div>;\r\n};\r\n","import { store } from \"../..\";\r\nimport { CrewIcon } from \"../../images\";\r\nimport { numberOfCrewMembers } from \"../../Utils\";\r\n\r\nexport const CrewSizeComponent = () => {\r\n    const state = store.getState();\r\n\r\n    const openHireMenu = () => {\r\n        console.error(\"HireMenu - Implementation missing\");\r\n    };\r\n\r\n    return <div className=\"statusbar-tiles\" title={\"Current size of your crew\"}>\r\n        <div className=\"toolbar-two-column-header-text small-text\" onClick={openHireMenu}>Crew Size</div>\r\n        <img\r\n            src={CrewIcon}\r\n            className=\"toolbar-icon\"\r\n            id={\"CrewIcon\"}\r\n            alt={\"CrewIcon\"}>\r\n        </img>\r\n        <div className=\"toolbar-text\">{numberOfCrewMembers()} / 10</div>\r\n    </div>;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { ReactReduxContext } from \"react-redux\";\r\nimport { TreasuryIcon } from \"../../images\";\r\nimport { CrewState } from \"../../types/State\";\r\n\r\nexport const TreasuryComponent = () => {\r\n    const { store } = useContext(ReactReduxContext);\r\n    const state = store.getState() as CrewState;\r\n    return <GenericTreasuryComponent treasury={state.Credits} text=\"Treasury\" title=\"Current amount of credits in your treasury\" />;\r\n};\r\n\r\nexport const GenericTreasuryComponent = ({ treasury, title, text }: { treasury: number; title: string; text: string }) => {\r\n\r\n    const openHistory = () => {\r\n        console.error(\"TreasuryHistory - Implementation missing\");\r\n    };\r\n\r\n    return <div className=\"statusbar-tiles\" title={title}>\r\n        <div className=\"toolbar-two-column-header-text small-text\" onClick={openHistory}>{text}</div>\r\n        <img\r\n            src={TreasuryIcon}\r\n            className=\"toolbar-icon\"\r\n            id={\"TreasuryIcon\"}\r\n            alt={\"TreasuryIcon\"}>\r\n        </img>\r\n        <div className=\"toolbar-text\">\r\n            {`${treasury} \\xA5`}\r\n        </div>\r\n    </div>;\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CrewState } from \"../../types/State\";\r\nimport { CrewNameComponent } from \"./CrewNameComponent\";\r\nimport { CrewSizeComponent } from \"./CrewSizeComponent\";\r\nimport { TreasuryComponent } from \"./TreasuryComponent\";\r\n\r\nexport const Statusbar = () =>\r\n    <div key=\"statusbar\" id=\"statusbar\" className=\"builder-statusbar\">\r\n        <CrewNameComponent />\r\n        <TreasuryComponent />\r\n        <CrewSizeComponent />\r\n    </div>;\r\n\r\nconst mapStateToProps = (state: CrewState) => state;\r\n\r\nexport const StatusbarComponent = connect(mapStateToProps)(Statusbar);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { AddCharacterComponent } from \"../components/AddCharacterComponent\";\r\nimport { AddCrewMemberComponent } from \"../components/AddCrewMemberComponent\";\r\nimport { CharacterComponent } from \"../components/CharacterComponent\";\r\nimport { CrewMemberComponent } from \"../components/CrewMemberComponent\";\r\nimport { StatusbarComponent } from \"../components/statusbar/StatusBarComponent\";\r\nimport { Character, Soldier } from \"../types/Characters\";\r\nimport { CrewState } from \"../types/State\";\r\nimport { numberOfSoldiers } from \"../Utils\";\r\n\r\nexport const CrewOverview = ({ captain, firstMate, soldiers }: { captain: Character | undefined; firstMate: Character | undefined; soldiers: Soldier[] | undefined }) => <React.Fragment>\r\n    <StatusbarComponent key=\"statusbarComponent\" />\r\n    <div key=\"crewRoster\" id=\"crewRoster\" style={{ paddingTop: \"0.5rem\" }}>\r\n        <div key=\"characterContainer\" style={{ float: \"left\" }}>\r\n            {captain ? <CharacterComponent key=\"captainComponent\" isCaptain={true} /> : <AddCharacterComponent isCaptain={true} />}\r\n            {firstMate ? <CharacterComponent key=\"firstMateComponent\" isCaptain={false} /> : <AddCharacterComponent isCaptain={false} />}\r\n        </div>\r\n        {soldiers && soldiers.length > 0 ? soldiers.map((soldier) => <CrewMemberComponent key={`crew_member_${soldier.name}`} soldier={soldier} />) : undefined}\r\n        {numberOfSoldiers() < 8 ? <AddCrewMemberComponent /> : undefined}\r\n    </div>\r\n</React.Fragment>;\r\n\r\nconst mapStateToProps = (state: CrewState) => ({\r\n    captain: state.Captain,\r\n    firstMate: state.FirstMate,\r\n    soldiers: state.Soldiers,\r\n});\r\n\r\nexport const CrewPage = connect(mapStateToProps)(CrewOverview);\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as Crew from \"../data/Samples/Firefly.json\";\r\nimport { CreateCrewIcon, ImportCrewIcon, UseSampleIcon } from \"../images\";\r\nimport { SET_CREW } from \"../redux/actions\";\r\nimport { CrewState } from '../types/State';\r\n\r\nexport const LandingPage = () => {\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"landing-page \">\r\n            <div style={{ gridArea: \"1/1/1/4\", width: \"100%\", textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.5rem\" }}>Stargrave Crew Configuration - choose how to continue</div>\r\n            <label htmlFor=\"file-uploader\" className=\"landing-page-columns\" style={{ gridArea: \"2/1\" }}>\r\n                <input\r\n                    id=\"file-uploader\"\r\n                    type=\"file\"\r\n                    accept=\".json\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={() => {\r\n                        const reader = new FileReader();\r\n                        reader.onload = (ev: ProgressEvent<FileReader>) => {\r\n                            dispatch({ type: SET_CREW, payload: JSON.parse(ev.target?.result as string) });\r\n                            history.push(\"/Builder\");\r\n                        };\r\n                        reader.readAsText((document.querySelector(\"#file-uploader\") as HTMLInputElement)?.files?.item(0) as File);\r\n                    }}\r\n                />\r\n                <div style={{ gridArea: \"1/1\" }} className=\"landing-page-column-header\">Load an existing crew from file</div>\r\n                <img style={{ gridArea: \"2/1\" }} alt=\"ImportWarband\" className=\"landing-page-column-icon\" src={ImportCrewIcon} />\r\n            </label>\r\n            <div className=\"landing-page-columns\" style={{ gridArea: \"2/2\" }} onClick={() => history.push(\"/NewCrew\")}>\r\n                <div className=\"landing-page-column-header\">Create a new crew</div>\r\n                <img alt=\"CreateWarband\" className=\"landing-page-column-icon\" src={CreateCrewIcon} />\r\n            </div>\r\n            <div\r\n                className=\"landing-page-columns\"\r\n                style={{ gridArea: \"2/3\" }}\r\n                onClick={() => {\r\n                    dispatch({ type: SET_CREW, payload: (Crew as any).default as CrewState });\r\n                    history.push(\"/NewCrew\");\r\n                }}>\r\n                <div className=\"landing-page-column-header\">Use a sample crew to start</div>\r\n                <img alt=\"SampleWarband\" className=\"landing-page-column-icon\" src={UseSampleIcon} />\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\n","// import * as Characters from \"../data/Characters.json\";\r\nimport { Character, Soldier } from \"./Characters\";\r\n\r\nexport interface CrewState {\r\n    Credits: number;\r\n    Captain?: Character;\r\n    FirstMate?: Character;\r\n    Soldiers: Soldier[];\r\n    Title: string;\r\n}\r\n\r\nexport const InitialCrewState: CrewState = {\r\n    Credits: 400,\r\n    Soldiers: [],\r\n    Title: \"Firefly\",\r\n    // Title: \"\",\r\n};\r\n","import React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { connect, Provider } from \"react-redux\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { createStore } from \"redux\";\nimport \"./App.css\";\nimport { CrewPage } from \"./pages/CrewPage\";\nimport { LandingPage } from \"./pages/LandingPage\";\nimport { stateReducer } from \"./redux/reducer\";\n\nconst App = () =>\n  <BrowserRouter>\n    <div className=\"app-body\">\n      <Switch>\n        {/* <Route path=\"/SampleWarbands\" component={SampleWarbandsPage} /> */}\n        <Route path=\"/NewCrew\" component={CrewPage} />\n        {/* <Route path=\"/Builder\" component={BuilderPage} /> */}\n        <Route path=\"/\" component={LandingPage} />\n      </Switch>\n    </div>\n  </BrowserRouter>;\n\nexport const AppContainer = connect()(App);\nexport const store = createStore(stateReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { Character } from \"../types/Characters\";\r\nimport { CrewState, InitialCrewState } from \"../types/State\";\r\nimport * as ReduxActions from \"./actions\";\r\n\r\n// tslint:disable-next-line: cyclomatic-complexity\r\nexport function stateReducer(state: CrewState = InitialCrewState, action: ReduxActions.Actions): CrewState {\r\n    switch (action.type) {\r\n        case ReduxActions.SET_CREW:\r\n            return action.payload;\r\n        case ReduxActions.SET_CREWNAME:\r\n            return { ...state, Title: action.payload };\r\n        case ReduxActions.SET_CAPTAINS_NAME:\r\n            return { ...state, Captain: { ...state.Captain as Character, name: action.payload } };\r\n        case ReduxActions.SET_CAPTAIN:\r\n            return { ...state, Captain: action.payload };\r\n        case ReduxActions.SET_FIRST_MATE:\r\n            return { ...state, FirstMate: action.payload };\r\n        case ReduxActions.ADD_SOLDIERS:\r\n            const soldiers = state.Soldiers ? [...state.Soldiers, ...action.payload] : action.payload;\r\n            return { ...state, Soldiers: soldiers, Credits: state.Credits - action.payload.reduce((acc, soldier) => acc + soldier.cost, 0) };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"],"sourceRoot":""}